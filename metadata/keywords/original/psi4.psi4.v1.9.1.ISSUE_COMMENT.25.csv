id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936:1100,Modifiability,config,configurations,1100,"That was me playing around, trying to figure out when to use the different dertypes. The level of theory I will be using is w97X-D DFT perhaps in the future but with Hartree-Fock I wanted to test the code that I obtain something back. . I've always used the default before when calculating single point energy scans so when to apply to which different level of theory is a little lost on me. . ```python. dertype='energy'; dertype'gradient'. ```. How would I get around this issue? In my mind. **Option 1**. Give it more juice (like CPU). If i have nodes on a cluster how do I distribute the job between the nodes perhaps. . **Option 2**. Play around with option parameters and maybe obtain orbitals from previous geometry? Is that faster?. https://psicode.org/psi4manual/master/autodir_options_c/scf__guess.html. Should I be changing into the `guess` parameter?. **Update 1** . I was playing around a bit more:. ```; Module time:; 	user time = 221.38 seconds = 3.69 minutes; 	system time = 8.88 seconds = 0.15 minutes; 	total time = 38 seconds = 0.63 minutes; ```. The time decreased when I set the configurations to ` 'g_convergence': 'gau_loose'` I think from `gau_tight`? `dertype` is still `gradient`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936
https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936:191,Testability,test,test,191,"That was me playing around, trying to figure out when to use the different dertypes. The level of theory I will be using is w97X-D DFT perhaps in the future but with Hartree-Fock I wanted to test the code that I obtain something back. . I've always used the default before when calculating single point energy scans so when to apply to which different level of theory is a little lost on me. . ```python. dertype='energy'; dertype'gradient'. ```. How would I get around this issue? In my mind. **Option 1**. Give it more juice (like CPU). If i have nodes on a cluster how do I distribute the job between the nodes perhaps. . **Option 2**. Play around with option parameters and maybe obtain orbitals from previous geometry? Is that faster?. https://psicode.org/psi4manual/master/autodir_options_c/scf__guess.html. Should I be changing into the `guess` parameter?. **Update 1** . I was playing around a bit more:. ```; Module time:; 	user time = 221.38 seconds = 3.69 minutes; 	system time = 8.88 seconds = 0.15 minutes; 	total time = 38 seconds = 0.63 minutes; ```. The time decreased when I set the configurations to ` 'g_convergence': 'gau_loose'` I think from `gau_tight`? `dertype` is still `gradient`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1908613936
https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575:36,Availability,avail,available,36,"Be aware that analytic Hessians are available for Hartree–Fock (and a few DFT fctls that no one uses) only. So if wB97X-D is the target, it probably is best to prototype with `freq(..., dertype='gradient')` for consistency (as you were already doing). For all those displacements, QCFractal is the proposed way to run through them in parallel. You can get an idea how it works with a ""snowflake"" calc that just uses all the threads on a single node (and doesn't require database storage setup). conda-wise you'd need to `conda install qcfractal postgresql -c conda-forge`. An example is https://github.com/psi4/psi4/blob/master/tests/ddd-deriv/input.dat#L40-L47 . Snowflake is a lightweight single-node route. The full QCFractal approach is backed by a database (yours; not MolSSI's) and handles distributing gradient jobs through your cluster's queue. It takes a little more setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575
https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575:527,Deployability,install,install,527,"Be aware that analytic Hessians are available for Hartree–Fock (and a few DFT fctls that no one uses) only. So if wB97X-D is the target, it probably is best to prototype with `freq(..., dertype='gradient')` for consistency (as you were already doing). For all those displacements, QCFractal is the proposed way to run through them in parallel. You can get an idea how it works with a ""snowflake"" calc that just uses all the threads on a single node (and doesn't require database storage setup). conda-wise you'd need to `conda install qcfractal postgresql -c conda-forge`. An example is https://github.com/psi4/psi4/blob/master/tests/ddd-deriv/input.dat#L40-L47 . Snowflake is a lightweight single-node route. The full QCFractal approach is backed by a database (yours; not MolSSI's) and handles distributing gradient jobs through your cluster's queue. It takes a little more setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575
https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575:703,Integrability,rout,route,703,"Be aware that analytic Hessians are available for Hartree–Fock (and a few DFT fctls that no one uses) only. So if wB97X-D is the target, it probably is best to prototype with `freq(..., dertype='gradient')` for consistency (as you were already doing). For all those displacements, QCFractal is the proposed way to run through them in parallel. You can get an idea how it works with a ""snowflake"" calc that just uses all the threads on a single node (and doesn't require database storage setup). conda-wise you'd need to `conda install qcfractal postgresql -c conda-forge`. An example is https://github.com/psi4/psi4/blob/master/tests/ddd-deriv/input.dat#L40-L47 . Snowflake is a lightweight single-node route. The full QCFractal approach is backed by a database (yours; not MolSSI's) and handles distributing gradient jobs through your cluster's queue. It takes a little more setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575
https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575:846,Performance,queue,queue,846,"Be aware that analytic Hessians are available for Hartree–Fock (and a few DFT fctls that no one uses) only. So if wB97X-D is the target, it probably is best to prototype with `freq(..., dertype='gradient')` for consistency (as you were already doing). For all those displacements, QCFractal is the proposed way to run through them in parallel. You can get an idea how it works with a ""snowflake"" calc that just uses all the threads on a single node (and doesn't require database storage setup). conda-wise you'd need to `conda install qcfractal postgresql -c conda-forge`. An example is https://github.com/psi4/psi4/blob/master/tests/ddd-deriv/input.dat#L40-L47 . Snowflake is a lightweight single-node route. The full QCFractal approach is backed by a database (yours; not MolSSI's) and handles distributing gradient jobs through your cluster's queue. It takes a little more setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575
https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575:628,Testability,test,tests,628,"Be aware that analytic Hessians are available for Hartree–Fock (and a few DFT fctls that no one uses) only. So if wB97X-D is the target, it probably is best to prototype with `freq(..., dertype='gradient')` for consistency (as you were already doing). For all those displacements, QCFractal is the proposed way to run through them in parallel. You can get an idea how it works with a ""snowflake"" calc that just uses all the threads on a single node (and doesn't require database storage setup). conda-wise you'd need to `conda install qcfractal postgresql -c conda-forge`. An example is https://github.com/psi4/psi4/blob/master/tests/ddd-deriv/input.dat#L40-L47 . Snowflake is a lightweight single-node route. The full QCFractal approach is backed by a database (yours; not MolSSI's) and handles distributing gradient jobs through your cluster's queue. It takes a little more setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3125#issuecomment-1909486575
https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377:371,Availability,error,error,371,"Thanks very much for the report and problem localization. Were you able to test that editing those two lines led to a running psi4 (as opposed to revealing the next problem :-) )? I can understand if permissions on the hpc system don't allow editing. If those two lines are it, I can work on a v1.9.1 release. @coltonbh, I wonder if this is related to the psi4-in-docker error you were getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377
https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377:301,Deployability,release,release,301,"Thanks very much for the report and problem localization. Were you able to test that editing those two lines led to a running psi4 (as opposed to revealing the next problem :-) )? I can understand if permissions on the hpc system don't allow editing. If those two lines are it, I can work on a v1.9.1 release. @coltonbh, I wonder if this is related to the psi4-in-docker error you were getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377
https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377:75,Testability,test,test,75,"Thanks very much for the report and problem localization. Were you able to test that editing those two lines led to a running psi4 (as opposed to revealing the next problem :-) )? I can understand if permissions on the hpc system don't allow editing. If those two lines are it, I can work on a v1.9.1 release. @coltonbh, I wonder if this is related to the psi4-in-docker error you were getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377
https://github.com/psi4/psi4/issues/3126#issuecomment-1911070621:18,Deployability,install,install,18,"It was in a local install, so I was able to modify that file; the code is now running as expected on this finicky system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911070621
https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267:434,Availability,avail,available,434,"My issue was trying to use a `psi4` executable built inside a container from the `psi4` python client from my host machine--i.e., to treat the `psi4` executable as an external executable I could call from `python`; however, the `psi4` python client requires close coupling to the executable (access to shared files) so this separation was not possible because the client has to access files shared with the executable, which are only available inside the container :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267
https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267:264,Modifiability,coupling,coupling,264,"My issue was trying to use a `psi4` executable built inside a container from the `psi4` python client from my host machine--i.e., to treat the `psi4` executable as an external executable I could call from `python`; however, the `psi4` python client requires close coupling to the executable (access to shared files) so this separation was not possible because the client has to access files shared with the executable, which are only available inside the container :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267
https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267:292,Security,access,access,292,"My issue was trying to use a `psi4` executable built inside a container from the `psi4` python client from my host machine--i.e., to treat the `psi4` executable as an external executable I could call from `python`; however, the `psi4` python client requires close coupling to the executable (access to shared files) so this separation was not possible because the client has to access files shared with the executable, which are only available inside the container :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267
https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267:378,Security,access,access,378,"My issue was trying to use a `psi4` executable built inside a container from the `psi4` python client from my host machine--i.e., to treat the `psi4` executable as an external executable I could call from `python`; however, the `psi4` python client requires close coupling to the executable (access to shared files) so this separation was not possible because the client has to access files shared with the executable, which are only available inside the container :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1915917267
https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288:276,Deployability,configurat,configuration,276,"> I really want to know how you stumbled onto this. :-) Yeah, so ""superbigam"" is now 7-7-4-12-7-5, and when I built that in Dec for 2.8.0 I only set the 12 for eri3, forgetting my own advice to make eri2 equal eri3. So rebuilding for 2.8.2, I knew I had to add symbols to the configuration.cc patch for eri2. Started searching patterns and realized I had P twice in the spdfg string. Then realized libmints (where I thought I had copied it from) had the same trouble. Then realized that libint had a mix of troubles.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288
https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288:293,Deployability,patch,patch,293,"> I really want to know how you stumbled onto this. :-) Yeah, so ""superbigam"" is now 7-7-4-12-7-5, and when I built that in Dec for 2.8.0 I only set the 12 for eri3, forgetting my own advice to make eri2 equal eri3. So rebuilding for 2.8.2, I knew I had to add symbols to the configuration.cc patch for eri2. Started searching patterns and realized I had P twice in the spdfg string. Then realized libmints (where I thought I had copied it from) had the same trouble. Then realized that libint had a mix of troubles.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288
https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288:276,Modifiability,config,configuration,276,"> I really want to know how you stumbled onto this. :-) Yeah, so ""superbigam"" is now 7-7-4-12-7-5, and when I built that in Dec for 2.8.0 I only set the 12 for eri3, forgetting my own advice to make eri2 equal eri3. So rebuilding for 2.8.2, I knew I had to add symbols to the configuration.cc patch for eri2. Started searching patterns and realized I had P twice in the spdfg string. Then realized libmints (where I thought I had copied it from) had the same trouble. Then realized that libint had a mix of troubles.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288
https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416:183,Availability,Error,Error,183,"@davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?. ```; Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416
https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416:300,Energy Efficiency,allocate,allocated,300,"@davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?. ```; Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416
https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416:15,Testability,test,tests,15,"@davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?. ```; Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416
https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416:165,Testability,test,test,165,"@davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?. ```; Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:193,Availability,Error,Error,193,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:930,Deployability,configurat,configurations,930,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:310,Energy Efficiency,allocate,allocated,310,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:930,Modifiability,config,configurations,930,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:17,Testability,test,tests,17,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:167,Testability,test,test,167,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:705,Testability,test,test,705,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:865,Testability,test,test,865,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:958,Testability,test,tested,958,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904
https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813:148,Availability,down,download,148,"Thanks for your interest in Psi4+BrianQC. The second forum post you linked was a little too optimistic, so there isn't a way I know to use a binary download of Psi4 with BrianQC, even with a license. I don't know for sure, but I think BrianQC is Linux only. At one point the BrianQC ppl had an cloud instance of Psi4+BrianQC, but that doesn't look active now. From their website, their Dec 2023 release works with Psi4 v1.6. If you're not accustomed to compiling code, you might ask the BrianQC people about a cloud setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813
https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813:395,Deployability,release,release,395,"Thanks for your interest in Psi4+BrianQC. The second forum post you linked was a little too optimistic, so there isn't a way I know to use a binary download of Psi4 with BrianQC, even with a license. I don't know for sure, but I think BrianQC is Linux only. At one point the BrianQC ppl had an cloud instance of Psi4+BrianQC, but that doesn't look active now. From their website, their Dec 2023 release works with Psi4 v1.6. If you're not accustomed to compiling code, you might ask the BrianQC people about a cloud setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813
https://github.com/psi4/psi4/issues/3134#issuecomment-2162774748:484,Availability,error,error,484,"""This means the reference state is not stable."" In other words, the SCF solver landed on an excited state, but our algorithm is designed to work only on local minima. You'll need to land on the minimum, either by changing convergence settings such as initial guess or instability analysis. Without knowing more details about your system, I don't know which to recommend. Is the language of ""This means the reference state is not stable."" new to you? If it is, we may need to make the error message more explicit... This is an old issue, but I'd like to keep the issue list trimmer than it currently is. If there's no response from you in a week or so, I'll close this, but feel free to reopen afterwards if the issue isn't settled. Inadvertent excited states are bad.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3134#issuecomment-2162774748
https://github.com/psi4/psi4/issues/3134#issuecomment-2162774748:490,Integrability,message,message,490,"""This means the reference state is not stable."" In other words, the SCF solver landed on an excited state, but our algorithm is designed to work only on local minima. You'll need to land on the minimum, either by changing convergence settings such as initial guess or instability analysis. Without knowing more details about your system, I don't know which to recommend. Is the language of ""This means the reference state is not stable."" new to you? If it is, we may need to make the error message more explicit... This is an old issue, but I'd like to keep the issue list trimmer than it currently is. If there's no response from you in a week or so, I'll close this, but feel free to reopen afterwards if the issue isn't settled. Inadvertent excited states are bad.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3134#issuecomment-2162774748
https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:211,Availability,down,down,211,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698
https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:17,Energy Efficiency,energy,energy,17,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698
https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:179,Energy Efficiency,energy,energy,179,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698
https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:413,Integrability,depend,dependent,413,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698
https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:352,Testability,log,logical,352,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698
https://github.com/psi4/psi4/issues/3135#issuecomment-1969513731:102,Testability,test,tests,102,"Currently we're using ; `pyddx 0.6.0`; and ; `psi4 1.8.1 `. To add to this issue further, a lot of my tests with def2-TZVPPD either a) fail to converge entirely or b) hang indefinitely.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1969513731
https://github.com/psi4/psi4/issues/3135#issuecomment-1969516458:44,Testability,test,tests,44,"> To add to this issue further, a lot of my tests with def2-TZVPPD either a) fail to converge entirely or b) hang indefinitely. I am also seeing this with psi4 1.9 as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1969516458
https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:58,Energy Efficiency,energy,energy,58,"I gave this a try (using Psi4 1.9.1) and noticed that the energy converged to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230
https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:784,Energy Efficiency,Charge,Charges,784,"I gave this a try (using Psi4 1.9.1) and noticed that the energy converged to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230
https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:822,Energy Efficiency,Charge,Charge,822,"I gave this a try (using Psi4 1.9.1) and noticed that the energy converged to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230
https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:1905,Energy Efficiency,energy,energy,1905,"d to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230
https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:1169,Testability,test,test,1169,"d to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3353,Energy Efficiency,energy,energy,3353,"30000 -1.159784510000 ; C -0.088845540000 1.208129230000 1.696445160000 ; N -0.815424450000 3.890690130000 2.392010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3718,Energy Efficiency,energy,energy,3718,"92010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H 1 0.000003 0.999997 ; ```. I've tried using different initial guesses, VDW radii, etc but nothing has helped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3855,Energy Efficiency,charge,charge,3855,"92010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H 1 0.000003 0.999997 ; ```. I've tried using different initial guesses, VDW radii, etc but nothing has helped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3882,Energy Efficiency,Charge,Charges,3882,"92010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H 1 0.000003 0.999997 ; ```. I've tried using different initial guesses, VDW radii, etc but nothing has helped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3921,Energy Efficiency,Charge,Charge,3921,"92010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H 1 0.000003 0.999997 ; ```. I've tried using different initial guesses, VDW radii, etc but nothing has helped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:2324,Testability,test,test,2324,"9560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; """"""; ); # create the psi4 job; spec = Model(method=""PBE0"", basis=""def2-TZVPPD""); task = AtomicInput(; molecule=qc_mol,; driver=""properties"",; keywords={; ""function_kwargs"": {; ""properties"": [; # ""dipole_polarizabilities"",; ""mbis_charges"",; ""quadrupole"",; ""mulliken_charges"",; ""dipole"",; ""lowdin_charges"",; #""wiberg_lowdin_indices"",; #""mayer_indices"",; ]; },; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; 'ddx_radii_set': 'bondi',; 'ddx_radii_scaling': 1.2,; 'ddx_solvent_epsilon': 78.4,; },; model=spec,; ); result = qcengine.compute(; input_data=task, raise_error=True, task_config={""ncores"": 4}, program=""psi4""; ); print(result.stdout); ```. Guess Read (Psi4 input file):; ```; molecule test {; 1 1; C -0.260042020000 0.885462630000 -1.159784510000 ; C -0.088845540000 1.208129230000 1.696445160000 ; N -0.815424450000 3.890690130000 2.392010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_sph",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651
https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343:248,Energy Efficiency,charge,charges,248,"I was able to get the CHNO molecule to converge to something reasonable with pbe0/def2-TZVPPD/pcm by setting `dft_bs_radius_alpha 5.0`. Doing this with the I-containing molecule works partly, but I found that I was only able to get reasonable MBIS charges when switching to the LRC functional wb97x/def2-TZVPPD/pcm. Simply adding d3bj onto pbe0 did not seem to work. I was also able to reproduce the issue with multiple DFT methods; HF seemed ""stable"" other than some convergence issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343
https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343:316,Usability,Simpl,Simply,316,"I was able to get the CHNO molecule to converge to something reasonable with pbe0/def2-TZVPPD/pcm by setting `dft_bs_radius_alpha 5.0`. Doing this with the I-containing molecule works partly, but I found that I was only able to get reasonable MBIS charges when switching to the LRC functional wb97x/def2-TZVPPD/pcm. Simply adding d3bj onto pbe0 did not seem to work. I was also able to reproduce the issue with multiple DFT methods; HF seemed ""stable"" other than some convergence issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343
https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:238,Energy Efficiency,Energy,Energy,238,"I am reviewing a paper related to some calculations on transition metal complexes, and I noticed a pretty significant difference in the convergence for these systems. With the fix, I get decent convergence; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1560.62324919175876 -1.56062e+03 0.00000e+00 ; @DF-UKS iter 1: -1504.03705732702224 5.65862e+01 3.11225e-02 ADIIS/DIIS; @DF-UKS iter 2: -1487.30385546810771 1.67332e+01 4.19089e-02 ADIIS/DIIS; @DF-UKS iter 3: -1595.07318567437824 -1.07769e+02 1.91720e-02 ADIIS/DIIS; @DF-UKS iter 4: -1564.30445668282618 3.07687e+01 3.31275e-02 ADIIS/DIIS; @DF-UKS iter 5: -1603.11290614082509 -3.88084e+01 1.87126e-02 ADIIS/DIIS; @DF-UKS iter 6: -1602.92895467184917 1.83951e-01 1.71826e-02 ADIIS/DIIS; @DF-UKS iter 7: -1614.51158717592830 -1.15826e+01 1.03141e-02 ADIIS/DIIS; @DF-UKS iter 8: -1616.83699931720344 -2.32541e+00 6.19589e-03 ADIIS/DIIS; @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473
https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:1782,Energy Efficiency,Energy,Energy,1782,"14.51158717592830 -1.15826e+01 1.03141e-02 ADIIS/DIIS; @DF-UKS iter 8: -1616.83699931720344 -2.32541e+00 6.19589e-03 ADIIS/DIIS; @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ; @DF-UKS iter 1: -1609.10793037762460 8.61725e+00 1.56461e-02 ADIIS/DIIS; @DF-UKS iter 2: -1513.75875168526773 9.53492e+01 2.55145e-02 ADIIS/DIIS; @DF-UKS iter 3: -1593.19511863655589 -7.94364e+01 2.00404e-02 ADIIS/DIIS; @DF-UKS iter 4: -1609.55961522174721 -1.63645e+01 1.54082e-02 ADIIS/DIIS; @DF-UKS iter 5: -1608.66721055388211 8.92405e-01 1.58428e-02 ADIIS/DIIS; @DF-UKS iter 6: -1606.15983763646909 2.50737e+00 1.65518e-02 ADIIS/DIIS; @DF-UKS iter 7: -1609.08727763024035 -2.92744e+00 1.55973e-02 ADIIS/DIIS; @DF-UKS iter 8: -1609.36600587362682 -2.78728e-01 1.55155e-02 ADIIS/DIIS; @DF-UKS iter 9: -1609.42810677829789 -6.21009e-02 1.54740e-02 ADIIS/DIIS; @DF-UKS iter 10: -1609.36720577250594 6.09010e-02 1.54956e-02 ADIIS/DIIS; @DF-UKS iter 11: -1609.31568466585577 5.15211e-02 1.5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473
https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:1909,Energy Efficiency,Energy,Energy,1909," @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ; @DF-UKS iter 1: -1609.10793037762460 8.61725e+00 1.56461e-02 ADIIS/DIIS; @DF-UKS iter 2: -1513.75875168526773 9.53492e+01 2.55145e-02 ADIIS/DIIS; @DF-UKS iter 3: -1593.19511863655589 -7.94364e+01 2.00404e-02 ADIIS/DIIS; @DF-UKS iter 4: -1609.55961522174721 -1.63645e+01 1.54082e-02 ADIIS/DIIS; @DF-UKS iter 5: -1608.66721055388211 8.92405e-01 1.58428e-02 ADIIS/DIIS; @DF-UKS iter 6: -1606.15983763646909 2.50737e+00 1.65518e-02 ADIIS/DIIS; @DF-UKS iter 7: -1609.08727763024035 -2.92744e+00 1.55973e-02 ADIIS/DIIS; @DF-UKS iter 8: -1609.36600587362682 -2.78728e-01 1.55155e-02 ADIIS/DIIS; @DF-UKS iter 9: -1609.42810677829789 -6.21009e-02 1.54740e-02 ADIIS/DIIS; @DF-UKS iter 10: -1609.36720577250594 6.09010e-02 1.54956e-02 ADIIS/DIIS; @DF-UKS iter 11: -1609.31568466585577 5.15211e-02 1.55009e-02 ADIIS/DIIS; @DF-UKS iter 12: -1609.30063403912891 1.50506e-02 1.55077e-02 ADIIS/DIIS; @DF-UKS iter 13: -1527.666502700",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473
https://github.com/psi4/psi4/pull/3138#issuecomment-2056135687:26,Energy Efficiency,energy,energy,26,"Yes, by testing the guess energy for H atom.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2056135687
https://github.com/psi4/psi4/pull/3138#issuecomment-2056135687:8,Testability,test,testing,8,"Yes, by testing the guess energy for H atom.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2056135687
https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707:41,Availability,failure,failures,41,"Looks like there are some unrelated test failures, but this one is ready to go. As shown by the changes in the pytest guess energies, the new code reaches a considerably lower SAD guess energy for the HF molecule: -100.02909951427 vs -99.63941801281894. Large improvements are expected especially for systems containing hydrogen atoms, since the existing code only includes 0.5 electrons on those atoms.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707
https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707:186,Energy Efficiency,energy,energy,186,"Looks like there are some unrelated test failures, but this one is ready to go. As shown by the changes in the pytest guess energies, the new code reaches a considerably lower SAD guess energy for the HF molecule: -100.02909951427 vs -99.63941801281894. Large improvements are expected especially for systems containing hydrogen atoms, since the existing code only includes 0.5 electrons on those atoms.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707
https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707:36,Testability,test,test,36,"Looks like there are some unrelated test failures, but this one is ready to go. As shown by the changes in the pytest guess energies, the new code reaches a considerably lower SAD guess energy for the HF molecule: -100.02909951427 vs -99.63941801281894. Large improvements are expected especially for systems containing hydrogen atoms, since the existing code only includes 0.5 electrons on those atoms.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707
https://github.com/psi4/psi4/pull/3143#issuecomment-1995408756:775,Modifiability,plugin,plugin,775,"> > ## User API & Changelog headlines; > > ```; > > * [x] N/A; > > ```; > ; > The entire `psi::Matrix` class is marked as `PSI_API`, so I think adding any public member functions amounts to a change in API. The reason I didn't mark anything here as an API change is because neither of the new `eigen_map` functions are added to the list of exported `Psi4::Matrix` functions in `export_mints.cc`, which means that they cannot be utilized in the PsiAPI or Psithon input modes. Which is fine, because you'd probably prefer the `Psi4::Matrix` as a NumPy array in those contexts anyway. . The `PSI_API` flag makes the symbols for these functions visible in the Psi4 shared object library, but I'm not sure if that alone constitutes a User API change. I suppose it could count for plugin developers, as it is a new functionality within Psi4 that they can utilize in their plugins.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3143#issuecomment-1995408756
https://github.com/psi4/psi4/pull/3143#issuecomment-1995408756:866,Modifiability,plugin,plugins,866,"> > ## User API & Changelog headlines; > > ```; > > * [x] N/A; > > ```; > ; > The entire `psi::Matrix` class is marked as `PSI_API`, so I think adding any public member functions amounts to a change in API. The reason I didn't mark anything here as an API change is because neither of the new `eigen_map` functions are added to the list of exported `Psi4::Matrix` functions in `export_mints.cc`, which means that they cannot be utilized in the PsiAPI or Psithon input modes. Which is fine, because you'd probably prefer the `Psi4::Matrix` as a NumPy array in those contexts anyway. . The `PSI_API` flag makes the symbols for these functions visible in the Psi4 shared object library, but I'm not sure if that alone constitutes a User API change. I suppose it could count for plugin developers, as it is a new functionality within Psi4 that they can utilize in their plugins.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3143#issuecomment-1995408756
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:15,Availability,ping,ping,15,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:579,Availability,avail,available,579,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:25,Deployability,install,install,25,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:294,Deployability,update,updated,294,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:306,Deployability,install,install,306,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:419,Deployability,release,release,419,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:629,Deployability,install,install,629,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079
https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496:102,Deployability,release,release,102,"Thanks, just wanted to confirm! I switched to libint==2.8.2 in the meantime but look forward to a new release 👍 Feel free to close when you see fit. I'll update the title.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496
https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496:154,Deployability,update,update,154,"Thanks, just wanted to confirm! I switched to libint==2.8.2 in the meantime but look forward to a new release 👍 Feel free to close when you see fit. I'll update the title.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984275496
https://github.com/psi4/psi4/issues/3144#issuecomment-1984588364:25,Availability,avail,available,25,"All the new packages are available. No further problems are anticipated, so lmk if there's further trouble. I'll leave this open for a few days for information.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984588364
https://github.com/psi4/psi4/issues/3144#issuecomment-2014049833:67,Energy Efficiency,green,green,67,Just reporting that updating to the latest 1.9.1 package shows all green for me :-),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-2014049833
https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033:432,Availability,error,errors,432,"looks like it found another one . ```; [ 5%] Building CXX object src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o; cd /home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libdiis && /usr/bin/g++-10 -DUSING_LAPACK_MKL -I/home/vsts/work/1/s/psi4/include -I/home/vsts/work/1/s/psi4/src -I/usr/share/miniconda/envs/p4env/include/python3.8 -isystem /usr/share/miniconda/envs/p4env/include -march=native -pedantic-errors -O3 -DNDEBUG -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fopenmp -MD -MT src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o -MF CMakeFiles/diis.dir/diismanager.cc.o.d -o CMakeFiles/diis.dir/diismanager.cc.o -c /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc; In file included from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.h:38,; from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc:29:; /home/vsts/work/1/s/psi4/include/psi4/pybind11.h:46:52: error: extra ‘;’ [-Wpedantic]; 46 | PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);; | ^; make[5]: *** [src/psi4/libdiis/CMakeFiles/diis.dir/build.make:76: src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o] Error 1; make[5]: Leaving directory '/home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033
https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033:938,Availability,error,error,938,"looks like it found another one . ```; [ 5%] Building CXX object src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o; cd /home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libdiis && /usr/bin/g++-10 -DUSING_LAPACK_MKL -I/home/vsts/work/1/s/psi4/include -I/home/vsts/work/1/s/psi4/src -I/usr/share/miniconda/envs/p4env/include/python3.8 -isystem /usr/share/miniconda/envs/p4env/include -march=native -pedantic-errors -O3 -DNDEBUG -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fopenmp -MD -MT src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o -MF CMakeFiles/diis.dir/diismanager.cc.o.d -o CMakeFiles/diis.dir/diismanager.cc.o -c /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc; In file included from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.h:38,; from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc:29:; /home/vsts/work/1/s/psi4/include/psi4/pybind11.h:46:52: error: extra ‘;’ [-Wpedantic]; 46 | PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);; | ^; make[5]: *** [src/psi4/libdiis/CMakeFiles/diis.dir/build.make:76: src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o] Error 1; make[5]: Leaving directory '/home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033
https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033:1154,Availability,Error,Error,1154,"looks like it found another one . ```; [ 5%] Building CXX object src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o; cd /home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libdiis && /usr/bin/g++-10 -DUSING_LAPACK_MKL -I/home/vsts/work/1/s/psi4/include -I/home/vsts/work/1/s/psi4/src -I/usr/share/miniconda/envs/p4env/include/python3.8 -isystem /usr/share/miniconda/envs/p4env/include -march=native -pedantic-errors -O3 -DNDEBUG -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fopenmp -MD -MT src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o -MF CMakeFiles/diis.dir/diismanager.cc.o.d -o CMakeFiles/diis.dir/diismanager.cc.o -c /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc; In file included from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.h:38,; from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc:29:; /home/vsts/work/1/s/psi4/include/psi4/pybind11.h:46:52: error: extra ‘;’ [-Wpedantic]; 46 | PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);; | ^; make[5]: *** [src/psi4/libdiis/CMakeFiles/diis.dir/build.make:76: src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o] Error 1; make[5]: Leaving directory '/home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:29,Availability,error,errors,29,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:111,Availability,error,error,111,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:160,Availability,fault,fault,160,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:39,Deployability,integrat,integratorxx,39,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:66,Deployability,integrat,integratorxx,66,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:39,Integrability,integrat,integratorxx,39,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:66,Integrability,integrat,integratorxx,66,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:968,Performance,queue,queue,968,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:354,Safety,detect,detecting,354,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:945,Testability,test,test,945,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:31,Availability,error,errors,31,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:113,Availability,error,error,113,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:162,Availability,fault,fault,162,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:41,Deployability,integrat,integratorxx,41,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:68,Deployability,integrat,integratorxx,68,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:41,Integrability,integrat,integratorxx,41,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:68,Integrability,integrat,integratorxx,68,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:984,Performance,queue,queue,984,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:363,Safety,detect,detecting,363,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:961,Testability,test,test,961,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145
https://github.com/psi4/psi4/pull/3145#issuecomment-2018100402:202,Deployability,Integrat,IntegratorXX,202,"All right, I moved the location of the `FORCE_PEDANTIC` definition, as per the suggestion of @loriab. This seems to work, as when I compile a local instance of this Psi4 branch with an internally-built IntegratorXX, it now compiles, whereas it did not previously.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018100402
https://github.com/psi4/psi4/pull/3145#issuecomment-2018100402:202,Integrability,Integrat,IntegratorXX,202,"All right, I moved the location of the `FORCE_PEDANTIC` definition, as per the suggestion of @loriab. This seems to work, as when I compile a local instance of this Psi4 branch with an internally-built IntegratorXX, it now compiles, whereas it did not previously.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018100402
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:12,Availability,error,error,12,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:261,Availability,error,erroring,261,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:307,Availability,error,error,307,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:580,Availability,down,downstream,580,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:1006,Availability,down,downstream,1006,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:1480,Deployability,install,install,1480,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:155,Modifiability,plugin,plugins,155,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:1469,Performance,Perform,Performing,1469,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447
https://github.com/psi4/psi4/pull/3145#issuecomment-2018359606:97,Availability,error,errors,97,"I'm fine defaulting it to `OFF`, to be honest! Probably safer that way, in regards to unforeseen errors/issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018359606
https://github.com/psi4/psi4/pull/3145#issuecomment-2018359606:56,Safety,safe,safer,56,"I'm fine defaulting it to `OFF`, to be honest! Probably safer that way, in regards to unforeseen errors/issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018359606
https://github.com/psi4/psi4/pull/3145#issuecomment-2018364039:99,Availability,error,errors,99,"> I'm fine defaulting it to `OFF`, to be honest! Probably safer that way, in regards to unforeseen errors/issues. sounds good. I think it's worth turning on in azure, if that wasn't already in your plans.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018364039
https://github.com/psi4/psi4/pull/3145#issuecomment-2018364039:58,Safety,safe,safer,58,"> I'm fine defaulting it to `OFF`, to be honest! Probably safer that way, in regards to unforeseen errors/issues. sounds good. I think it's worth turning on in azure, if that wasn't already in your plans.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018364039
https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586:115,Availability,error,errors,115,maybe a bkgd dependency like clang version changed such that mac isn't getting dftd4 3.6 but an oldr 3.3 hence the errors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586
https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586:13,Integrability,depend,dependency,13,maybe a bkgd dependency like clang version changed such that mac isn't getting dftd4 3.6 but an oldr 3.3 hence the errors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586
https://github.com/psi4/psi4/pull/3145#issuecomment-2043178677:12,Usability,learn,learn,12,"And here, I learn why it's important to be careful when force-pushing commits after a rebase. CI should be okay after this, though?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2043178677
https://github.com/psi4/psi4/pull/3148#issuecomment-2012993067:19,Testability,test,tests,19,"I ran pytest quick tests, all pytest still running",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2012993067
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:260,Availability,Error,Error,260,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:453,Availability,Error,Error,453,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:384,Energy Efficiency,allocate,allocated,384,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:145,Integrability,message,message,145,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:4,Testability,test,tests,4,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:42,Testability,test,tests,42,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:84,Testability,Assert,AssertionError,84,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817
https://github.com/psi4/psi4/pull/3150#issuecomment-2045233243:176,Integrability,interface,interface,176,"Hi all! Just a heads-up. Something I would like to add to this PR before it gets merged completely, is a framework for generating GauXC HDF5 reference files via the Psi4/GauXC interface. I have a lot of the framework for this lying around separately, and I am working on porting it over to Psi4 proper, hooked up to the Pytest setup that Psi4 has.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2045233243
https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429:492,Deployability,configurat,configuration,492,"All right, I believe all outstanding issues up to this point have been resolved! As of recent, all checks and queries based on GauXC's AM (e.g., L2 cross-validation) are now conducted at runtime instead of compile-time, GauXC GPU memory allocation is user-controllable, and the build system is set up to propogate `CMAKE_CUDA_ARCHITECTURES` to GauXC in a reasonable fashion. Current issues in CI seem to revolve around problems with finding a suitable `basis_set_exchange` package to use for configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429
https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429:492,Modifiability,config,configuration,492,"All right, I believe all outstanding issues up to this point have been resolved! As of recent, all checks and queries based on GauXC's AM (e.g., L2 cross-validation) are now conducted at runtime instead of compile-time, GauXC GPU memory allocation is user-controllable, and the build system is set up to propogate `CMAKE_CUDA_ARCHITECTURES` to GauXC in a reasonable fashion. Current issues in CI seem to revolve around problems with finding a suitable `basis_set_exchange` package to use for configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429
https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429:154,Security,validat,validation,154,"All right, I believe all outstanding issues up to this point have been resolved! As of recent, all checks and queries based on GauXC's AM (e.g., L2 cross-validation) are now conducted at runtime instead of compile-time, GauXC GPU memory allocation is user-controllable, and the build system is set up to propogate `CMAKE_CUDA_ARCHITECTURES` to GauXC in a reasonable fashion. Current issues in CI seem to revolve around problems with finding a suitable `basis_set_exchange` package to use for configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2105124429
https://github.com/psi4/psi4/pull/3150#issuecomment-2173350671:62,Testability,test,test,62,"I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). And if you ask for a snlink gradient, it does something sensible? Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2173350671
https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793:407,Energy Efficiency,energy,energy,407,"> I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). . Done! Everything you suggested seems to check out as expected/desired. >And if you ask for a snlink gradient, it does something sensible? Thanks. From a quick test case, it looks like it uses `SNLINK` for the SCF energy, then switches to another JK build algorithm for the gradient scheme (I observed `DFJKGrad`). I suppose the question is whether this is reasonable or not. I don't consider this necessarily _unreasonable_ since composite JK builds algorithms can have specialized implementations for gradient calculations (e.g. COSX), but that's just my thoughts.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793
https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793:64,Testability,test,test,64,"> I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). . Done! Everything you suggested seems to check out as expected/desired. >And if you ask for a snlink gradient, it does something sensible? Thanks. From a quick test case, it looks like it uses `SNLINK` for the SCF energy, then switches to another JK build algorithm for the gradient scheme (I observed `DFJKGrad`). I suppose the question is whether this is reasonable or not. I don't consider this necessarily _unreasonable_ since composite JK builds algorithms can have specialized implementations for gradient calculations (e.g. COSX), but that's just my thoughts.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793
https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793:353,Testability,test,test,353,"> I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). . Done! Everything you suggested seems to check out as expected/desired. >And if you ask for a snlink gradient, it does something sensible? Thanks. From a quick test case, it looks like it uses `SNLINK` for the SCF energy, then switches to another JK build algorithm for the gradient scheme (I observed `DFJKGrad`). I suppose the question is whether this is reasonable or not. I don't consider this necessarily _unreasonable_ since composite JK builds algorithms can have specialized implementations for gradient calculations (e.g. COSX), but that's just my thoughts.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793
https://github.com/psi4/psi4/pull/3150#issuecomment-2277887714:381,Integrability,interface,interface,381,"> @davpoolechem , hooray approved!; > ; > 1. do you want to fix the conflict and rebase so CI passes or do you want me to do it in the GH GUI?; > ; > 2. I'm not considering a gauxc conda package a requirement to merge, but should we activate compiling it in an Azure lane to ensure in working order?. Fantastic! Happy to see it!. 1. I would indeed like to, yes.; 2. The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277887714
https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059:328,Deployability,pipeline,pipelines,328,"> I would indeed like to, yes. 👍 . > The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?. Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059
https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059:344,Deployability,pipeline,pipelines-linux,344,"> I would indeed like to, yes. 👍 . > The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?. Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059
https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059:52,Integrability,interface,interface,52,"> I would indeed like to, yes. 👍 . > The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?. Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059
https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059:404,Testability,test,test,404,"> I would indeed like to, yes. 👍 . > The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?. Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:130,Deployability,pipeline,pipelines,130,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:146,Deployability,pipeline,pipelines-linux,146,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:482,Deployability,update,updated,482,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:383,Integrability,interface,interface,383,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:206,Testability,test,test,206,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:363,Testability,test,tests,363,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:422,Testability,test,tests,422,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:432,Testability,test,test,432,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048
https://github.com/psi4/psi4/pull/3150#issuecomment-2278253793:100,Testability,log,logs,100,gauxc and pedantic not mixing well https://dev.azure.com/psi4/psi4/_build/results?buildId=6678&view=logs&j=4c147f20-389a-5ff0-548c-d232a5c31715&t=a95a7b08-ff54-5d77-bad2-713f3463d1f8&l=1788,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278253793
https://github.com/psi4/psi4/pull/3150#issuecomment-2299098336:309,Availability,error,errors,309,"All right, I just pushed some changes that should fix the CI! . Whether those changes are _kosher_ is a question, though. Previously, I used `option_with_flags` to handle `FORCE_PEDANTIC`.Now, I use `option_with_default` instead, and when `FORCE_PEDANTIC` is set to `ON`, it explicitly appends the `-pedantic-errors` flag in the `psi4/CMakeLists.txt` file. Is this an acceptable approach?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2299098336
https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794:195,Availability,error,error,195,"So @loriab pointed this out initially (thank you for that!), and the CI seems to confirm that there's something suspect going on with the `test_gauxc_writer.py` test. I'll work on recreating the error locally on my end and fixing whatever is going on with the test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794
https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794:161,Testability,test,test,161,"So @loriab pointed this out initially (thank you for that!), and the CI seems to confirm that there's something suspect going on with the `test_gauxc_writer.py` test. I'll work on recreating the error locally on my end and fixing whatever is going on with the test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794
https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794:260,Testability,test,test,260,"So @loriab pointed this out initially (thank you for that!), and the CI seems to confirm that there's something suspect going on with the `test_gauxc_writer.py` test. I'll work on recreating the error locally on my end and fixing whatever is going on with the test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:279,Availability,toler,tolerances,279,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:469,Availability,toler,tolerances,469,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:274,Testability,test,test,274,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:414,Testability,test,tests,414,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:464,Testability,test,test,464,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:446,Usability,simpl,simply,446,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215
https://github.com/psi4/psi4/issues/3151#issuecomment-2029758825:255,Deployability,update,updates,255,"Psi4 does not have X2C analytic gradients. If a previous version of Psi4 let you calculate them, that was probably a bug, and they would not have agreed with the numerical gradients. ...It's _probably_ possible to add X2C analytic gradients to Psi4, with updates in Libint.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3151#issuecomment-2029758825
https://github.com/psi4/psi4/issues/3151#issuecomment-2034324517:376,Deployability,update,updates,376,"> Psi4 does not have X2C analytic gradients. If a previous version of Psi4 let you calculate them, that was > probably a bug, and they would not have agreed with the numerical gradients. That is really a bad news, I have done some kind of x2c related calculations in Psi4 version 1.4, I will recheck!. > ...It's _probably_ possible to add X2C analytic gradients to Psi4, with updates in Libint. This is good news!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3151#issuecomment-2034324517
https://github.com/psi4/psi4/issues/3154#issuecomment-2048342556:9,Deployability,install,install,9,I had to install `conda-forge` not psi4.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3154#issuecomment-2048342556
https://github.com/psi4/psi4/issues/3156#issuecomment-2066957346:43,Energy Efficiency,energy,energy,43,"Ah yes, you can't have an electron kinetic energy if you don't have electrons...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3156#issuecomment-2066957346
https://github.com/psi4/psi4/issues/3156#issuecomment-2067073173:44,Modifiability,variab,variable,44,"No, this isn't only printing. This is a Psi variable that can't be defined due to the exceptional circumstance of having zero electrons. I defer to @loriab for deciding what to do about this one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3156#issuecomment-2067073173
https://github.com/psi4/psi4/pull/3157#issuecomment-2091855931:0,Availability,Ping,Pinging,0,"Pinging @loriab once again, requesting review",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3157#issuecomment-2091855931
https://github.com/psi4/psi4/issues/3159#issuecomment-2070618193:20,Deployability,patch,patches,20,Do you have all the patches installed?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070618193
https://github.com/psi4/psi4/issues/3159#issuecomment-2070618193:28,Deployability,install,installed,28,Do you have all the patches installed?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070618193
https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077:22,Deployability,patch,patches,22,> Do you have all the patches installed?. Define patches,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077
https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077:30,Deployability,install,installed,30,> Do you have all the patches installed?. Define patches,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077
https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077:49,Deployability,patch,patches,49,> Do you have all the patches installed?. Define patches,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077
https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:127,Availability,down,download-mrcc,127,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117
https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:24,Deployability,patch,patches,24,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117
https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:32,Deployability,install,installed,32,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117
https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:57,Deployability,patch,patches,57,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117
https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:171,Deployability,patch,patches,171,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117
https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536:21,Integrability,interface,interface,21,I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536
https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536:5,Testability,test,tested,5,I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536
https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536:103,Usability,learn,learned,103,I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:296,Deployability,install,install,296,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:308,Deployability,patch,patches,308,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:23,Integrability,interface,interface,23,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:7,Testability,test,tested,7,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:189,Testability,test,tests,189,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:105,Usability,learn,learned,105,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542
https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:144,Availability,down,download-mrcc,144,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216
https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:26,Deployability,patch,patches,26,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216
https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:34,Deployability,install,installed,34,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216
https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:69,Deployability,patch,patches,69,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216
https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:188,Deployability,patch,patches,188,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216
https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524:47,Availability,error,error,47,"After installing the binary patches, I get the error; ```; psi4.driver.p4util.exceptions.MissingMethodError: Method=ccsdt is not available for any derivative level. Did you mean? ccd ccsd ccsd(t) cisd cisdt cisdtq lccsd ksdt; ```; with the above input as well as `tests/mrcc/ccsdt/input.dat`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524
https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524:129,Availability,avail,available,129,"After installing the binary patches, I get the error; ```; psi4.driver.p4util.exceptions.MissingMethodError: Method=ccsdt is not available for any derivative level. Did you mean? ccd ccsd ccsd(t) cisd cisdt cisdtq lccsd ksdt; ```; with the above input as well as `tests/mrcc/ccsdt/input.dat`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524
https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524:6,Deployability,install,installing,6,"After installing the binary patches, I get the error; ```; psi4.driver.p4util.exceptions.MissingMethodError: Method=ccsdt is not available for any derivative level. Did you mean? ccd ccsd ccsd(t) cisd cisdt cisdtq lccsd ksdt; ```; with the above input as well as `tests/mrcc/ccsdt/input.dat`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524
https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524:28,Deployability,patch,patches,28,"After installing the binary patches, I get the error; ```; psi4.driver.p4util.exceptions.MissingMethodError: Method=ccsdt is not available for any derivative level. Did you mean? ccd ccsd ccsd(t) cisd cisdt cisdtq lccsd ksdt; ```; with the above input as well as `tests/mrcc/ccsdt/input.dat`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524
https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524:264,Testability,test,tests,264,"After installing the binary patches, I get the error; ```; psi4.driver.p4util.exceptions.MissingMethodError: Method=ccsdt is not available for any derivative level. Did you mean? ccd ccsd ccsd(t) cisd cisdt cisdtq lccsd ksdt; ```; with the above input as well as `tests/mrcc/ccsdt/input.dat`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071575524
https://github.com/psi4/psi4/issues/3159#issuecomment-2071586810:125,Testability,log,logic,125,Make sure `dmrcc` is in your path https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L269. other logic is https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1369,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071586810
https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725:34,Deployability,integrat,integration,34,What happens if you use a tighter integration grid?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725
https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725:34,Integrability,integrat,integration,34,What happens if you use a tighter integration grid?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075911725
https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978:36,Deployability,integrat,integration,36,> What happens if you use a tighter integration grid?. Thanks for your quick reply. I set it to a pretty large number (I have no experience in it) and got better results:. ```; set dft_spherical_points 1202; set dft_radial_points 150; ```. ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 6 x 3 . 1 2 3. 1 0.01761265286365 -0.03021731225771 -0.01636085243187; 2 -0.00198025542796 0.00069379354137 -0.01217743689404; 3 -0.00684467846030 0.00863180515130 0.01631841052017; 4 -0.00782888971966 0.00500566642863 0.00531395359842; 5 -0.00015059931846 0.01071543959728 0.00493669924504; 6 -0.00080880896432 0.00517347208476 0.00197251031653; ```. This seems to resolve the problem. XC:. ```; -XC Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.023415204354 -0.034617520267 0.016571065968; 2 0.004264668622 -0.082393045737 0.110542261946; 3 0.057056513665 -0.084998504340 -0.155592261007; 4 -0.165444201018 0.054818800402 -0.007755576608; 5 0.081555904871 0.141482887041 0.033036030615; 6 -0.000848669520 0.005710247436 0.003201763433; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978
https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978:36,Integrability,integrat,integration,36,> What happens if you use a tighter integration grid?. Thanks for your quick reply. I set it to a pretty large number (I have no experience in it) and got better results:. ```; set dft_spherical_points 1202; set dft_radial_points 150; ```. ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 6 x 3 . 1 2 3. 1 0.01761265286365 -0.03021731225771 -0.01636085243187; 2 -0.00198025542796 0.00069379354137 -0.01217743689404; 3 -0.00684467846030 0.00863180515130 0.01631841052017; 4 -0.00782888971966 0.00500566642863 0.00531395359842; 5 -0.00015059931846 0.01071543959728 0.00493669924504; 6 -0.00080880896432 0.00517347208476 0.00197251031653; ```. This seems to resolve the problem. XC:. ```; -XC Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.023415204354 -0.034617520267 0.016571065968; 2 0.004264668622 -0.082393045737 0.110542261946; 3 0.057056513665 -0.084998504340 -0.155592261007; 4 -0.165444201018 0.054818800402 -0.007755576608; 5 0.081555904871 0.141482887041 0.033036030615; 6 -0.000848669520 0.005710247436 0.003201763433; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:364,Availability,error,error,364,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:439,Availability,error,error,439,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:59,Deployability,integrat,integration,59,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:166,Deployability,integrat,integration,166,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:59,Integrability,integrat,integration,59,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:166,Integrability,integrat,integration,166,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791:401,Integrability,depend,dependence,401,"Great. Let me explain the issue here. DFT does a numerical integration. If you want to compute a gradient, then _in principle_, you should include derivatives of the integration grid itself. Psi4 does not do that. (@susilehtola tells me that an open-source library in active development will handle that for us soon.) In the limit of an infinitely large grid, the error due to neglecting the geometry dependence of the grid vanishes. That error is _probably_ what you're seeing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075978791
https://github.com/psi4/psi4/issues/3165#issuecomment-2135954456:362,Integrability,interface,interfaces,362,The input file should be fort.56. Memory should be handled here: https://github.com/psi4/psi4/blob/8418efe67717940cda6e8446814d9689e9c303e8/psi4/src/psi4/mrcc/mrcc.cc#L932. Threading should be handled here: https://github.com/psi4/psi4/blob/8418efe67717940cda6e8446814d9689e9c303e8/psi4/driver/procrouting/proc.py#L4994. It's been a long time since any of these interfaces were managed. Are you sure the mrcc was compiled with openmp enabled?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3165#issuecomment-2135954456
https://github.com/psi4/psi4/issues/3165#issuecomment-2136264073:349,Modifiability,variab,variable,349,"MRCC has multiple modes for parallelism. Some methods can use OpenMP, some can use MPI, a few can use both. I do not know how this is hooked up on the Psi4-side. When I use MRCC, I usually run it either standalone or through Molpro, and in both cases I generally control how many OpenMP threads MRCC uses through the `OMP_NUM_THREADS` environmental variable. I have never tried to run MRCC multithreaded through Psi4, nor have I tried the MPI parallelism.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3165#issuecomment-2136264073
https://github.com/psi4/psi4/pull/3167#issuecomment-2120724669:30,Testability,test,test,30,Do the sapt_ecp and dfmp2_ecp test reference values need updating?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120724669
https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465:75,Deployability,update,updated,75,"Yes, these tests fail if I run them. As far as I understand they should be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465
https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465:11,Testability,test,tests,11,"Yes, these tests fail if I run them. As far as I understand they should be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120923465
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:3063,Energy Efficiency,energy,energy,3063," 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.45",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:3107,Energy Efficiency,ENERGY,ENERGY,3107," 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:5226,Energy Efficiency,energy,energy,5226,"0D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. print(""\nComparison""); print(""-"" * 40); print(f""ECP + valence {e1: 16.10f}""); print(f""Only valence {e2: 16.10f}""); print(); print(f""Difference {diff: 16.10f}""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:5270,Energy Efficiency,ENERGY,ENERGY,5270,"0D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. print(""\nComparison""); print(""-"" * 40); print(f""ECP + valence {e1: 16.10f}""); print(f""Only valence {e2: 16.10f}""); print(); print(f""Difference {diff: 16.10f}""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:3088,Modifiability,variab,variable,3088," 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:5251,Modifiability,variab,variable,5251,"0D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. print(""\nComparison""); print(""-"" * 40); print(f""ECP + valence {e1: 16.10f}""); print(f""Only valence {e2: 16.10f}""); print(); print(f""Difference {diff: 16.10f}""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:3193,Energy Efficiency,energy,energy,3193," 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.45",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:3237,Energy Efficiency,ENERGY,ENERGY,3237," 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:5356,Energy Efficiency,energy,energy,5356,"; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. assert compare_values(0.0, diff, 7, ""ECP + valence vs. only valence""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:5400,Energy Efficiency,ENERGY,ENERGY,5400,"; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. assert compare_values(0.0, diff, 7, ""ECP + valence vs. only valence""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:3218,Modifiability,variab,variable,3218," 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:5381,Modifiability,variab,variable,5381,"; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. assert compare_values(0.0, diff, 7, ""ECP + valence vs. only valence""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:42,Testability,test,test,42,"Thanks for the new ref values. To add the test you propose, I think I'd make a file `tests/pytests/test_ecp.py` with contents something like:. ```; import numpy as np; import pytest. import psi4; from addons import uusing; from utils import compare_values. pytestmark = [pytest.mark.psi, pytest.mark.api]. @uusing(""ecpint""); def test_ecp_ghost_sanity():; import psi4. psi4.set_memory(""4 GB""); molecule = psi4.geometry(; """"""; units Angstrom; no_com; no_reorient; symmetry c1; 0 1; Ar 0.000000 0.000000 -2.000000; Gh(I) 0.000000 0.000000 2.000000; ). ### ECP + valence; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I myecp. [myecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:85,Testability,test,tests,85,"Thanks for the new ref values. To add the test you propose, I think I'd make a file `tests/pytests/test_ecp.py` with contents something like:. ```; import numpy as np; import pytest. import psi4; from addons import uusing; from utils import compare_values. pytestmark = [pytest.mark.psi, pytest.mark.api]. @uusing(""ecpint""); def test_ecp_ghost_sanity():; import psi4. psi4.set_memory(""4 GB""); molecule = psi4.geometry(; """"""; units Angstrom; no_com; no_reorient; symmetry c1; 0 1; Ar 0.000000 0.000000 -2.000000; Gh(I) 0.000000 0.000000 2.000000; ). ### ECP + valence; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I myecp. [myecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:5439,Testability,assert,assert,5439,"; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. assert compare_values(0.0, diff, 7, ""ECP + valence vs. only valence""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202
https://github.com/psi4/psi4/pull/3167#issuecomment-2122245664:46,Testability,test,test,46,I've added the proposed file content to a new test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2122245664
https://github.com/psi4/psi4/pull/3174#issuecomment-2142173440:1131,Testability,test,tests,1131,"> Hm, GitHub is telling me that the only change is the addition of; > ; > ```; > set_chunks(4);; > ```; > ; > in `psi4/src/psi4/libmints/rel_potential.cc`. Well, yes. That's the one change that seems necessary. Just compare against [the dipole code](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/dipole.cc). L2 is **already** computing all the W0, Wx, Wy, Wz integrals because `libint2::Operator::opVop` on line 69 tells it to. There isn't a way to tell L2 to only compute W0 any more than there's a way to tell it to only compute the Y component of the dipole. The question is just ""how many buffers do we need to read from?"", which is what `set_chunks` is there for. The surprise is that Psi handles a mismatch between the number of chunks and the number of matrices silently. Presumably, sending in fewer buffers than chunks means that some generated integrals are never grabbed from L2 (I haven't checked this myself). What I know for sure is that sending in a single matrix just grabs buffer 0. Sending in a vector of Matrix indeed just grabs one buffer for each chunk. In my mind, the question is just what tests you all want for new integrals.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174#issuecomment-2142173440
https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157:211,Integrability,interface,interface,211,"I think this is enough for now. I want to very carefully check the handling of perturbations before making this accessible enough to be tested by our normal suite. For posterity, standard usage with the current interface is:; ```; std::shared_ptr<OneBodySOInt> wOBI(integral_->so_rel_potential());; OperatorSymmetry msymm(OperatorSymmetry::L, molecule_, integral_, soFactory_);; auto wMats = msymm.create_matrices(""SO Relativistic Potential"");; wMats.insert(wMats.begin(), soFactory_->create_matrix(""SO Relativistic Potential""));; wOBI->compute(wMats);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157
https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157:112,Security,access,accessible,112,"I think this is enough for now. I want to very carefully check the handling of perturbations before making this accessible enough to be tested by our normal suite. For posterity, standard usage with the current interface is:; ```; std::shared_ptr<OneBodySOInt> wOBI(integral_->so_rel_potential());; OperatorSymmetry msymm(OperatorSymmetry::L, molecule_, integral_, soFactory_);; auto wMats = msymm.create_matrices(""SO Relativistic Potential"");; wMats.insert(wMats.begin(), soFactory_->create_matrix(""SO Relativistic Potential""));; wOBI->compute(wMats);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157
https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157:136,Testability,test,tested,136,"I think this is enough for now. I want to very carefully check the handling of perturbations before making this accessible enough to be tested by our normal suite. For posterity, standard usage with the current interface is:; ```; std::shared_ptr<OneBodySOInt> wOBI(integral_->so_rel_potential());; OperatorSymmetry msymm(OperatorSymmetry::L, molecule_, integral_, soFactory_);; auto wMats = msymm.create_matrices(""SO Relativistic Potential"");; wMats.insert(wMats.begin(), soFactory_->create_matrix(""SO Relativistic Potential""));; wOBI->compute(wMats);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:67,Availability,error,error,67,"I have adjusted the case accordingly and I'm still encountering an error message: . ```; import psi4; import numpy as np. # Set Psi4 options for the calculation; psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [5, 0, 1, 1], # Doubly occupied orbitals; 'socc': [0, 0, 1, 0], # Singly occupied orbitals; 'restricted_docc': [5, 0, 0, 0], # Core orbitals; 'active': [0, 0, 2, 0], # Active orbitals; 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1522,Availability,Error,Error,1522,"metry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1601,Availability,error,error,1601,"= 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2505,Availability,Error,Error,2505,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2563,Availability,Error,Error,2563,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1266,Energy Efficiency,energy,energy,1266,"ngly occupied orbitals; 'restricted_docc': [5, 0, 0, 0], # Core orbitals; 'active': [0, 0, 2, 0], # Active orbitals; 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solve",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1369,Energy Efficiency,ENERGY,ENERGY,1369,"orbitals; 'active': [0, 0, 2, 0], # Active orbitals; 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-pac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1421,Energy Efficiency,ENERGY,ENERGY,1421," 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1473,Energy Efficiency,ENERGY,ENERGY,1473,"metry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1959,Energy Efficiency,energy,energy,1959,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2072,Energy Efficiency,energy,energy,2072,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2098,Energy Efficiency,energy,energy,2098,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:73,Integrability,message,message,73,"I have adjusted the case accordingly and I'm still encountering an error message: . ```; import psi4; import numpy as np. # Set Psi4 options for the calculation; psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [5, 0, 1, 1], # Doubly occupied orbitals; 'socc': [0, 0, 1, 0], # Singly occupied orbitals; 'restricted_docc': [5, 0, 0, 0], # Core orbitals; 'active': [0, 0, 2, 0], # Active orbitals; 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1607,Integrability,message,message,1607,"= 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1342,Modifiability,variab,variable,1342,"orbitals; 'active': [0, 0, 2, 0], # Active orbitals; 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-pac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1394,Modifiability,variab,variable,1394," 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1446,Modifiability,variab,variable,1446,"metry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1753,Safety,detect,detecting,1753,"ce(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls w",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2529,Safety,detect,detected,2529,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:168,Availability,error,error,168,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:774,Availability,Error,Error,774,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1958,Availability,Error,Error,1958,". psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4115,Availability,error,error,4115,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4203,Availability,Error,Error,4203,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4292,Availability,Error,Error,4292,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4381,Availability,Error,Error,4381,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4470,Availability,Error,Error,4470,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:67,Energy Efficiency,energy,energy,67,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:698,Energy Efficiency,energy,energy,698,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:712,Energy Efficiency,energy,energy,712,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:734,Energy Efficiency,energy,energy,734,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:803,Energy Efficiency,energy,energy,803,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1459,Energy Efficiency,energy,energy,1459,": 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in rang",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1583,Energy Efficiency,energy,energy,1583,"': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1602,Energy Efficiency,energy,energy,1602,"'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1678,Energy Efficiency,energy,energy,1678,"'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1709,Energy Efficiency,energy,energy,1709,"'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1775,Energy Efficiency,energy,energy,1775,"round state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:2998,Energy Efficiency,energy,energy,2998,"ergies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:3374,Energy Efficiency,Energy,Energy,3374,"D', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:3530,Energy Efficiency,energy,energy,3530,"wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:3856,Energy Efficiency,Energy,Energy,3856,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:3897,Energy Efficiency,Energy,Energy,3897,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:69,Availability,error,error,69,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:305,Availability,error,error,305,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:754,Availability,error,error,754,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:808,Availability,error,error,808,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:919,Availability,error,error,919,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:797,Deployability,update,update,797,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:75,Integrability,message,messages,75,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:760,Integrability,message,message,760,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:814,Integrability,message,message,814,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:238,Usability,simpl,simplify,238,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955:311,Usability,clear,clear,311,"Based on your writing, I assume you're a student researcher. Posting error messages _like this_ is not a good way to get help. Large input files like this make it difficult for developers to find the actual problem. It's best practice to simplify the input file as much as possible while still making the error clear. Sometimes, doing that can tell _you_ where the problem is. If you don't know how to do this kind of troubleshooting, consult your seniors in your research group or your professor. I've played around with your latest input file and can confirm that you have made a fairly straightforward mistake, but you've discarded important information. As an exercise, please post a _simplified_ input that reproduces your problem, and a _complete_ error message. Once you've done that, I'll update the error message to be more explicit and offer some advice on how to bypass this. (Though once you understand the error, it's fairly straightforward.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:629,Availability,error,error,629,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:871,Availability,error,error,871,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1344,Availability,error,error,1344,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1401,Availability,error,error,1401,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1515,Availability,error,error,1515,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1390,Deployability,update,update,1390,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:80,Energy Efficiency,energy,energy,80,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:635,Integrability,message,messages,635,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1350,Integrability,message,message,1350,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1407,Integrability,message,message,1407,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1928,Integrability,Message,Message,1928,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:804,Usability,simpl,simplify,804,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:877,Usability,clear,clear,877,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:1276,Usability,simpl,simplified,1276,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549
https://github.com/psi4/psi4/issues/3181#issuecomment-2184967018:310,Energy Efficiency,schedul,schedule,310,"> I am the one one doing this kind of research in my school and my supervisor doesn't know much in this area. That is not a good position to be in, unless you are very ambitious and able to work autonomously. It is unlikely that you will find someone that would be so generous with their time, that they would schedule video calls with you and do the job of your supervisor for free.; If you are truly stuck, ask your supervisor for advice anyways. If they really cannot give you any useful advice, that should make them realize that this research direction is not a good fit for either of you and come up with something else for you to do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184967018
https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280:264,Deployability,install,installed,264,"Sir, I just noticed that my psi4 does not reflect the methods that comes with it. Because of this, I can't calculate the potential energy data for the first excited states of the CF molecule. How can I add different methods to the Psi4 I already have compiled and installed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280
https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280:131,Energy Efficiency,energy,energy,131,"Sir, I just noticed that my psi4 does not reflect the methods that comes with it. Because of this, I can't calculate the potential energy data for the first excited states of the CF molecule. How can I add different methods to the Psi4 I already have compiled and installed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2191716280
https://github.com/psi4/psi4/issues/3181#issuecomment-2191721109:177,Energy Efficiency,energy,energy,177,"I don't understand what you're asking. What do you mean by ""my psi4 does not reflect the methods that comes with it"", and how does that lead to ""I can't calculate the potential energy""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2191721109
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:187,Availability,error,error,187,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:237,Availability,avail,available,237,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:326,Availability,avail,available,326,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:351,Availability,avail,available,351,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1252,Availability,Error,Error,1252," options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3490,Availability,Error,Error,3490,"""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4551,Availability,error,error,4551,"# Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4569,Availability,Error,Error,4569,"# Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4626,Availability,avail,available,4626,"# Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4645,Availability,Error,Error,4645,"urve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4702,Availability,avail,available,4702,"urve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4809,Availability,Error,Error,4809,"Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4849,Availability,Error,Error,4849,"_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check speci",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4918,Availability,Error,Error,4918,"_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check speci",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5404,Availability,avail,available,5404,"an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES'",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5491,Availability,avail,available,5491,"splay the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5715,Availability,Avail,Available,5715," SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETY",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5770,Availability,avail,available,5770,"TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5932,Availability,avail,available,5932,"TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG', 'CANONICALIZE_INACTIVE_FAVG', 'CARTESIAN_SYM_TOLERANCE', 'CART_HESS_READ', 'CC', 'CC3_FOLLOW_ROOT', 'CCD_E_CONVERGENCE', 'CCD_MAXITER', 'CCD",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6202,Availability,Avail,Available,6202,"ng<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG', 'CANONICALIZE_INACTIVE_FAVG', 'CARTESIAN_SYM_TOLERANCE', 'CART_HESS_READ', 'CC', 'CC3_FOLLOW_ROOT', 'CCD_E_CONVERGENCE', 'CCD_MAXITER', 'CCD_T_CONVERGENCE', 'CCL_ENERGY', 'CC_A_RAS3_MAX', 'CC_B_RAS3_MAX', 'CC_DIIS_MAX_VECS', 'CC_DIIS_MIN_VECS', 'CC_EX_LEVEL', 'CC_FIX_EXTERNAL', 'CC_FIX_EXTERNAL_MIN', 'CC_LAMBDA', 'CC_MACRO', 'CC_MAXITER', 'CC_MIXED', 'CC_NUM_THREADS', 'CC_OS_SCALE', 'CC_RAS34_MAX', 'CC_RAS3_MAX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6226,Availability,Avail,Available,6226,,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:23612,Availability,avail,available,23612,"_DIIS_TRANSITION', 'SCF_MEM_SAFETY_FACTOR', 'SCF_PROPERTIES', 'SCF_SUBTYPE', 'SCF_TYPE', 'SCHMIDT_ADD_RESIDUAL_TOLERANCE', 'SCREENING', 'SCSN_MP2', 'SCS_CCSD', 'SCS_CEPA', 'SCS_MP2', 'SCS_TYPE', 'SEKINO', 'SEMICANONICAL', 'SF_RESTRICT', 'SIGMA_OVERLAP', 'SIMPLE_STEP_SCALING', 'SINGLES_PRINT', 'SMALL_CUTOFF', 'SOCC', 'SOLVER_CONVERGENCE', 'SOLVER_MAXITER', 'SOLVER_N_GUESS', 'SOLVER_N_ROOT', 'SOLVER_PRECONDITION', 'SOLVER_ROOTS_PER_IRREP', 'SOSCF', 'SOSCF_CONV', 'SOSCF_MAX_ITER', 'SOSCF_MIN_ITER', 'SOSCF_PRINT', 'SOSCF_START_CONVERGENCE', 'SOS_TYPE', 'SPIN_SCALE_TYPE', 'SSAPT0_SCALE', 'SS_E_CONVERGENCE', 'SS_R_CONVERGENCE', 'SS_SCALE', 'SS_SKIP_DIAG', 'SS_VECS_PER_ROOT', 'STABILITY_ADD_VECTORS', 'STABILITY_ANALYSIS', 'STABILITY_AUGMENT_SPACE_TOL', 'STABILITY_CHECK', 'STABILITY_CONVERGENCE', 'STABILITY_MAX_SPACE_SIZE', 'STABILITY_N_EIGENVALUES', 'STABILITY_N_GUESS_VECTORS', 'STEP_TYPE', 'SUMMATION_FIELDS', 'SYMMETRIZE', 'S_CHOLESKY_TOLERANCE', 'S_CUT', 'S_ORTHOGONALIZATION', 'S_TOLERANCE', 'T', 'T2_COUPLED', 'T3_WS_INCORE', 'TDM', 'TDSCF_COEFF_CUTOFF', 'TDSCF_GUESS', 'TDSCF_MAXITER', 'TDSCF_PRINT', 'TDSCF_R_CONVERGENCE', 'TDSCF_STATES', 'TDSCF_TDA', 'TDSCF_TDM_PRINT', 'TDSCF_TRIPLETS', 'TEST_B', 'TEST_DERIVATIVE_B', 'THETA_POINTS', 'THICKNESS', 'THREE_PARTICLE', 'TIKHONOW_MAX', 'TIKHONOW_OMEGA', 'TIKHONOW_TRIPLES', 'TILE_SZ', 'TPDM', 'TPDM_ABCD_TYPE', 'TRANSLATE_PSI4', 'TREE_EXPANSION_ORDER', 'TREE_THETA', 'TRIPLES_ALGORITHM', 'TRIPLES_DIIS', 'TRIPLES_IABC_TYPE', 'TRIPLES_LOW_MEMORY', 'TURN_ON_ACTV', 'T_AMPS', 'T_CUT_CLMO', 'T_CUT_CPAO', 'T_CUT_DO', 'T_CUT_DO_IJ', 'T_CUT_DO_PRE', 'T_CUT_MKN', 'T_CUT_PNO', 'T_CUT_PRE', 'UHF_NOONS', 'UPDATE', 'USE_DF_INTS', 'USE_SPIN_SYM', 'USE_SPIN_SYMMETRY', 'VAL_EX_LEVEL', 'VECS_CC3', 'VECS_PER_ROOT', 'WABEI_LOWDISK', 'WCOMBINE', 'WFN', 'WFN_SYM', 'WFN_TYPE', 'WRITER_FILE_LABEL', 'WRITE_NOS', 'WRITE_OPT_HISTORY', 'WRITE_OPT_RESULT', 'WRITE_TRAJECTORY', 'XI', 'XI_CONNECT', 'ZERO_INTERNAL_AMPS', 'ZETA']. Is 'tdscf_type' available? False",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:23285,Deployability,UPDATE,UPDATE,23285,"IS_TRANSITION', 'SCF_INITIAL_START_DIIS_TRANSITION', 'SCF_MEM_SAFETY_FACTOR', 'SCF_PROPERTIES', 'SCF_SUBTYPE', 'SCF_TYPE', 'SCHMIDT_ADD_RESIDUAL_TOLERANCE', 'SCREENING', 'SCSN_MP2', 'SCS_CCSD', 'SCS_CEPA', 'SCS_MP2', 'SCS_TYPE', 'SEKINO', 'SEMICANONICAL', 'SF_RESTRICT', 'SIGMA_OVERLAP', 'SIMPLE_STEP_SCALING', 'SINGLES_PRINT', 'SMALL_CUTOFF', 'SOCC', 'SOLVER_CONVERGENCE', 'SOLVER_MAXITER', 'SOLVER_N_GUESS', 'SOLVER_N_ROOT', 'SOLVER_PRECONDITION', 'SOLVER_ROOTS_PER_IRREP', 'SOSCF', 'SOSCF_CONV', 'SOSCF_MAX_ITER', 'SOSCF_MIN_ITER', 'SOSCF_PRINT', 'SOSCF_START_CONVERGENCE', 'SOS_TYPE', 'SPIN_SCALE_TYPE', 'SSAPT0_SCALE', 'SS_E_CONVERGENCE', 'SS_R_CONVERGENCE', 'SS_SCALE', 'SS_SKIP_DIAG', 'SS_VECS_PER_ROOT', 'STABILITY_ADD_VECTORS', 'STABILITY_ANALYSIS', 'STABILITY_AUGMENT_SPACE_TOL', 'STABILITY_CHECK', 'STABILITY_CONVERGENCE', 'STABILITY_MAX_SPACE_SIZE', 'STABILITY_N_EIGENVALUES', 'STABILITY_N_GUESS_VECTORS', 'STEP_TYPE', 'SUMMATION_FIELDS', 'SYMMETRIZE', 'S_CHOLESKY_TOLERANCE', 'S_CUT', 'S_ORTHOGONALIZATION', 'S_TOLERANCE', 'T', 'T2_COUPLED', 'T3_WS_INCORE', 'TDM', 'TDSCF_COEFF_CUTOFF', 'TDSCF_GUESS', 'TDSCF_MAXITER', 'TDSCF_PRINT', 'TDSCF_R_CONVERGENCE', 'TDSCF_STATES', 'TDSCF_TDA', 'TDSCF_TDM_PRINT', 'TDSCF_TRIPLETS', 'TEST_B', 'TEST_DERIVATIVE_B', 'THETA_POINTS', 'THICKNESS', 'THREE_PARTICLE', 'TIKHONOW_MAX', 'TIKHONOW_OMEGA', 'TIKHONOW_TRIPLES', 'TILE_SZ', 'TPDM', 'TPDM_ABCD_TYPE', 'TRANSLATE_PSI4', 'TREE_EXPANSION_ORDER', 'TREE_THETA', 'TRIPLES_ALGORITHM', 'TRIPLES_DIIS', 'TRIPLES_IABC_TYPE', 'TRIPLES_LOW_MEMORY', 'TURN_ON_ACTV', 'T_AMPS', 'T_CUT_CLMO', 'T_CUT_CPAO', 'T_CUT_DO', 'T_CUT_DO_IJ', 'T_CUT_DO_PRE', 'T_CUT_MKN', 'T_CUT_PNO', 'T_CUT_PRE', 'UHF_NOONS', 'UPDATE', 'USE_DF_INTS', 'USE_SPIN_SYM', 'USE_SPIN_SYMMETRY', 'VAL_EX_LEVEL', 'VECS_CC3', 'VECS_PER_ROOT', 'WABEI_LOWDISK', 'WCOMBINE', 'WFN', 'WFN_SYM', 'WFN_TYPE', 'WRITER_FILE_LABEL', 'WRITE_NOS', 'WRITE_OPT_HISTORY', 'WRITE_OPT_RESULT', 'WRITE_TRAJECTORY', 'XI', 'XI_CONNECT', 'ZERO_INTERNAL_AMPS', 'ZETA'].",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:32,Energy Efficiency,energy,energy,32,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:903,Energy Efficiency,energy,energy,903,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:911,Energy Efficiency,energy,energy,911,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:925,Energy Efficiency,energy,energy,925,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:947,Energy Efficiency,energy,energy,947,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1093,Energy Efficiency,energy,energy,1093,"hen once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1147,Energy Efficiency,energy,energy,1147,"ate I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_P",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1196,Energy Efficiency,Energy,Energy,1196,"rote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1205,Energy Efficiency,energy,energy,1205,"rote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1378,Energy Efficiency,energy,energy,1378," to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 mem",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1605,Energy Efficiency,Energy,Energy,1605,"0 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVT",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1639,Energy Efficiency,energy,energy,1639,"0 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVT",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1706,Energy Efficiency,energy,energy,1706,"psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1741,Energy Efficiency,energy,energy,1741,"reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1798,Energy Efficiency,energy,energy,1798,"tems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground sta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1922,Energy Efficiency,Energy,Energy,1922,"mpute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_optio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1988,Energy Efficiency,Energy,Energy,1988,"ond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_en",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:2029,Energy Efficiency,Energy,Energy,2029,"energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:2803,Energy Efficiency,energy,energy,2803,"gy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:2829,Energy Efficiency,energy,energy,2829,")); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Ang",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3013,Energy Efficiency,energy,energy,3013,"rid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3084,Energy Efficiency,energy,energy,3084,"rid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3154,Energy Efficiency,ENERGY,ENERGY,3154,"le; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', col",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3331,Energy Efficiency,energy,energy,3331,"py as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3385,Energy Efficiency,energy,energy,3385,"mory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3434,Energy Efficiency,Energy,Energy,3434,"mpute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3443,Energy Efficiency,energy,energy,3443,"mpute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3616,Energy Efficiency,energy,energy,3616,"ence': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available option",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3843,Energy Efficiency,Energy,Energy,3843,"d state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting optio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3877,Energy Efficiency,energy,energy,3877,"d state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting optio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3944,Energy Efficiency,energy,energy,3944,", 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a v",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3979,Energy Efficiency,energy,energy,3979,"s); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /ho",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4036,Energy Efficiency,energy,energy,4036,"rn_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4176,Energy Efficiency,Energy,Energy,4176," EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4242,Energy Efficiency,Energy,Energy,4242,".arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4283,Energy Efficiency,Energy,Energy,4283,"gth in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5292,Energy Efficiency,energy,energy,5292,"d Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Avail",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5633,Energy Efficiency,energy,energy,5633,": option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRU",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:306,Integrability,message,message,306,"I was able to get the potential energy curve (PEC) for the ground state of the CF molecule but then once I include a method that could get the PEC for the excited state I kept getting an error. Then I wrote a script that could check the available methods and options for the excited states, I got a return message showing the available options but no available methods was shown. Here's the script I ran to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:10897,Modifiability,COUPLING,COUPLING,10897,"R_SPIN_FLIP', 'CFOUR_SPIN_ORBIT', 'CFOUR_SPIN_SCAL', 'CFOUR_SUBGROUP', 'CFOUR_SYMMETRY', 'CFOUR_SYM_CHECK', 'CFOUR_T3_EXTRAPOL', 'CFOUR_TAMP_SUM', 'CFOUR_THERMOCHEMISTRY', 'CFOUR_TRANS_INV', 'CFOUR_TREAT_PERT', 'CFOUR_UIJ_THRESHOLD', 'CFOUR_UNITS', 'CFOUR_UPDATE_HESSIAN', 'CFOUR_VIBRATION', 'CFOUR_VTRAN', 'CFOUR_XFIELD', 'CFOUR_XFORM_TOL', 'CFOUR_YFIELD', 'CFOUR_ZFIELD', 'CHOLESKY', 'CHOLESKY_TOLERANCE', 'CIBLKS_PRINT', 'CI_DIIS', 'CI_FILE_START', 'CI_MAXITER', 'CI_NUM_THREADS', 'CI_TYPE', 'COLLAPSE_SIZE', 'COLLAPSE_WITH_LAST', 'COLLAPSE_WITH_LAST_CC3', 'COMPLEX_TOLERANCE', 'COMPUTE_MP4_TRIPLES', 'COMPUTE_TRIPLES', 'COMPUT_S2', 'CONSECUTIVE_BACKSTEPS', 'CORR_ANSATZ', 'CORR_CCSD_T', 'CORR_CHARGE', 'CORR_MULTP', 'CORR_WFN', 'COSX_BASIS_TOLERANCE', 'COSX_DENSITY_TOLERANCE', 'COSX_INTS_TOLERANCE', 'COSX_OVERLAP_FITTING', 'COSX_PRUNING_SCHEME', 'COSX_RADIAL_POINTS_FINAL', 'COSX_RADIAL_POINTS_INITIAL', 'COSX_SPHERICAL_POINTS_FINAL', 'COSX_SPHERICAL_POINTS_INITIAL', 'COUPLED_INDUCTION', 'COUPLING', 'COUPLING_TERMS', 'COVALENT_CONNECT', 'CPHF_MEM_SAFETY_FACTOR', 'CPHF_TASKS', 'CUBEPROP_BASIS_FUNCTIONS', 'CUBEPROP_FILEPATH', 'CUBEPROP_ISOCONTOUR_THRESHOLD', 'CUBEPROP_ORBITALS', 'CUBEPROP_TASKS', 'CUBIC_BASIS_TOLERANCE', 'CUBIC_BLOCK_MAX_POINTS', 'CUBIC_GRID_OVERAGE', 'CUBIC_GRID_SPACING', 'CUTOFF', 'CUTOFF_AMPS_PRINT', 'DAMPING_CONVERGENCE', 'DAMPING_FACTOR_INDUCED', 'DAMPING_FACTOR_MULTIPOLE', 'DAMPING_PERCENTAGE', 'DAMP_INDUCED', 'DAMP_MULTIPOLE', 'DCT_FUNCTIONAL', 'DCT_GUESS', 'DCT_TYPE', 'DDX', 'DDX_DIIS_MAX_VECS', 'DDX_ETA', 'DDX_FMM', 'DDX_FMM_LOCAL_LMAX', 'DDX_FMM_MULTIPOLE_LMAX', 'DDX_INCORE', 'DDX_LMAX', 'DDX_LOGFILE', 'DDX_MAXITER', 'DDX_MODEL', 'DDX_N_LEBEDEV', 'DDX_RADII', 'DDX_RADII_SCALING', 'DDX_RADII_SET', 'DDX_SHIFT', 'DDX_SOLUTE_RADIAL_POINTS', 'DDX_SOLUTE_SPHERICAL_POINTS', 'DDX_SOLVATION_CONVERGENCE', 'DDX_SOLVENT', 'DDX_SOLVENT_EPSILON', 'DDX_SOLVENT_EPSILON_OPTICAL', 'DDX_SOLVENT_KAPPA', 'DEBUG', 'DELETE_TEI', 'DENOMINATOR_ALGORITHM', 'DENOMINATOR_DELTA'",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6714,Performance,CACHE,CACHELEVEL,6714,,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6728,Performance,CACHE,CACHETYPE,6728,,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5452,Testability,Test,Test,5452,"splay the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:190,Availability,error,error,190,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:618,Availability,avail,available,618,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:0,Deployability,UPDATE,UPDATE,0,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:1038,Deployability,install,installs,1038,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:395,Safety,avoid,avoid,395,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:208,Usability,learn,learned,208,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750
https://github.com/psi4/psi4/issues/3185#issuecomment-2179665836:281,Availability,error,error,281,"I'm not seeing any change in `compute_fcpi()` in 6 years -- https://github.com/psi4/psi4/blame/master/psi4/src/psi4/libscf_solver/hf.cc#L772-L801 . I also did a fresh clone and compile of master earlier today, and it was fine, so I'm not sure what circumstances could lead to your error. If you're rebuilding psi4 after a long interval, I'd suggest a new objdir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3185#issuecomment-2179665836
https://github.com/psi4/psi4/issues/3185#issuecomment-2179682307:266,Availability,error,error,266,"> I'm not seeing any change in in 6 years -- https://github.com/psi4/psi4/blame/master/psi4/src/psi4/libscf_solver/hf.cc#L772-L801 . I also did a fresh clone and compile of master earlier today, and it was fine, so I'm not sure what circumstances could lead to your error. If you're rebuilding psi4 after a long interval, I'd suggest a new objdir.`compute_fcpi()`. maybe because i enable brianqc? my compile being corrected after I add ""}""; btw , my link is [https://github.com/psi4/psi4/tree/master/psi4/src/psi4/libscf_solver](url)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3185#issuecomment-2179682307
https://github.com/psi4/psi4/issues/3185#issuecomment-2179692899:66,Security,access,access,66,"Aha, that makes perfect sense -- none of the Psi4 developers have access to BrianQC anymore. Lmk if the fix in #3186 isn't what you were suggesting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3185#issuecomment-2179692899
https://github.com/psi4/psi4/pull/3187#issuecomment-2243611607:50,Testability,test,tests,50,"@loriab @jturney PR is ready for merge, after all tests pass!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187#issuecomment-2243611607
https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:278,Availability,down,down,278,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393
https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:103,Deployability,install,installed,103,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393
https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:165,Deployability,install,installed,165,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393
https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:57,Testability,test,tests,57,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393
https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098:597,Performance,cache,cached-property,597,I typed conda list into my Ubuntu terminal and got the following return(s):. ```; # packages in environment at /home/emkal/psi4conda:; #; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_kmp_llvm conda-forge; adcc 0.15.17 py310hc6cd4ac_2 conda-forge; annotated-types 0.6.0 pyhd8ed1ab_0 conda-forge; archspec 0.2.3 pyhd8ed1ab_0 conda-forge; boltons 23.1.1 pyhd8ed1ab_0 conda-forge; brotli-python 1.1.0 py310hc6cd4ac_1 conda-forge; bzip2 1.0.8 hd590300_5 conda-forge; c-ares 1.26.0 hd590300_0 conda-forge; ca-certificates 2024.6.2 hbcca054_0 conda-forge; cached-property 1.5.2 hd8ed1ab_1 conda-forge; cached_property 1.5.2 pyha770c72_1 conda-forge; certifi 2024.6.2 pyhd8ed1ab_0 conda-forge; cffi 1.16.0 py310h2fee648_0 conda-forge; charset-normalizer 3.3.2 pyhd8ed1ab_0 conda-forge; colorama 0.4.6 pyhd8ed1ab_0 conda-forge; conda 24.5.0 py310hff52083_0 conda-forge; conda-libmamba-solver 24.1.0 pyhd8ed1ab_0 conda-forge; conda-package-handling 2.2.0 pyh38be061_0 conda-forge; conda-package-streaming 0.9.0 pyhd8ed1ab_0 conda-forge; cppe 0.3.1 py310h7c63755_9 conda-forge; dftd3-python 1.0.0 py310hdbe52f6_2 conda-forge; dftd4 3.6.0 hf49bc11_0 conda-forge; dftd4-python 3.6.0 py310hc409063_1 conda-forge; distro 1.9.0 pyhd8ed1ab_0 conda-forge; dkh 1.2 hd59d2e7_0 conda-forge; exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge; execnet 2.0.2 pyhd8ed1ab_0 conda-forge; fmt 10.2.1 h00ab1b0_0 conda-forge; frozendict 2.4.4 py310hc51659f_0 conda-forge; gau2grid 2.0.7 h0b41bf4_2 conda-forge; gcp-correction 2.3.1 h1990efc_2 conda-forge; geometric 1.0 pyhd8ed1ab_1 conda-forge; gtest 1.14.0 h00ab1b0_1 conda-forge; h5py 3.11.0 nompi_py310hf054cd7_102 conda-forge; hdf5 1.14.3 nompi_h4f84152_100 conda-forge; icu 73.2 h59595ed_0 conda-forge; idna 3.6 pyhd8ed1ab_0 conda-forge; iniconfig 2.0.0 pyhd8ed1ab_0 conda-forge; jsonpatch 1.33 pyhd8ed1ab_0 conda-forge; jsonpointer 3.0.0 py310hff52083_0 conda-forge; keyutils 1.6.1 h166bdaf_0 conda-forge; krb5 1.21.3 h659f571_0 c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098
https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098:551,Security,certificate,certificates,551,I typed conda list into my Ubuntu terminal and got the following return(s):. ```; # packages in environment at /home/emkal/psi4conda:; #; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_kmp_llvm conda-forge; adcc 0.15.17 py310hc6cd4ac_2 conda-forge; annotated-types 0.6.0 pyhd8ed1ab_0 conda-forge; archspec 0.2.3 pyhd8ed1ab_0 conda-forge; boltons 23.1.1 pyhd8ed1ab_0 conda-forge; brotli-python 1.1.0 py310hc6cd4ac_1 conda-forge; bzip2 1.0.8 hd590300_5 conda-forge; c-ares 1.26.0 hd590300_0 conda-forge; ca-certificates 2024.6.2 hbcca054_0 conda-forge; cached-property 1.5.2 hd8ed1ab_1 conda-forge; cached_property 1.5.2 pyha770c72_1 conda-forge; certifi 2024.6.2 pyhd8ed1ab_0 conda-forge; cffi 1.16.0 py310h2fee648_0 conda-forge; charset-normalizer 3.3.2 pyhd8ed1ab_0 conda-forge; colorama 0.4.6 pyhd8ed1ab_0 conda-forge; conda 24.5.0 py310hff52083_0 conda-forge; conda-libmamba-solver 24.1.0 pyhd8ed1ab_0 conda-forge; conda-package-handling 2.2.0 pyh38be061_0 conda-forge; conda-package-streaming 0.9.0 pyhd8ed1ab_0 conda-forge; cppe 0.3.1 py310h7c63755_9 conda-forge; dftd3-python 1.0.0 py310hdbe52f6_2 conda-forge; dftd4 3.6.0 hf49bc11_0 conda-forge; dftd4-python 3.6.0 py310hc409063_1 conda-forge; distro 1.9.0 pyhd8ed1ab_0 conda-forge; dkh 1.2 hd59d2e7_0 conda-forge; exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge; execnet 2.0.2 pyhd8ed1ab_0 conda-forge; fmt 10.2.1 h00ab1b0_0 conda-forge; frozendict 2.4.4 py310hc51659f_0 conda-forge; gau2grid 2.0.7 h0b41bf4_2 conda-forge; gcp-correction 2.3.1 h1990efc_2 conda-forge; geometric 1.0 pyhd8ed1ab_1 conda-forge; gtest 1.14.0 h00ab1b0_1 conda-forge; h5py 3.11.0 nompi_py310hf054cd7_102 conda-forge; hdf5 1.14.3 nompi_h4f84152_100 conda-forge; icu 73.2 h59595ed_0 conda-forge; idna 3.6 pyhd8ed1ab_0 conda-forge; iniconfig 2.0.0 pyhd8ed1ab_0 conda-forge; jsonpatch 1.33 pyhd8ed1ab_0 conda-forge; jsonpointer 3.0.0 py310hff52083_0 conda-forge; keyutils 1.6.1 h166bdaf_0 conda-forge; krb5 1.21.3 h659f571_0 c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098
https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098:5316,Usability,simpl,simple-,5316,conda-forge; pip 24.0 pyhd8ed1ab_0 conda-forge; platformdirs 4.2.0 pyhd8ed1ab_0 conda-forge; pluggy 1.4.0 pyhd8ed1ab_0 conda-forge; psi4 1.9.1 py310h2a5c594_2 conda-forge; psutil 6.0.0 py310hc51659f_0 conda-forge; pugixml 1.14 h59595ed_0 conda-forge; py-cpuinfo 9.0.0 pyhd8ed1ab_0 conda-forge; pybind11-abi 4 hd8ed1ab_3 conda-forge; pycosat 0.6.6 py310h2372a71_0 conda-forge; pycparser 2.21 pyhd8ed1ab_0 conda-forge; pydantic 2.6.1 pyhd8ed1ab_0 conda-forge; pydantic-core 2.16.2 py310hcb5633a_1 conda-forge; pyddx 0.6.0 py310h328bd66_2 conda-forge; pylibefp 0.6.2 py310he0c9aae_4 conda-forge; pysocks 1.7.1 pyha2e5f31_6 conda-forge; pytest 7.4.4 pyhd8ed1ab_0 conda-forge; pytest-xdist 3.5.0 pyhd8ed1ab_0 conda-forge; python 3.10.14 hd12c33a_0_cpython conda-forge; python_abi 3.10 4_cp310 conda-forge; pyyaml 6.0.1 py310h2372a71_1 conda-forge; qcelemental 0.28.0 pyhd8ed1ab_0 conda-forge; qcengine 0.30.0 pyhd8ed1ab_0 conda-forge; readline 8.2 h8228510_1 conda-forge; reproc 14.2.4.post0 hd590300_1 conda-forge; reproc-cpp 14.2.4.post0 h59595ed_1 conda-forge; requests 2.31.0 pyhd8ed1ab_0 conda-forge; ruamel.yaml 0.18.6 py310h2372a71_0 conda-forge; ruamel.yaml.clib 0.2.8 py310h2372a71_0 conda-forge; scipy 1.14.0 py310h93e2701_0 conda-forge; setuptools 69.0.3 pyhd8ed1ab_0 conda-forge; simple-dftd3 1.0.0 hd59d2e7_0 conda-forge; six 1.16.0 pyh6c4a22f_0 conda-forge; tbb 2021.11.0 h00ab1b0_1 conda-forge; tk 8.6.13 h2797004_0 conda-forge; toml-f 0.4.2 hd8f1df9_0 conda-forge; tomli 2.0.1 pyhd8ed1ab_0 conda-forge; tqdm 4.66.1 pyhd8ed1ab_0 conda-forge; truststore 0.8.0 pyhd8ed1ab_0 conda-forge; typing-extensions 4.9.0 hd8ed1ab_0 conda-forge; typing_extensions 4.9.0 pyha770c72_0 conda-forge; tzdata 2024a h0c530f3_0 conda-forge; urllib3 2.2.0 pyhd8ed1ab_0 conda-forge; wheel 0.42.0 pyhd8ed1ab_0 conda-forge; xz 5.2.6 h166bdaf_0 conda-forge; yaml 0.2.5 h7f98852_2 conda-forge; yaml-cpp 0.8.0 h59595ed_0 conda-forge; zstandard 0.22.0 py310hab88d88_1 conda-forge; zstd 1.5.6 ha6fb4c9_0 conda-forge; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195225098
https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024:134,Deployability,configurat,configuration,134,"Ok, that looks fine for psi4 in its own right. Jupyter must be in a separate environment. That can also work, but it'll need a little configuration -- I'm not surprised the initial jupy couldn't find it. Pretty much `export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/` or `sys.path.append(<same>)` from the jupy env should make the connection. `psi4 --psiapi` gives the exact values. https://psicode.org/psi4manual/master/build_planning.html#how-to-run-psi4-as-executable-or-python-module-from-conda-installation may also be helpful (do set scratch if running anything non-trivial).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024
https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024:526,Deployability,install,installation,526,"Ok, that looks fine for psi4 in its own right. Jupyter must be in a separate environment. That can also work, but it'll need a little configuration -- I'm not surprised the initial jupy couldn't find it. Pretty much `export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/` or `sys.path.append(<same>)` from the jupy env should make the connection. `psi4 --psiapi` gives the exact values. https://psicode.org/psi4manual/master/build_planning.html#how-to-run-psi4-as-executable-or-python-module-from-conda-installation may also be helpful (do set scratch if running anything non-trivial).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024
https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024:134,Modifiability,config,configuration,134,"Ok, that looks fine for psi4 in its own right. Jupyter must be in a separate environment. That can also work, but it'll need a little configuration -- I'm not surprised the initial jupy couldn't find it. Pretty much `export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/` or `sys.path.append(<same>)` from the jupy env should make the connection. `psi4 --psiapi` gives the exact values. https://psicode.org/psi4manual/master/build_planning.html#how-to-run-psi4-as-executable-or-python-module-from-conda-installation may also be helpful (do set scratch if running anything non-trivial).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195262024
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:168,Availability,redundant,redundant,168,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:523,Availability,redundant,redundant,523,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:638,Availability,error,errors,638,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:188,Deployability,install,installed,188,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:228,Deployability,install,installed,228,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:168,Safety,redund,redundant,168,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996:523,Safety,redund,redundant,523,"I went to the link and typed ""which psi4"" in my terminal and got a return synonymous with the path being correct, I believe (so it said the code for the path should be redundant): [If you installed the Psi4conda distribution or installed the PSI4 conda package into the main environment of an Anaconda or Miniconda distribution and added that to your [PATH](https://psicode.org/psi4manual/master/external.html#envvar-PATH), as prompted, then which psi4 likely yields condadist/bin/psi4 and the PATH setting lines below are redundant.] . which psi4; /home/emkal/psi4conda/bin/psi4. Additionally, trying the two commands suggested also had errors in syntax I believe? I also tried psi4 --psiapi which gave me the path and pythonpath; I tried copying the output in substitution of the ""PYTHONPATH"" but it didn't make a difference. [1] export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; File ""/tmp/ipykernel_10582/3886179417.py"", line 1; export PYTHONPATH <conda-env-prefix-with-psi4>/lib/python3.10/site-packages/; ^; SyntaxError: invalid syntax. [2] sys.path.append(<same>); File ""/tmp/ipykernel_10582/3391378744.py"", line 1; sys.path.append(<same>); ^; SyntaxError: invalid syntax",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195298996
https://github.com/psi4/psi4/issues/3188#issuecomment-2195361850:56,Deployability,install,install,56,"You have to do some substitution yourself based on your install locations. ""<conda-env-prefix-with-psi4>"" is ""/home/emkal/psi4conda/"" and ""same"" is ""/home/emkal/psi4conda/lib/python3.10/site-packages/"". The former is what would be done in bash _outside_ jupyter, and the latter is the equiv in python (inside jupyter).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195361850
https://github.com/psi4/psi4/issues/3188#issuecomment-2195402490:867,Availability,error,error,867,"> ![image](https://private-user-images.githubusercontent.com/174042911/343890176-4ecd3a4a-19a1-48a3-af1e-5c1c787756ff.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTk1MTE3NDksIm5iZiI6MTcxOTUxMTQ0OSwicGF0aCI6Ii8xNzQwNDI5MTEvMzQzODkwMTc2LTRlY2QzYTRhLTE5YTEtNDhhMy1hZjFlLTVjMWM3ODc3NTZmZi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwNjI3JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDYyN1QxODA0MDlaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1lNjhjNjNlMDljZWY3MDZiMTgwY2NmMDI0MzM4NzQyYjEyOTRkYjAzNGQ1YWNkMjBlNmIwMTk3YjM5NjYzYmI2JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.lrgh8Wm-ActfzXx9w5DLSgo9D-Bnf-eOKrQ1te9qJj8). The first one gives you a syntax error because it was meant to be executed in Bash, not Python, so naturally it does not have the correct syntax according to Python.; The second syntax error is because `sys.path.append` expects a string, and in Python you need to enclose string literals in quote characters.; Plus of course both of the paths you have tried to use were invalid, because the `<whatever>` notation generally means you are supposed to replace `<whatever>` with something before use.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195402490
https://github.com/psi4/psi4/issues/3188#issuecomment-2195402490:1019,Availability,error,error,1019,"> ![image](https://private-user-images.githubusercontent.com/174042911/343890176-4ecd3a4a-19a1-48a3-af1e-5c1c787756ff.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTk1MTE3NDksIm5iZiI6MTcxOTUxMTQ0OSwicGF0aCI6Ii8xNzQwNDI5MTEvMzQzODkwMTc2LTRlY2QzYTRhLTE5YTEtNDhhMy1hZjFlLTVjMWM3ODc3NTZmZi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwNjI3JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDYyN1QxODA0MDlaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1lNjhjNjNlMDljZWY3MDZiMTgwY2NmMDI0MzM4NzQyYjEyOTRkYjAzNGQ1YWNkMjBlNmIwMTk3YjM5NjYzYmI2JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.lrgh8Wm-ActfzXx9w5DLSgo9D-Bnf-eOKrQ1te9qJj8). The first one gives you a syntax error because it was meant to be executed in Bash, not Python, so naturally it does not have the correct syntax according to Python.; The second syntax error is because `sys.path.append` expects a string, and in Python you need to enclose string literals in quote characters.; Plus of course both of the paths you have tried to use were invalid, because the `<whatever>` notation generally means you are supposed to replace `<whatever>` with something before use.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195402490
https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778:286,Modifiability,refactor,refactoring,286,"I'm using `mp.set_start_method('spawn', force=True)` which seemed long-term safe (cf [this Python discussion](https://discuss.python.org/t/switching-default-multiprocessing-context-to-spawn-on-posix-as-well/21868)), although perhaps `forkserver` would be just as safe. I had to do some refactoring elsewhere to get this to work but it ultimately worked out, so this isn't blocking me. Still, it would be nice not to have to worry about this behavior - not sure what in Psi4 breaks with `fork`, or if it's easily fixable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778
https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778:76,Safety,safe,safe,76,"I'm using `mp.set_start_method('spawn', force=True)` which seemed long-term safe (cf [this Python discussion](https://discuss.python.org/t/switching-default-multiprocessing-context-to-spawn-on-posix-as-well/21868)), although perhaps `forkserver` would be just as safe. I had to do some refactoring elsewhere to get this to work but it ultimately worked out, so this isn't blocking me. Still, it would be nice not to have to worry about this behavior - not sure what in Psi4 breaks with `fork`, or if it's easily fixable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778
https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778:263,Safety,safe,safe,263,"I'm using `mp.set_start_method('spawn', force=True)` which seemed long-term safe (cf [this Python discussion](https://discuss.python.org/t/switching-default-multiprocessing-context-to-spawn-on-posix-as-well/21868)), although perhaps `forkserver` would be just as safe. I had to do some refactoring elsewhere to get this to work but it ultimately worked out, so this isn't blocking me. Still, it would be nice not to have to worry about this behavior - not sure what in Psi4 breaks with `fork`, or if it's easily fixable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189#issuecomment-2211335778
https://github.com/psi4/psi4/issues/3198#issuecomment-2285238805:157,Performance,perform,performance,157,"Bumping this - the [C7g](https://aws.amazon.com/ec2/instance-types/c7g/) ARM-based Amazon EC2 instances are probably the most cost-effective choice for high-performance CPU computing in the cloud right now, and being able to run Psi4 here would be very useful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2285238805
https://github.com/psi4/psi4/issues/3198#issuecomment-2285250860:241,Availability,avail,available,241,"Thanks for bumping this. Unlike the osx-arm64 migration, I didn't know how to trigger aarch64-enabling PRs on c-f. It looks like https://conda-forge.org/docs/maintainer/knowledge_base/#using-arch_rebuildtxt is the answer. `libxc` is already available, but at least `libint` and `gau2grid` will need to be built before `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2285250860
https://github.com/psi4/psi4/issues/3198#issuecomment-2285262248:177,Energy Efficiency,energy,energy,177,"Cool, no worries - convincing the scientific community to accept ARM as normal will be a slog in every field, but it seems like the direction the world is going. There are real energy efficiency arguments for ditching x86, as I'm sure you know, and it's likely that hyperscalers will try to promote ARM more and more.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2285262248
https://github.com/psi4/psi4/issues/3198#issuecomment-2286089263:345,Modifiability,extend,extended,345,"> Bumping this - the [C7g](https://aws.amazon.com/ec2/instance-types/c7g/) ARM-based Amazon EC2 instances are probably the most cost-effective choice for high-performance CPU computing in the cloud right now. Not trying to derail this conversation, but I am not convinced that is true, at least if one plans to run close to 100% utilization for extended periods of time.; Something like a c7gd.12xlarge (48 vCPU, 96 GiB RAM, NVME SSD in the node) costs 590 USD per month, if the cheapest Amazon region (Mumbai, India) is used and 1 year is paid for in advance.; From a different provider one can rent a bare metal Ampere Altra Q80-30 server (80 cores, 128 GiB RAM, NVME SSD in the node), for 185 USD per month + $85 setup fee.; Even a 48 core latest-gen AMD EPYC, which will quite likely be faster than the Graviton 3 instance, costs only $218/month, and it comes with 256 GiB of RAM. Both of these options are cheaper per hour than Amazon's spot pricing (!!) for c7gd.12xlarge. So unless there are complications like funding agencies not allowing grant funds to be spent at arbitrary server providers, I think one can get more bulk compute for less money, compared to Amazon. Of course on-demand EC2 is very good for doing short bursts of compute, but for job marathons I don't think Amazon is all that competitive, not even with their own ARM CPUs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2286089263
https://github.com/psi4/psi4/issues/3198#issuecomment-2286089263:159,Performance,perform,performance,159,"> Bumping this - the [C7g](https://aws.amazon.com/ec2/instance-types/c7g/) ARM-based Amazon EC2 instances are probably the most cost-effective choice for high-performance CPU computing in the cloud right now. Not trying to derail this conversation, but I am not convinced that is true, at least if one plans to run close to 100% utilization for extended periods of time.; Something like a c7gd.12xlarge (48 vCPU, 96 GiB RAM, NVME SSD in the node) costs 590 USD per month, if the cheapest Amazon region (Mumbai, India) is used and 1 year is paid for in advance.; From a different provider one can rent a bare metal Ampere Altra Q80-30 server (80 cores, 128 GiB RAM, NVME SSD in the node), for 185 USD per month + $85 setup fee.; Even a 48 core latest-gen AMD EPYC, which will quite likely be faster than the Graviton 3 instance, costs only $218/month, and it comes with 256 GiB of RAM. Both of these options are cheaper per hour than Amazon's spot pricing (!!) for c7gd.12xlarge. So unless there are complications like funding agencies not allowing grant funds to be spent at arbitrary server providers, I think one can get more bulk compute for less money, compared to Amazon. Of course on-demand EC2 is very good for doing short bursts of compute, but for job marathons I don't think Amazon is all that competitive, not even with their own ARM CPUs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2286089263
https://github.com/psi4/psi4/issues/3198#issuecomment-2286357658:861,Safety,avoid,avoiding,861,"> So unless there are complications like funding agencies not allowing grant funds to be spent at arbitrary server providers, I think one can get more bulk compute for less money, compared to Amazon. Of course on-demand EC2 is very good for doing short bursts of compute, but for job marathons I don't think Amazon is all that competitive, not even with their own ARM CPUs. Fair points all, and you're right that the original claim was too strong. For the situation we're in, burstable cloud compute makes by far the most sense. I know AWS is pretty commonly used for quantum chemistry in pharma, although you're right that ""Tier 1"" hyperscalers (AWS, Google Cloud, Azure) are almost always more expensive than ""Tier 2"" cloud providers like Digital Ocean, Vultr, Linode, etc. Frankly, if you want to run years of sustained workloads, you're probably better off avoiding the cloud altogether... But the broader point stands that ARM compute seems to be cheaper than x86 compute, at least as far as I've seen across different cloud providers.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2286357658
https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:112,Availability,avail,available,112,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987
https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:0,Deployability,Update,Update,0,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987
https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:97,Deployability,install,installers,97,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987
https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898:58,Availability,down,downloadable,58,"The relevant computer is switched on again, so installers downloadable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898
https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898:47,Deployability,install,installers,47,"The relevant computer is switched on again, so installers downloadable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898
https://github.com/psi4/psi4/issues/3202#issuecomment-2276260506:159,Deployability,update,updated,159,"I know, it's this issue: https://github.com/PCMSolver/pcmsolver/issues/206 . An additional check was added to pcmsolver that hits larger molecules, and when I updated from v1.2.1 to v1.2.3 when doing the conda-forge transition, that check got turned on. I should do a new binary version commenting out that check so that calcs at least run as before, even if they're slightly less to be trusted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202#issuecomment-2276260506
https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661:70,Integrability,interface,interface,70,"If anyone else is having issues here, we've just configured the `ddx` interface to Psi4 and now solvent is working again on our systems—unfortunately there are no analytical gradients w/ the current interface, but I think this will change in the future (see discussion in #2767). The interface is documented nicely [here](https://psicode.org/psi4manual/master/ddx.html).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661
https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661:199,Integrability,interface,interface,199,"If anyone else is having issues here, we've just configured the `ddx` interface to Psi4 and now solvent is working again on our systems—unfortunately there are no analytical gradients w/ the current interface, but I think this will change in the future (see discussion in #2767). The interface is documented nicely [here](https://psicode.org/psi4manual/master/ddx.html).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661
https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661:284,Integrability,interface,interface,284,"If anyone else is having issues here, we've just configured the `ddx` interface to Psi4 and now solvent is working again on our systems—unfortunately there are no analytical gradients w/ the current interface, but I think this will change in the future (see discussion in #2767). The interface is documented nicely [here](https://psicode.org/psi4manual/master/ddx.html).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661
https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661:49,Modifiability,config,configured,49,"If anyone else is having issues here, we've just configured the `ddx` interface to Psi4 and now solvent is working again on our systems—unfortunately there are no analytical gradients w/ the current interface, but I think this will change in the future (see discussion in #2767). The interface is documented nicely [here](https://psicode.org/psi4manual/master/ddx.html).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202#issuecomment-2411453661
https://github.com/psi4/psi4/pull/3206#issuecomment-2302073336:46,Deployability,update,update,46,"Thanks for this, this is a nice documentation update! I added a couple of comments for things that could be changed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2302073336
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:1206,Deployability,Release,Release,1206,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:1283,Deployability,Release,Release,1283,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:361,Integrability,rout,route,361,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:716,Modifiability,config,configure,716,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:830,Modifiability,config,configure,830,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:489,Performance,cache,cache,489,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:782,Performance,cache,cache,782,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:894,Performance,cache,cache,894,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:963,Performance,cache,cache,963,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:1044,Performance,cache,cache,1044,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:55,Usability,clear,clear,55,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:253,Usability,clear,clear,253,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:1226,Deployability,Release,Release,1226,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:1303,Deployability,Release,Release,1303,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:370,Integrability,rout,route,370,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:725,Modifiability,config,configure,725,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:839,Modifiability,config,configure,839,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:498,Performance,cache,cache,498,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:791,Performance,cache,cache,791,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:903,Performance,cache,cache,903,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:972,Performance,cache,cache,972,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:1053,Performance,cache,cache,1053,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:57,Usability,clear,clear,57,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:255,Usability,clear,clear,255,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171
https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123:170,Energy Efficiency,energy,energy,170,"I think this is causing jobs to die on long-running remote servers:. ```; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); ^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 193, in scf_initialize; self.initialize_jk(self.memory_jk_, jk=jk); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 128, in initialize_jk; jk.initialize(); MemoryError: std::bad_alloc; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123
https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123:196,Energy Efficiency,energy,energy,196,"I think this is causing jobs to die on long-running remote servers:. ```; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); ^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 193, in scf_initialize; self.initialize_jk(self.memory_jk_, jk=jk); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 128, in initialize_jk; jk.initialize(); MemoryError: std::bad_alloc; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:88853,Modifiability,config,config,88853,"globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1291; #423 0x000055ff90740523 in run_mod (mod=mod@entry=0x55ff952b55d8, filename=filename@entry=0x7fac0e29b2d0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0, ; flags=flags@entry=0x7fff1128dce8, arena=arena@entry=0x7fac0e303b90) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1312; #424 0x000055ff905d76f5 in pyrun_file (fp=fp@entry=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, start=start@entry=257, globals=globals@entry=0x7fac0e241bc0, ; locals=locals@entry=0x7fac0e241bc0, closeit=closeit@entry=1, flags=0x7fff1128dce8) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208; #425 0x000055ff9073a9fe in _PyRun_SimpleFileObject (fp=0x55ff95162c40, filename=0x7fac0e29b2d0, closeit=1, flags=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456; #426 0x000055ff9073a594 in _PyRun_AnyFileObject (fp=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, closeit=closeit@entry=1, flags=flags@entry=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90; #427 0x000055ff9073778b in pymain_run_file_obj (skip_source_first_line=0, filename=0x7fac0e29b2d0, program_name=0x7fac0e299d10) at /usr/local/src/conda/python-3.10.14/Modules/main.c:357; #428 pymain_run_file (config=0x55ff95142180) at /usr/local/src/conda/python-3.10.14/Modules/main.c:376; #429 pymain_run_python (exitcode=0x7fff1128dce4) at /usr/local/src/conda/python-3.10.14/Modules/main.c:591; #430 Py_RunMain () at /usr/local/src/conda/python-3.10.14/Modules/main.c:670; #431 0x000055ff907081f7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.14/Modules/main.c:1090; #432 0x00007fac1bfc1088 in __libc_start_call_main () from /lib64/libc.so.6; #433 0x00007fac1bfc114b in __libc_start_main_impl () from /lib64/libc.so.6; #434 0x000055ff907080f1 in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:330,Performance,optimiz,optimized,330,"The key is to include `-Wp,-D_GLIBCXX_ASSERTIONS ` in the compile flags. The backtrace is not very informative; ```; (gdb) bt; #0 0x00007fabfd87cb22 in xc_func_init () from /home/susi/.conda/envs/p4env/lib/libxc.so.12; #1 0x00007fac0c8ce261 in psi::LibXCFunctional::LibXCFunctional (this=0x55ff95e75e20, xc_name=..., unpolarized=<optimized out>); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/unique_ptr.h:193; #2 0x00007fac0c8d632b in psi::SuperFunctional::XC_build (name=..., unpolarized=<optimized out>, tweakers_=...); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/basic_string.tcc:242; #3 0x00007fac0b82e3cf in pybind11::detail::argument_loader<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&>::call_impl<std::shared_ptr<psi::SuperFunctional>, std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), 0ul, 1ul, 2ul, pybind11::detail::void_type>(std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:532,Performance,optimiz,optimized,532,"The key is to include `-Wp,-D_GLIBCXX_ASSERTIONS ` in the compile flags. The backtrace is not very informative; ```; (gdb) bt; #0 0x00007fabfd87cb22 in xc_func_init () from /home/susi/.conda/envs/p4env/lib/libxc.so.12; #1 0x00007fac0c8ce261 in psi::LibXCFunctional::LibXCFunctional (this=0x55ff95e75e20, xc_name=..., unpolarized=<optimized out>); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/unique_ptr.h:193; #2 0x00007fac0c8d632b in psi::SuperFunctional::XC_build (name=..., unpolarized=<optimized out>, tweakers_=...); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/basic_string.tcc:242; #3 0x00007fac0b82e3cf in pybind11::detail::argument_loader<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&>::call_impl<std::shared_ptr<psi::SuperFunctional>, std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), 0ul, 1ul, 2ul, pybind11::detail::void_type>(std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:2283,Performance,optimiz,optimized,2283,"C_build (name=..., unpolarized=<optimized out>, tweakers_=...); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/basic_string.tcc:242; #3 0x00007fac0b82e3cf in pybind11::detail::argument_loader<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&>::call_impl<std::shared_ptr<psi::SuperFunctional>, std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), 0ul, 1ul, 2ul, pybind11::detail::void_type>(std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, pybind11::detail::void_type&&) && (f=<optimized out>, this=0x7fff11285af0); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/char_traits.h:350; #4 pybind11::detail::argument_loader<std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:3934,Performance,optimiz,optimized,3934,"std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, pybind11::detail::void_type&&) && (f=<optimized out>, this=0x7fff11285af0); at /home/susi/.conda/envs/p4env/lib/gcc/x86_64-conda-linux-gnu/14.1.0/include/c++/bits/char_traits.h:350; #4 pybind11::detail::argument_loader<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&>::call<std::shared_ptr<psi::SuperFunctional>, pybind11::detail::void_type, std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&)>(std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&)) && (this=0x7fff11285af0, ; f=<optimized out>) at /home/susi/.conda/envs/p4env/include/pybind11/cast.h:1600; #5 pybind11::cpp_function::initialize<std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:6306,Performance,optimiz,optimized,6306,"g<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), std::shared_ptr<psi::SuperFunctional>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&, pybind11::name, pybind11::scope, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg_v, char [43]>(std::shared_ptr<psi::SuperFunctional> (*&)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), std::shared_ptr<psi::SuperFunctional> (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:6464,Performance,optimiz,optimized,6464,"cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), std::shared_ptr<psi::SuperFunctional> (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:6652,Performance,optimiz,optimized,6652,"raits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:6676,Performance,optimiz,optimized,6676,"raits<char>, std::allocator<char> >, bool, std::optional<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > > const&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7139,Performance,optimiz,optimized,7139,"::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7161,Performance,optimiz,optimized,7161,"::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7210,Performance,optimiz,optimized,7210,"::arg_v const&, char const (&) [43])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=<optimized out>, call=...) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7351,Performance,optimiz,optimized,7351,"pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7421,Performance,optimiz,optimized,7421,"pybind11.h:297; #6 0x00007fac0b7a3925 in pybind11::cpp_function::dispatcher (self=<optimized out>, args_in=0x7fabd7888e00, kwargs_in=0x0) at /home/susi/.conda/envs/p4env/include/pybind11/pybind11.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7554,Performance,optimiz,optimized,7554,"1.h:987; #7 0x000055ff906815a6 in cfunction_call (func=0x7fac0e0cdb20, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; --Type <RET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pytho",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7726,Performance,optimiz,optimized,7726,"ET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7807,Performance,optimiz,optimized,7807,"ET> for more, q to quit, c to continue without paging--; #8 0x000055ff9067aa6b in _PyObject_MakeTpCall (tstate=0x55ff9515e050, callable=callable@entry=0x7fac0e0cdb20, args=args@entry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7922,Performance,optimiz,optimized,7922,"ntry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:7967,Performance,optimiz,optimized,7967,"ntry=0x55ff96063ea0, nargs=2, keywords=keywords@entry=0x0); at /usr/local/src/conda/python-3.10.14/Objects/call.c:215; #9 0x000055ff906769d6 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=<optimized out>, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:112; #10 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8246,Performance,optimiz,optimized,8246,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8272,Performance,optimiz,optimized,8272,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8294,Performance,optimiz,optimized,8294,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8482,Performance,optimiz,optimized,8482,"ct.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8506,Performance,optimiz,optimized,8506,"ct.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8531,Performance,optimiz,optimized,8531,"ct.h:99; #11 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff96063ea0, callable=0x7fac0e0cdb20) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #12 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8681,Performance,optimiz,optimized,8681,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286030, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #13 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:8884,Performance,optimiz,optimized,8884,"Default (tstate=<optimized out>, f=0x55ff96063c70, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #14 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:9056,Performance,optimiz,optimized,9056,"0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bce",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:9137,Performance,optimiz,optimized,9137,"0, f=0x55ff96063c70, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #15 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bce",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:9252,Performance,optimiz,optimized,9252,"mized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:9297,Performance,optimiz,optimized,9297,"mized out>, args=<optimized out>, locals=0x0, con=0x7fabd8177800, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #16 _PyFunction_Vectorcall (func=0x7fabd81777f0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #17 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #18 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd84ecf40, callable=0x7fabd81777f0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10065,Performance,optimiz,optimized,10065,"inter>, trace_info=0x7fff112861e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #20 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10244,Performance,optimiz,optimized,10244,"abd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10266,Performance,optimiz,optimized,10266,"abd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10289,Performance,optimiz,optimized,10289,"abd84ecdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #21 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd84ecdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10486,Performance,optimiz,optimized,10486,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10511,Performance,optimiz,optimized,10511,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #22 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112862e0, locals=locals@entry=0x7fabd7bced00, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10739,Performance,optimiz,optimized,10739,", argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #23 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd78907c0, globals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10854,Performance,optimiz,optimized,10854,"lobals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, narg",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:10899,Performance,optimiz,optimized,10899,"lobals=globals@entry=0x7fabd7bced00, locals=locals@entry=0x7fabd7bced00); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #24 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd7bced00, globals=0x7fabd7bced00, source=0x7fabd78907c0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #25 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, narg",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11178,Performance,optimiz,optimized,11178,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11204,Performance,optimiz,optimized,11204,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11226,Performance,optimiz,optimized,11226,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #26 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11414,Performance,optimiz,optimized,11414,"ALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11438,Performance,optimiz,optimized,11438,"ALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11463,Performance,optimiz,optimized,11463,"ALL (func=0x7fac0e398e00, args=0x7fabd7888dd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #27 0x000055ff90677205 in do_call_core (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11613,Performance,optimiz,optimized,11613,"re (kwdict=0x7fabd7bce4c0, callargs=0x7fabd7888dc0, func=0x7fac0e398e00, trace_info=0x7fff112864b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:11882,Performance,optimiz,optimized,11882,"f=0x7fabd8949cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #29 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8949cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12054,Performance,optimiz,optimized,12054,"a/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12135,Performance,optimiz,optimized,12135,"a/python-3.10.14/Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12250,Performance,optimiz,optimized,12250,"tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12295,Performance,optimiz,optimized,12295,"tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #31 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #32 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12574,Performance,optimiz,optimized,12574,"=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12600,Performance,optimiz,optimized,12600,"=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12622,Performance,optimiz,optimized,12622,"=0x7fabd8697488, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; --Type <RET> for more, q to quit, c to continue without paging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12810,Performance,optimiz,optimized,12810,"aging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12834,Performance,optimiz,optimized,12834,"aging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:12859,Performance,optimiz,optimized,12859,"aging--; #33 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8697488, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #34 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13009,Performance,optimiz,optimized,13009,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286660, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #35 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13212,Performance,optimiz,optimized,13212,"Default (tstate=<optimized out>, f=0x7fabd8697300, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #36 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13384,Performance,optimiz,optimized,13384,"0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13465,Performance,optimiz,optimized,13465,"0, f=0x7fabd8697300, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #37 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13580,Performance,optimiz,optimized,13580,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13625,Performance,optimiz,optimized,13625,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #38 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #39 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13904,Performance,optimiz,optimized,13904,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13930,Performance,optimiz,optimized,13930,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:13952,Performance,optimiz,optimized,13952,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14140,Performance,optimiz,optimized,14140,"t.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14164,Performance,optimiz,optimized,14164,"t.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14189,Performance,optimiz,optimized,14189,"t.h:114; #40 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8891140, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #41 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14339,Performance,optimiz,optimized,14339,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286810, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #42 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14542,Performance,optimiz,optimized,14542,"Default (tstate=<optimized out>, f=0x7fabd8890fc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #43 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14714,Performance,optimiz,optimized,14714,"0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14795,Performance,optimiz,optimized,14795,"0, f=0x7fabd8890fc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #44 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14910,Performance,optimiz,optimized,14910,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:14955,Performance,optimiz,optimized,14955,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #45 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #46 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15234,Performance,optimiz,optimized,15234,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15260,Performance,optimiz,optimized,15260,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15282,Performance,optimiz,optimized,15282,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15470,Performance,optimiz,optimized,15470,"t.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15494,Performance,optimiz,optimized,15494,"t.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15519,Performance,optimiz,optimized,15519,"t.h:114; #47 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd88a0bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #48 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15669,Performance,optimiz,optimized,15669,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112869c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #49 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:15872,Performance,optimiz,optimized,15872,"Default (tstate=<optimized out>, f=0x7fabd88a0a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #50 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16044,Performance,optimiz,optimized,16044,"0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16125,Performance,optimiz,optimized,16125,"0, f=0x7fabd88a0a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16240,Performance,optimiz,optimized,16240,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16285,Performance,optimiz,optimized,16285,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #52 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #53 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16564,Performance,optimiz,optimized,16564,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16590,Performance,optimiz,optimized,16590,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16612,Performance,optimiz,optimized,16612,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16800,Performance,optimiz,optimized,16800,"t.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16824,Performance,optimiz,optimized,16824,"t.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:16849,Performance,optimiz,optimized,16849,"t.h:114; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b32ed0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11286b70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32d40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #57 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32d40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #58 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #59 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:17807,Performance,optimiz,optimized,17807,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd887f290, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #65 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd887f290, name=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd888",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:17831,Performance,optimiz,optimized,17831,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #60 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11286ca0, callable=0x7fac0e363370, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd887f290, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #65 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd887f290, name=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd888",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:18091,Performance,optimiz,optimized,18091,", tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #61 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd887f290, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #65 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd887f290, name=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:18206,Performance,optimiz,optimized,18206,"ate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd887f290, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #65 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd887f290, name=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:18251,Performance,optimiz,optimized,18251,"ate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11286d30) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #62 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #63 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd784bdb0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #64 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8887530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd887f290, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #65 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd887f290, name=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19019,Performance,optimiz,optimized,19019,"=0x7fabd8887530, f=0x7fabd8fa9cf0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19198,Performance,optimiz,optimized,19198,"abd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19220,Performance,optimiz,optimized,19220,"abd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19243,Performance,optimiz,optimized,19243,"abd8fa9cf0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #67 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa9cf0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19440,Performance,optimiz,optimized,19440,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19465,Performance,optimiz,optimized,19465,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #68 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112870b0, locals=locals@entry=0x7fabd8887400, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19693,Performance,optimiz,optimized,19693,", argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #69 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd88826b0, globals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19808,Performance,optimiz,optimized,19808,"lobals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:19853,Performance,optimiz,optimized,19853,"lobals=globals@entry=0x7fabd8887400, locals=locals@entry=0x7fabd8887400); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #70 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8887400, globals=0x7fabd8887400, source=0x7fabd88826b0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #71 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20132,Performance,optimiz,optimized,20132,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20158,Performance,optimiz,optimized,20158,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20180,Performance,optimiz,optimized,20180,"odule=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #72 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20368,Performance,optimiz,optimized,20368,"ALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20392,Performance,optimiz,optimized,20392,"ALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20417,Performance,optimiz,optimized,20417,"ALL (func=0x7fac0e398e00, args=0x7fabd88851d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #73 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20567,Performance,optimiz,optimized,20567,"re (kwdict=0x7fabd8887300, callargs=0x7fabd88851c0, func=0x7fac0e398e00, trace_info=0x7fff11287280, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #74 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20770,Performance,optimiz,optimized,20770,"Default (tstate=<optimized out>, f=0x7fabd8c49700, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #75 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:20942,Performance,optimiz,optimized,20942,"0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21023,Performance,optimiz,optimized,21023,"0, f=0x7fabd8c49700, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #76 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21138,Performance,optimiz,optimized,21138,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21183,Performance,optimiz,optimized,21183,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #77 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #78 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21462,Performance,optimiz,optimized,21462,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21488,Performance,optimiz,optimized,21488,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21510,Performance,optimiz,optimized,21510,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21698,Performance,optimiz,optimized,21698,"t.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21722,Performance,optimiz,optimized,21722,"t.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21747,Performance,optimiz,optimized,21747,"t.h:114; #79 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6ec68, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #80 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:21897,Performance,optimiz,optimized,21897,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287430, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #81 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22100,Performance,optimiz,optimized,22100,"Default (tstate=<optimized out>, f=0x7fabd8f6eae0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #82 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6eae0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22338,Performance,optimiz,optimized,22338,"f9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22419,Performance,optimiz,optimized,22419,"f9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #83 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22534,Performance,optimiz,optimized,22534,"tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22579,Performance,optimiz,optimized,22579,"tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #84 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #85 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22858,Performance,optimiz,optimized,22858,"=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22884,Performance,optimiz,optimized,22884,"=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:22906,Performance,optimiz,optimized,22906,"=0x7fabd8b7c9c0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #86 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimize",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23094,Performance,optimiz,optimized,23094,"ut>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23118,Performance,optimiz,optimized,23118,"ut>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23143,Performance,optimiz,optimized,23143,"ut>, args=0x7fabd8b7c9c0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; --Type <RET> for more, q to quit, c to continue without paging--; #87 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23293,Performance,optimiz,optimized,23293,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112875e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #88 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23496,Performance,optimiz,optimized,23496,"Default (tstate=<optimized out>, f=0x7fabd8b7c840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #89 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23668,Performance,optimiz,optimized,23668,"0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23749,Performance,optimiz,optimized,23749,"0, f=0x7fabd8b7c840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #90 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23864,Performance,optimiz,optimized,23864,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:23909,Performance,optimiz,optimized,23909,"mized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #91 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #92 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24188,Performance,optimiz,optimized,24188,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24214,Performance,optimiz,optimized,24214,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24236,Performance,optimiz,optimized,24236,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24424,Performance,optimiz,optimized,24424,"t.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24448,Performance,optimiz,optimized,24448,"t.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24473,Performance,optimiz,optimized,24473,"t.h:114; #93 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918df0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #94 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24623,Performance,optimiz,optimized,24623,"ction (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287790, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #95 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:24827,Performance,optimiz,optimized,24827,"Default (tstate=<optimized out>, f=0x7fabd8918c40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #96 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25000,Performance,optimiz,optimized,25000," f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25081,Performance,optimiz,optimized,25081," f=0x7fabd8918c40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #97 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25197,Performance,optimiz,optimized,25197,"zed out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25242,Performance,optimiz,optimized,25242,"zed out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #98 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #99 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25523,Performance,optimiz,optimized,25523,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25549,Performance,optimiz,optimized,25549,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25571,Performance,optimiz,optimized,25571,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25760,Performance,optimiz,optimized,25760,"14; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25784,Performance,optimiz,optimized,25784,"14; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:25809,Performance,optimiz,optimized,25809,"14; #100 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8b321b0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #101 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287940, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8b32020, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #103 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8b32020, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #105 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:26695,Performance,optimiz,optimized,26695,"05 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_inf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:26719,Performance,optimiz,optimized,26719,"05 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #106 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_inf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:26873,Performance,optimiz,optimized,26873,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwfla",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:26895,Performance,optimiz,optimized,26895,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwfla",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:26917,Performance,optimiz,optimized,26917,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11287a70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwfla",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27068,Performance,optimiz,optimized,27068,"0.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27092,Performance,optimiz,optimized,27092,"0.14/Include/cpython/abstract.h:114; #107 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11287b00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27226,Performance,optimiz,optimized,27226,"n-3.10.14/Objects/call.c:734; #108 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27445,Performance,optimiz,optimized,27445,"nda/python-3.10.14/Objects/call.c:824; #109 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd887f0f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #110 PyImport_ImportModuleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nar",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27731,Performance,optimiz,optimized,27731,"oduleLevelObject (name=0x7fabd887f0f0, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #111 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27847,Performance,optimiz,optimized,27847,"f=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:27892,Performance,optimiz,optimized,27892,"f=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #112 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #113 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28173,Performance,optimiz,optimized,28173,"ized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28199,Performance,optimiz,optimized,28199,"ized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28221,Performance,optimiz,optimized,28221,"ized out>, args=0x7fabd8a583d0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #114 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28410,Performance,optimiz,optimized,28410,"bd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28434,Performance,optimiz,optimized,28434,"bd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28459,Performance,optimiz,optimized,28459,"bd8a583d0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; --Type <RET> for more, q to quit, c to continue without paging--; #115 0x000055ff90677205 in do_call_core (kwdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28610,Performance,optimiz,optimized,28610,"wdict=0x7fabd88870c0, callargs=0x7fabd8a583d0, func=0x7fac0e3989a0, trace_info=0x7fff11287e40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #116 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28814,Performance,optimiz,optimized,28814,"ult (tstate=<optimized out>, f=0x55ff95de00f0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #117 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:28987,Performance,optimiz,optimized,28987,"0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29068,Performance,optimiz,optimized,29068,"0x55ff95de00f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #118 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29184,Performance,optimiz,optimized,29184,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29229,Performance,optimiz,optimized,29229,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #119 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #120 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29510,Performance,optimiz,optimized,29510,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29536,Performance,optimiz,optimized,29536,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29558,Performance,optimiz,optimized,29558,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29747,Performance,optimiz,optimized,29747,"14; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29771,Performance,optimiz,optimized,29771,"14; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29796,Performance,optimiz,optimized,29796,"14; #121 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95ddda10, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #122 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:29947,Performance,optimiz,optimized,29947," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11287ff0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #123 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30151,Performance,optimiz,optimized,30151,"ult (tstate=<optimized out>, f=0x55ff95ddd860, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #124 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30324,Performance,optimiz,optimized,30324,"0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30405,Performance,optimiz,optimized,30405,"0x55ff95ddd860, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #125 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30521,Performance,optimiz,optimized,30521,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30566,Performance,optimiz,optimized,30566,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #126 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #127 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30847,Performance,optimiz,optimized,30847,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30873,Performance,optimiz,optimized,30873,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:30895,Performance,optimiz,optimized,30895,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:31084,Performance,optimiz,optimized,31084,"14; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:31108,Performance,optimiz,optimized,31108,"14; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:31133,Performance,optimiz,optimized,31133,"14; #128 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4b831d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #129 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112881a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #130 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b83040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #131 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b83040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #132 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #133 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:32030,Performance,optimiz,optimized,32030,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8a587f0, level=2); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #139 0x000055ff9067536b in import_name (level=0x7fac0e300110, fromlist=0x7fabd8a587f0, name=0x7fabd887ef60, f=0x55ff95dcd100, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:32054,Performance,optimiz,optimized,32054,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #134 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8a587f0, level=2); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #139 0x000055ff9067536b in import_name (level=0x7fac0e300110, fromlist=0x7fabd8a587f0, name=0x7fabd887ef60, f=0x55ff95dcd100, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:32315,Performance,optimiz,optimized,32315,"s=0x0, nargsf=2, args=0x7fff112882d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #135 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8a587f0, level=2); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #139 0x000055ff9067536b in import_name (level=0x7fac0e300110, fromlist=0x7fabd8a587f0, name=0x7fabd887ef60, f=0x55ff95dcd100, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x00",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:32431,Performance,optimiz,optimized,32431,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8a587f0, level=2); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #139 0x000055ff9067536b in import_name (level=0x7fac0e300110, fromlist=0x7fabd8a587f0, name=0x7fabd887ef60, f=0x55ff95dcd100, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmod",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:32476,Performance,optimiz,optimized,32476,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11288360) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #136 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #137 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd884ea30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #138 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd887ef60, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8a587f0, level=2); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #139 0x000055ff9067536b in import_name (level=0x7fac0e300110, fromlist=0x7fabd8a587f0, name=0x7fabd887ef60, f=0x55ff95dcd100, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmod",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33314,Performance,optimiz,optimized,33314,"al/src/conda/python-3.10.14/Python/ceval.c:6018; #140 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95dcd100, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33494,Performance,optimiz,optimized,33494,"3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33516,Performance,optimiz,optimized,33516,"3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33539,Performance,optimiz,optimized,33539,"3.10.14/Python/ceval.c:3695; #141 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x55ff95dcd100, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33737,Performance,optimiz,optimized,33737,"val.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33762,Performance,optimiz,optimized,33762,"val.h:46; #142 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112886e0, locals=locals@entry=0x7fac0e0f83c0, args=args@entry=0x0, argcount=argcount@entry=0, ; --Type <RET> for more, q to quit, c to continue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:33991,Performance,optimiz,optimized,33991,"ontinue without paging--; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #143 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8882550, globals=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34107,Performance,optimiz,optimized,34107,"ls=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34152,Performance,optimiz,optimized,34152,"ls=globals@entry=0x7fac0e0f83c0, locals=locals@entry=0x7fac0e0f83c0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #144 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e0f83c0, globals=0x7fac0e0f83c0, source=0x7fabd8882550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #145 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34433,Performance,optimiz,optimized,34433,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34459,Performance,optimiz,optimized,34459,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34481,Performance,optimiz,optimized,34481,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #146 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34670,Performance,optimiz,optimized,34670,"(func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34694,Performance,optimiz,optimized,34694,"(func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34719,Performance,optimiz,optimized,34719,"(func=0x7fac0e398e00, args=0x7fac0e0d4c58, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #147 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:34870,Performance,optimiz,optimized,34870,"wdict=0x7fabd8938500, callargs=0x7fac0e0d4c40, func=0x7fac0e398e00, trace_info=0x7fff112888b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #148 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35074,Performance,optimiz,optimized,35074,"ult (tstate=<optimized out>, f=0x55ff95e324c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #149 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35247,Performance,optimiz,optimized,35247,"0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35328,Performance,optimiz,optimized,35328,"0x55ff95e324c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #150 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35444,Performance,optimiz,optimized,35444,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35489,Performance,optimiz,optimized,35489,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #151 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #152 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35770,Performance,optimiz,optimized,35770,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35796,Performance,optimiz,optimized,35796,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:35818,Performance,optimiz,optimized,35818,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36007,Performance,optimiz,optimized,36007,"14; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36031,Performance,optimiz,optimized,36031,"14; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36056,Performance,optimiz,optimized,36056,"14; #153 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c4aa08, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #154 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36207,Performance,optimiz,optimized,36207," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288a60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #155 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36411,Performance,optimiz,optimized,36411,"ult (tstate=<optimized out>, f=0x7fabd8c4a880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #156 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36584,Performance,optimiz,optimized,36584,"0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36665,Performance,optimiz,optimized,36665,"0x7fabd8c4a880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #157 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36781,Performance,optimiz,optimized,36781,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:36826,Performance,optimiz,optimized,36826,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #158 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #159 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37107,Performance,optimiz,optimized,37107,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37133,Performance,optimiz,optimized,37133,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37155,Performance,optimiz,optimized,37155,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37344,Performance,optimiz,optimized,37344,"14; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37368,Performance,optimiz,optimized,37368,"14; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37393,Performance,optimiz,optimized,37393,"14; #160 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6f800, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #161 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37544,Performance,optimiz,optimized,37544," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288c10, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #162 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37748,Performance,optimiz,optimized,37748,"ult (tstate=<optimized out>, f=0x7fabd8f6f680, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #163 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6f680, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:37921,Performance,optimiz,optimized,37921,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38002,Performance,optimiz,optimized,38002,"e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #164 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38184,Performance,optimiz,optimized,38184,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38229,Performance,optimiz,optimized,38229,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #165 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #166 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38510,Performance,optimiz,optimized,38510,"fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38536,Performance,optimiz,optimized,38536,"fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38558,Performance,optimiz,optimized,38558,"fabd891abf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #167 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38747,Performance,optimiz,optimized,38747," args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38771,Performance,optimiz,optimized,38771," args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38796,Performance,optimiz,optimized,38796," args=0x7fabd891abf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #168 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:38947,Performance,optimiz,optimized,38947,", trace_info=0x7fff11288dc0, tstate=<optimized out>); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #169 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39151,Performance,optimiz,optimized,39151,"ult (tstate=<optimized out>, f=0x7fabd891aa40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #170 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39324,Performance,optimiz,optimized,39324,"0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39405,Performance,optimiz,optimized,39405,"0x7fabd891aa40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #171 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39521,Performance,optimiz,optimized,39521,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39566,Performance,optimiz,optimized,39566,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #172 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #173 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39847,Performance,optimiz,optimized,39847,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39873,Performance,optimiz,optimized,39873,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:39895,Performance,optimiz,optimized,39895,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:40084,Performance,optimiz,optimized,40084,"14; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:40108,Performance,optimiz,optimized,40108,"14; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:40133,Performance,optimiz,optimized,40133,"14; #174 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd891a3d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #175 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11288f70, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #176 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd891a240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #177 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd891a240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #178 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #179 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:41030,Performance,optimiz,optimized,41030,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8e6e320, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #185 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd8e6e320, name=0x7fabd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:41054,Performance,optimiz,optimized,41054,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #180 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8e6e320, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #185 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd8e6e320, name=0x7fabd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:41315,Performance,optimiz,optimized,41315,"s=0x0, nargsf=2, args=0x7fff112890a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #181 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8e6e320, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #185 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd8e6e320, name=0x7fabd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, local",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:41431,Performance,optimiz,optimized,41431,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8e6e320, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #185 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd8e6e320, name=0x7fabd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:41476,Performance,optimiz,optimized,41476,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289130) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #182 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #183 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928940, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #184 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8903a70, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabd8e6e320, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #185 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabd8e6e320, name=0x7fabd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42248,Performance,optimiz,optimized,42248,"abd8903a70, f=0x7fabdcdb7a00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #186 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabdcdb7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (thr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42428,Performance,optimiz,optimized,42428,"db7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42450,Performance,optimiz,optimized,42450,"db7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42473,Performance,optimiz,optimized,42473,"db7a00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #187 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fabdcdb7a00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42671,Performance,optimiz,optimized,42671," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42696,Performance,optimiz,optimized,42696," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #188 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff112894b0, locals=locals@entry=0x7fabd8903bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:42925,Performance,optimiz,optimized,42925,"count=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #189 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a87940, globals=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43041,Performance,optimiz,optimized,43041,"ls=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43086,Performance,optimiz,optimized,43086,"ls=globals@entry=0x7fabd8903bc0, locals=locals@entry=0x7fabd8903bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #190 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabd8903bc0, globals=0x7fabd8903bc0, source=0x7fabd8a87940); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #191 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43433,Performance,optimiz,optimized,43433," /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43459,Performance,optimiz,optimized,43459," /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43481,Performance,optimiz,optimized,43481," /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #192 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fabd8a8a4d8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43670,Performance,optimiz,optimized,43670," kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43694,Performance,optimiz,optimized,43694," kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43719,Performance,optimiz,optimized,43719," kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #193 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8903b00, callargs=0x7fabd8a8a4c0, func=0x7fac0e398e00, trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:43870,Performance,optimiz,optimized,43870,", trace_info=0x7fff11289680, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #194 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95d41d50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44074,Performance,optimiz,optimized,44074,"d out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; --Type <RET> for more, q to quit, c to continue without paging--; #195 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44247,Performance,optimiz,optimized,44247,"0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44328,Performance,optimiz,optimized,44328,"0x55ff95d41d50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #196 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44444,Performance,optimiz,optimized,44444,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44489,Performance,optimiz,optimized,44489,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #197 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #198 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44770,Performance,optimiz,optimized,44770,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44796,Performance,optimiz,optimized,44796,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:44818,Performance,optimiz,optimized,44818,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45007,Performance,optimiz,optimized,45007,"14; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45031,Performance,optimiz,optimized,45031,"14; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45056,Performance,optimiz,optimized,45056,"14; #199 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c37558, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #200 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45207,Performance,optimiz,optimized,45207," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289830, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #201 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45411,Performance,optimiz,optimized,45411,"ult (tstate=<optimized out>, f=0x55ff95c373d0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #202 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45584,Performance,optimiz,optimized,45584,"0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45665,Performance,optimiz,optimized,45665,"0x55ff95c373d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #203 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45781,Performance,optimiz,optimized,45781,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:45826,Performance,optimiz,optimized,45826,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #204 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #205 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46107,Performance,optimiz,optimized,46107,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46133,Performance,optimiz,optimized,46133,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46155,Performance,optimiz,optimized,46155,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46344,Performance,optimiz,optimized,46344,"14; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46368,Performance,optimiz,optimized,46368,"14; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46393,Performance,optimiz,optimized,46393,"14; #206 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8f6cf50, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #207 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46544,Performance,optimiz,optimized,46544," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff112899e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #208 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46748,Performance,optimiz,optimized,46748,"ult (tstate=<optimized out>, f=0x7fabd8f6cdd0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #209 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:46921,Performance,optimiz,optimized,46921,"0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47002,Performance,optimiz,optimized,47002,"0x7fabd8f6cdd0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #210 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47118,Performance,optimiz,optimized,47118,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47163,Performance,optimiz,optimized,47163,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #211 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #212 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47444,Performance,optimiz,optimized,47444,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47470,Performance,optimiz,optimized,47470,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47492,Performance,optimiz,optimized,47492,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47681,Performance,optimiz,optimized,47681,"14; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47705,Performance,optimiz,optimized,47705,"14; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47730,Performance,optimiz,optimized,47730,"14; #213 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8918bf0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #214 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:47881,Performance,optimiz,optimized,47881," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289b90, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #215 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48085,Performance,optimiz,optimized,48085,"ult (tstate=<optimized out>, f=0x7fabd8918a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #216 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48258,Performance,optimiz,optimized,48258,"0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48339,Performance,optimiz,optimized,48339,"0x7fabd8918a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #217 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48521,Performance,optimiz,optimized,48521,"als=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48566,Performance,optimiz,optimized,48566,"als=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #218 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #219 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48847,Performance,optimiz,optimized,48847,"fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48873,Performance,optimiz,optimized,48873,"fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:48895,Performance,optimiz,optimized,48895,"fabe42887a0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #220 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:49084,Performance,optimiz,optimized,49084," args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:49108,Performance,optimiz,optimized,49108," args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:49133,Performance,optimiz,optimized,49133," args=0x7fabe42887a0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #221 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff11289d40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #222 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4288610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #223 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4288610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #224 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #225 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50019,Performance,optimiz,optimized,50019,"25 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50043,Performance,optimiz,optimized,50043,"25 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #226 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50197,Performance,optimiz,optimized,50197,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50219,Performance,optimiz,optimized,50219,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50241,Performance,optimiz,optimized,50241,"0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff11289e70, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50392,Performance,optimiz,optimized,50392,"0.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50416,Performance,optimiz,optimized,50416,"0.14/Include/cpython/abstract.h:114; #227 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff11289f00) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50550,Performance,optimiz,optimized,50550,"n-3.10.14/Objects/call.c:734; #228 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50769,Performance,optimiz,optimized,50769,"nda/python-3.10.14/Objects/call.c:824; #229 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd8928710, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:50989,Performance,optimiz,optimized,50989,"ort.c:1522; #230 PyImport_ImportModuleLevelObject (name=0x7fabd8928710, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51105,Performance,optimiz,optimized,51105,"/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51150,Performance,optimiz,optimized,51150,"/import.c:1623; #231 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #232 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51431,Performance,optimiz,optimized,51431,"ct.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51457,Performance,optimiz,optimized,51457,"ct.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51479,Performance,optimiz,optimized,51479,"ct.c:543; #233 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fabd8e6c550, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51668,Performance,optimiz,optimized,51668,"all.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51692,Performance,optimiz,optimized,51692,"all.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51717,Performance,optimiz,optimized,51717,"all.c:305; #234 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fabd8e6c550, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #235 0x000055ff90677205 in do_call_core (kwdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:51868,Performance,optimiz,optimized,51868,"wdict=0x7fabd89038c0, callargs=0x7fabd8e6c550, func=0x7fac0e3989a0, trace_info=0x7fff1128a240, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #236 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52072,Performance,optimiz,optimized,52072,"ult (tstate=<optimized out>, f=0x7fabe4b81240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #237 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52245,Performance,optimiz,optimized,52245,"0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52326,Performance,optimiz,optimized,52326,"0x7fabe4b81240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #238 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52442,Performance,optimiz,optimized,52442,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52487,Performance,optimiz,optimized,52487,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #239 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #240 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52768,Performance,optimiz,optimized,52768,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52794,Performance,optimiz,optimized,52794,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:52816,Performance,optimiz,optimized,52816,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53005,Performance,optimiz,optimized,53005,"14; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53029,Performance,optimiz,optimized,53029,"14; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53054,Performance,optimiz,optimized,53054,"14; #241 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2ca3f0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #242 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53205,Performance,optimiz,optimized,53205," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a3f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #243 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53409,Performance,optimiz,optimized,53409,"ult (tstate=<optimized out>, f=0x7fac0e2ca240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #244 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53582,Performance,optimiz,optimized,53582,"0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53663,Performance,optimiz,optimized,53663,"0x7fac0e2ca240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #245 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53845,Performance,optimiz,optimized,53845,"als=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:53890,Performance,optimiz,optimized,53890,"als=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #246 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #247 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54171,Performance,optimiz,optimized,54171,"fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54197,Performance,optimiz,optimized,54197,"fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54219,Performance,optimiz,optimized,54219,"fabe4df3a10, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #248 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54408,Performance,optimiz,optimized,54408," args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54432,Performance,optimiz,optimized,54432," args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:54457,Performance,optimiz,optimized,54457," args=0x7fabe4df3a10, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #249 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128a5a0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; --Type <RET> for more, q to quit, c to continue without paging--; #250 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4df3880, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #251 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4df3880, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #252 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #253 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:55354,Performance,optimiz,optimized,55354,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe4291420, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #259 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabe4291420, name=0x7fabd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:55378,Performance,optimiz,optimized,55378,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #254 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe4291420, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #259 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabe4291420, name=0x7fabd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:55639,Performance,optimiz,optimized,55639,"s=0x0, nargsf=2, args=0x7fff1128a6d0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #255 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe4291420, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #259 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabe4291420, name=0x7fabd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, local",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:55755,Performance,optimiz,optimized,55755,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe4291420, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #259 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabe4291420, name=0x7fabd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:55800,Performance,optimiz,optimized,55800,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128a760) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #256 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #257 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fabd89285d0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #258 PyImport_ImportModuleLevelObject (name=name@entry=0x7fabd8928580, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fabe4291420, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #259 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fabe4291420, name=0x7fabd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:56572,Performance,optimiz,optimized,56572,"abd8928580, f=0x7fac0e074610, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #260 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:56752,Performance,optimiz,optimized,56752,"074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:56774,Performance,optimiz,optimized,56774,"074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:56797,Performance,optimiz,optimized,56797,"074610, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #261 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074610, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:56995,Performance,optimiz,optimized,56995," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57020,Performance,optimiz,optimized,57020," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #262 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128aae0, locals=locals@entry=0x7fabdcd7a300, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57249,Performance,optimiz,optimized,57249,"count=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #263 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fabd8a86550, globals=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57365,Performance,optimiz,optimized,57365,"ls=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57410,Performance,optimiz,optimized,57410,"ls=globals@entry=0x7fabdcd7a300, locals=locals@entry=0x7fabdcd7a300); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #264 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fabdcd7a300, globals=0x7fabdcd7a300, source=0x7fabd8a86550); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #265 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57691,Performance,optimiz,optimized,57691,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57717,Performance,optimiz,optimized,57717,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57739,Performance,optimiz,optimized,57739,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #266 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57928,Performance,optimiz,optimized,57928,"(func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57952,Performance,optimiz,optimized,57952,"(func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:57977,Performance,optimiz,optimized,57977,"(func=0x7fac0e398e00, args=0x7fac0e0e6fd8, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #267 0x000055ff90677205 in do_call_core (kwdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58128,Performance,optimiz,optimized,58128,"wdict=0x7fabd8902480, callargs=0x7fac0e0e6fc0, func=0x7fac0e398e00, trace_info=0x7fff1128acb0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #268 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58332,Performance,optimiz,optimized,58332,"ult (tstate=<optimized out>, f=0x7fabd8fa8550, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #269 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58505,Performance,optimiz,optimized,58505,"0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58586,Performance,optimiz,optimized,58586,"0x7fabd8fa8550, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #270 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58702,Performance,optimiz,optimized,58702,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:58747,Performance,optimiz,optimized,58747,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #271 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #272 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59094,Performance,optimiz,optimized,59094," nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59120,Performance,optimiz,optimized,59120," nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59142,Performance,optimiz,optimized,59142," nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #273 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59331,Performance,optimiz,optimized,59331," args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59355,Performance,optimiz,optimized,59355," args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59380,Performance,optimiz,optimized,59380," args=0x7fabd8c48548, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #274 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59531,Performance,optimiz,optimized,59531,", trace_info=0x7fff1128ae60, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #275 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c483c0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59735,Performance,optimiz,optimized,59735,"d out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #276 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c483c0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59908,Performance,optimiz,optimized,59908,"hon-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:59989,Performance,optimiz,optimized,59989,"hon-3.10.14/Include/internal/pycore_ceval.h:46; --Type <RET> for more, q to quit, c to continue without paging--; #277 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60105,Performance,optimiz,optimized,60105,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60150,Performance,optimiz,optimized,60150,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #278 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #279 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60431,Performance,optimiz,optimized,60431,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60457,Performance,optimiz,optimized,60457,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60479,Performance,optimiz,optimized,60479,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60668,Performance,optimiz,optimized,60668,"14; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60692,Performance,optimiz,optimized,60692,"14; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60717,Performance,optimiz,optimized,60717,"14; #280 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabe4289ce0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #281 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:60868,Performance,optimiz,optimized,60868," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b010, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #282 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61072,Performance,optimiz,optimized,61072,"ult (tstate=<optimized out>, f=0x7fabe4289b60, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #283 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61245,Performance,optimiz,optimized,61245,"0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61326,Performance,optimiz,optimized,61326,"0x7fabe4289b60, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #284 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61442,Performance,optimiz,optimized,61442,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61487,Performance,optimiz,optimized,61487,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #285 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #286 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61768,Performance,optimiz,optimized,61768,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61794,Performance,optimiz,optimized,61794,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:61816,Performance,optimiz,optimized,61816,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62005,Performance,optimiz,optimized,62005,"14; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62029,Performance,optimiz,optimized,62029,"14; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62054,Performance,optimiz,optimized,62054,"14; #287 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2aff0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #288 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62205,Performance,optimiz,optimized,62205," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b1c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #289 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62409,Performance,optimiz,optimized,62409,"ult (tstate=<optimized out>, f=0x7fabd8c2ae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #290 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62582,Performance,optimiz,optimized,62582,"0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62663,Performance,optimiz,optimized,62663,"0x7fabd8c2ae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #291 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62779,Performance,optimiz,optimized,62779,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:62824,Performance,optimiz,optimized,62824,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #292 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #293 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63105,Performance,optimiz,optimized,63105,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63131,Performance,optimiz,optimized,63131,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63153,Performance,optimiz,optimized,63153,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63342,Performance,optimiz,optimized,63342,"14; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63366,Performance,optimiz,optimized,63366,"14; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:63391,Performance,optimiz,optimized,63391,"14; #294 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fabd8c2b1d0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #295 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128b370, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #296 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fabd8c2b040, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #297 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fabd8c2b040, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #298 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #299 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64277,Performance,optimiz,optimized,64277,"x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimiz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64301,Performance,optimiz,optimized,64301,"x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #300 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimiz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64521,Performance,optimiz,optimized,64521,"gsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64543,Performance,optimiz,optimized,64543,"gsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64565,Performance,optimiz,optimized,64565,"gsf=2, args=0x7fff1128b4a0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #301 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64716,Performance,optimiz,optimized,64716,"tate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64740,Performance,optimiz,optimized,64740,"tate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128b530) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #302 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:64874,Performance,optimiz,optimized,64874,"_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #303 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65093,Performance,optimiz,optimized,65093,"import_find_and_load (abs_name=0x7fac0e0fe470, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #304 PyImport_ImportModuleLevelObject (name=0x7fac0e0fe470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65313,Performance,optimiz,optimized,65313,"e470, globals=<optimized out>, locals=<optimized out>, fromlist=0x0, level=0); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65429,Performance,optimiz,optimized,65429,"/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65474,Performance,optimiz,optimized,65474,"/import.c:1623; #305 0x000055ff9069aca8 in builtin___import__ (self=<optimized out>, args=<optimized out>, kwds=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:272; #306 0x000055ff906815a6 in cfunction_call (func=0x7fac0e3989a0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65755,Performance,optimiz,optimized,65755,"ct.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65781,Performance,optimiz,optimized,65781,"ct.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65803,Performance,optimiz,optimized,65803,"ct.c:543; #307 0x000055ff9068e067 in _PyObject_Call (kwargs=<optimized out>, args=0x7fac0e0f68c0, callable=0x7fac0e3989a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Objects/call.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:65992,Performance,optimiz,optimized,65992,"all.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66016,Performance,optimiz,optimized,66016,"all.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66041,Performance,optimiz,optimized,66041,"all.c:305; #308 PyObject_Call (callable=0x7fac0e3989a0, args=0x7fac0e0f68c0, kwargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:317; #309 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66192,Performance,optimiz,optimized,66192,"wdict=0x7fac0e0ae880, callargs=0x7fac0e0f68c0, func=0x7fac0e3989a0, trace_info=0x7fff1128b870, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #310 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66396,Performance,optimiz,optimized,66396,"ult (tstate=<optimized out>, f=0x7fac0e32fc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #311 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66569,Performance,optimiz,optimized,66569,"0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66650,Performance,optimiz,optimized,66650,"0x7fac0e32fc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #312 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66766,Performance,optimiz,optimized,66766,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:66811,Performance,optimiz,optimized,66811,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #313 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #314 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67092,Performance,optimiz,optimized,67092,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67118,Performance,optimiz,optimized,67118,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67140,Performance,optimiz,optimized,67140,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67329,Performance,optimiz,optimized,67329,"14; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67353,Performance,optimiz,optimized,67353,"14; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:67378,Performance,optimiz,optimized,67378,"14; #315 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x55ff95c6dcc0, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #316 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128ba20, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #317 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x55ff95c6db10, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #318 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x55ff95c6db10, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #319 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:68142,Performance,optimiz,optimized,68142," out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e1aede0, name=0x7fac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:68166,Performance,optimiz,optimized,68166," out>, locals=0x0, con=0x7fac0e3634a0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #320 _PyFunction_Vectorcall (func=0x7fac0e363490, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e1aede0, name=0x7fac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:68428,Performance,optimiz,optimized,68428,"mized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #321 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=3, args=0x7fff1128bb50, callable=0x7fac0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e1aede0, name=0x7fac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, local",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:68544,Performance,optimiz,optimized,68544,"0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e1aede0, name=0x7fac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue withou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:68589,Performance,optimiz,optimized,68589,"0e363490, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #322 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363490, vargs=0x7fff1128bbe0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #323 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9a80 <PyId__handle_fromlist.13>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #324 0x000055ff905b230b in PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e308030, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e1aede0, ; level=1) at /usr/local/src/conda/python-3.10.14/Python/import.c:1694; #325 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e1aede0, name=0x7fac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue withou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69361,Performance,optimiz,optimized,69361,"ac0e308030, f=0x7fac0e1fccc0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #326 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1fccc0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (thr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69607,Performance,optimiz,optimized,69607,") at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69629,Performance,optimiz,optimized,69629,") at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69652,Performance,optimiz,optimized,69652,") at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #327 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1fccc0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69850,Performance,optimiz,optimized,69850,"val.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:69875,Performance,optimiz,optimized,69875,"val.h:46; #328 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128bf60, locals=locals@entry=0x7fac0e072700, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70104,Performance,optimiz,optimized,70104,"/src/conda/python-3.10.14/Python/ceval.c:5067; #329 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e1b7050, globals=globals@entry=0x7fac0e072700, locals=locals@entry=0x7fac0e072700); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70220,Performance,optimiz,optimized,70220,"0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70265,Performance,optimiz,optimized,70265,"0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #330 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e072700, globals=0x7fac0e072700, source=0x7fac0e1b7050); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; --Type <RET> for more, q to quit, c to continue without paging--; #331 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70546,Performance,optimiz,optimized,70546,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70572,Performance,optimiz,optimized,70572,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70594,Performance,optimiz,optimized,70594,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #332 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70783,Performance,optimiz,optimized,70783,"(func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70807,Performance,optimiz,optimized,70807,"(func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70832,Performance,optimiz,optimized,70832,"(func=0x7fac0e398e00, args=0x7fac0e1a1898, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #333 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:70983,Performance,optimiz,optimized,70983,"wdict=0x7fac0e0728c0, callargs=0x7fac0e1a1880, func=0x7fac0e398e00, trace_info=0x7fff1128c130, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #334 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71187,Performance,optimiz,optimized,71187,"ult (tstate=<optimized out>, f=0x7fac0e16bb50, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #335 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71360,Performance,optimiz,optimized,71360,"0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71441,Performance,optimiz,optimized,71441,"0x7fac0e16bb50, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #336 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71557,Performance,optimiz,optimized,71557,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71602,Performance,optimiz,optimized,71602,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #337 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #338 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71883,Performance,optimiz,optimized,71883,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71909,Performance,optimiz,optimized,71909,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:71931,Performance,optimiz,optimized,71931,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72120,Performance,optimiz,optimized,72120,"14; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72144,Performance,optimiz,optimized,72144,"14; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72169,Performance,optimiz,optimized,72169,"14; #339 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3c5188, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #340 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72320,Performance,optimiz,optimized,72320," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c2e0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #341 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72524,Performance,optimiz,optimized,72524,"ult (tstate=<optimized out>, f=0x7fac0e3c5000, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #342 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72697,Performance,optimiz,optimized,72697,"0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72778,Performance,optimiz,optimized,72778,"0x7fac0e3c5000, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #343 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72894,Performance,optimiz,optimized,72894,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:72939,Performance,optimiz,optimized,72939,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #344 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #345 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73220,Performance,optimiz,optimized,73220,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73246,Performance,optimiz,optimized,73246,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73268,Performance,optimiz,optimized,73268,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73457,Performance,optimiz,optimized,73457,"14; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73481,Performance,optimiz,optimized,73481,"14; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73506,Performance,optimiz,optimized,73506,"14; #346 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e0745a0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #347 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73657,Performance,optimiz,optimized,73657," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c490, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #348 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:73861,Performance,optimiz,optimized,73861,"ult (tstate=<optimized out>, f=0x7fac0e074420, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #349 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74034,Performance,optimiz,optimized,74034,"0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74115,Performance,optimiz,optimized,74115,"0x7fac0e074420, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #350 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74231,Performance,optimiz,optimized,74231,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74276,Performance,optimiz,optimized,74276,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #351 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #352 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74557,Performance,optimiz,optimized,74557,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74583,Performance,optimiz,optimized,74583,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74605,Performance,optimiz,optimized,74605,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #353 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74860,Performance,optimiz,optimized,74860,"ames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74884,Performance,optimiz,optimized,74884,"ames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:74909,Performance,optimiz,optimized,74909,"ames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb9f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #354 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75060,Performance,optimiz,optimized,75060,", trace_info=0x7fff1128c640, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #355 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb840, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75264,Performance,optimiz,optimized,75264,"d out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #356 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb840, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75437,Performance,optimiz,optimized,75437,"hon-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75518,Performance,optimiz,optimized,75518,"hon-3.10.14/Include/internal/pycore_ceval.h:46; #357 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75634,Performance,optimiz,optimized,75634,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75679,Performance,optimiz,optimized,75679,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; --Type <RET> for more, q to quit, c to continue without paging--; #358 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #359 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75960,Performance,optimiz,optimized,75960,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:75986,Performance,optimiz,optimized,75986,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:76008,Performance,optimiz,optimized,76008,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:76197,Performance,optimiz,optimized,76197,"14; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:76221,Performance,optimiz,optimized,76221,"14; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:76246,Performance,optimiz,optimized,76246,"14; #360 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e1d1a30, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #361 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128c7f0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #362 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e1d18a0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #363 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e1d18a0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #364 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #365 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:77143,Performance,optimiz,optimized,77143,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e104d90, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #371 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e104d90, name=0x7fac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:77167,Performance,optimiz,optimized,77167,"torcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #366 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e104d90, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #371 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e104d90, name=0x7fac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:77428,Performance,optimiz,optimized,77428,"s=0x0, nargsf=2, args=0x7fff1128c920, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #367 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e104d90, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #371 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e104d90, name=0x7fac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, local",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:77544,Performance,optimiz,optimized,77544,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e104d90, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #371 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e104d90, name=0x7fac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:77589,Performance,optimiz,optimized,77589,"tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128c9b0) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #368 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #369 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e079f30, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #370 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e136530, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x7fac0e104d90, level=1); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #371 0x000055ff9067536b in import_name (level=0x7fac0e3000f0, fromlist=0x7fac0e104d90, name=0x7fac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78361,Performance,optimiz,optimized,78361,"ac0e136530, f=0x7fac0e16ec00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #372 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78541,Performance,optimiz,optimized,78541,"16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78563,Performance,optimiz,optimized,78563,"16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78586,Performance,optimiz,optimized,78586,"16ec00, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #373 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16ec00, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78784,Performance,optimiz,optimized,78784," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:78809,Performance,optimiz,optimized,78809," at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #374 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128cd30, locals=locals@entry=0x7fac0e071580, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79038,Performance,optimiz,optimized,79038,"count=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #375 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e06f7e0, globals=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79154,Performance,optimiz,optimized,79154,"ls=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79199,Performance,optimiz,optimized,79199,"ls=globals@entry=0x7fac0e071580, locals=locals@entry=0x7fac0e071580); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #376 0x000055ff9071bdaa in builtin_exec_impl (module=<optimized out>, locals=0x7fac0e071580, globals=0x7fac0e071580, source=0x7fac0e06f7e0); at /usr/local/src/conda/python-3.10.14/Python/bltinmodule.c:1058; #377 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79480,Performance,optimiz,optimized,79480,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79506,Performance,optimiz,optimized,79506,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79528,Performance,optimiz,optimized,79528,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/clinic/bltinmodule.c.h:371; #378 0x000055ff90681bf3 in cfunction_vectorcall_FASTCALL (func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFram",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79717,Performance,optimiz,optimized,79717,"(func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79741,Performance,optimiz,optimized,79741,"(func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79766,Performance,optimiz,optimized,79766,"(func=0x7fac0e398e00, args=0x7fac0e041e18, nargsf=<optimized out>, kwnames=<optimized out>); at /usr/local/src/conda/python-3.10.14/Objects/methodobject.c:430; #379 0x000055ff90677205 in do_call_core (kwdict=0x7fac0e071540, callargs=0x7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:79917,Performance,optimiz,optimized,79917,"7fac0e041e00, func=0x7fac0e398e00, trace_info=0x7fff1128cf00, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5917; #380 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16a3b0, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80187,Performance,optimiz,optimized,80187,"d out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4277; #381 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16a3b0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80360,Performance,optimiz,optimized,80360,"hon-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80441,Performance,optimiz,optimized,80441,"hon-3.10.14/Include/internal/pycore_ceval.h:46; #382 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e361520, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80557,Performance,optimiz,optimized,80557,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80602,Performance,optimiz,optimized,80602,"te=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #383 _PyFunction_Vectorcall (func=0x7fac0e361510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #384 0x000055ff90676142 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80883,Performance,optimiz,optimized,80883,"fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80909,Performance,optimiz,optimized,80909,"fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:80931,Performance,optimiz,optimized,80931,"fac0e16ddc8, callable=0x7fac0e361510, tstate=0x55ff9515e050); --Type <RET> for more, q to quit, c to continue without paging--; at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81120,Performance,optimiz,optimized,81120,"14; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81144,Performance,optimiz,optimized,81144,"14; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81169,Performance,optimiz,optimized,81169,"14; #385 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e16ddc8, callable=0x7fac0e361510) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #386 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81320,Performance,optimiz,optimized,81320," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d0b0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #387 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81524,Performance,optimiz,optimized,81524,"ult (tstate=<optimized out>, f=0x7fac0e16dc40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4181; #388 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81697,Performance,optimiz,optimized,81697,"0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81778,Performance,optimiz,optimized,81778,"0x7fac0e16dc40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #389 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81894,Performance,optimiz,optimized,81894,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:81939,Performance,optimiz,optimized,81939,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3e5640, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #390 _PyFunction_Vectorcall (func=0x7fac0e3e5630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #391 0x000055ff90671c5c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e362",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82220,Performance,optimiz,optimized,82220,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82246,Performance,optimiz,optimized,82246,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82268,Performance,optimiz,optimized,82268,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82457,Performance,optimiz,optimized,82457,"14; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82481,Performance,optimiz,optimized,82481,"14; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82506,Performance,optimiz,optimized,82506,"14; #392 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e3bf9f0, callable=0x7fac0e3e5630) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #393 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82657,Performance,optimiz,optimized,82657," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d260, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #394 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:82861,Performance,optimiz,optimized,82861,"ult (tstate=<optimized out>, f=0x7fac0e3bf870, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4198; #395 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83034,Performance,optimiz,optimized,83034,"0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83115,Performance,optimiz,optimized,83115,"0x7fac0e3bf870, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #396 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e05",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83231,Performance,optimiz,optimized,83231,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83276,Performance,optimiz,optimized,83276,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3620f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #397 _PyFunction_Vectorcall (func=0x7fac0e3620e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #398 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e363",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83557,Performance,optimiz,optimized,83557,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83583,Performance,optimiz,optimized,83583,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83605,Performance,optimiz,optimized,83605,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<opt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83794,Performance,optimiz,optimized,83794,"14; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83818,Performance,optimiz,optimized,83818,"14; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83843,Performance,optimiz,optimized,83843,"14; #399 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cb3f0, callable=0x7fac0e3620e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #400 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/cond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:83994,Performance,optimiz,optimized,83994," (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d410, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #401 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84198,Performance,optimiz,optimized,84198,"ult (tstate=<optimized out>, f=0x7fac0e2cb240, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #402 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84371,Performance,optimiz,optimized,84371,"0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84452,Performance,optimiz,optimized,84452,"0x7fac0e2cb240, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #403 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff112",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84568,Performance,optimiz,optimized,84568,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84613,Performance,optimiz,optimized,84613,"d out>, args=<optimized out>, locals=0x0, con=0x7fac0e3632f0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #404 _PyFunction_Vectorcall (func=0x7fac0e3632e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; #405 0x000055ff90671850 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84894,Performance,optimiz,optimized,84894,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84920,Performance,optimiz,optimized,84920,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:84942,Performance,optimiz,optimized,84942,"ct_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:85131,Performance,optimiz,optimized,85131,"14; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:85155,Performance,optimiz,optimized,85155,"14; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:85180,Performance,optimiz,optimized,85180,"14; #406 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fac0e2cafd0, callable=0x7fac0e3632e0) at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:123; #407 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff1128d5c0, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5893; #408 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e2cae40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:4213; #409 0x000055ff90681a2c in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e2cae40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #410 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7fac0e363380, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #411 _PyFunction_Vectorcall (func=0x7fac0e363370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optim",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:86143,Performance,optimiz,optimized,86143,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x55ff908c17e0 <_Py_NoneStruct>, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #417 0x000055ff9067536b in import_name (level=0x7fac0e3000d0, fromlist=0x55ff908c17e0 <_Py_NoneStruct>, name=0x7fac0e1341f0, f=0x7fac0e329a40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #418 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e329a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #419 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e329a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #420 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128db00, locals=locals@entry=0x7fac0e241bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #421 0x000055ff90714ba7 in PyEval_E",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:86167,Performance,optimiz,optimized,86167,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:342; --Type <RET> for more, q to quit, c to continue without paging--; #412 0x000055ff90681208 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x55ff908c17e0 <_Py_NoneStruct>, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #417 0x000055ff9067536b in import_name (level=0x7fac0e3000d0, fromlist=0x55ff908c17e0 <_Py_NoneStruct>, name=0x7fac0e1341f0, f=0x7fac0e329a40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #418 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e329a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #419 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e329a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #420 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128db00, locals=locals@entry=0x7fac0e241bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #421 0x000055ff90714ba7 in PyEval_E",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:86462,Performance,optimiz,optimized,86462,"fff1128d6f0, callable=0x7fac0e363370, tstate=0x55ff9515e050); at /usr/local/src/conda/python-3.10.14/Include/cpython/abstract.h:114; #413 object_vacall (tstate=tstate@entry=0x55ff9515e050, base=base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x55ff908c17e0 <_Py_NoneStruct>, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #417 0x000055ff9067536b in import_name (level=0x7fac0e3000d0, fromlist=0x55ff908c17e0 <_Py_NoneStruct>, name=0x7fac0e1341f0, f=0x7fac0e329a40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #418 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e329a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #419 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e329a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #420 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128db00, locals=locals@entry=0x7fac0e241bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #421 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e2b80e0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #422 0x000055ff9074512a in run_eval_code_obj (tstate=tstate@entry=0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:86578,Performance,optimiz,optimized,86578,"base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x55ff908c17e0 <_Py_NoneStruct>, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #417 0x000055ff9067536b in import_name (level=0x7fac0e3000d0, fromlist=0x55ff908c17e0 <_Py_NoneStruct>, name=0x7fac0e1341f0, f=0x7fac0e329a40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #418 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e329a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #419 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e329a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #420 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128db00, locals=locals@entry=0x7fac0e241bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #421 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e2b80e0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #422 0x000055ff9074512a in run_eval_code_obj (tstate=tstate@entry=0x55ff9515e050, co=co@entry=0x7fac0e2b80e0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1291; #423 0x00005",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:86623,Performance,optimiz,optimized,86623,"base@entry=0x0, callable=0x7fac0e363370, vargs=0x7fff1128d780) at /usr/local/src/conda/python-3.10.14/Objects/call.c:734; #414 0x000055ff9068f419 in _PyObject_CallMethodIdObjArgs (obj=0x0, name=name@entry=0x55ff908b9b00 <PyId__find_and_load.6>) at /usr/local/src/conda/python-3.10.14/Objects/call.c:824; #415 0x000055ff905b2187 in import_find_and_load (abs_name=0x7fac0e1341f0, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Python/import.c:1522; #416 PyImport_ImportModuleLevelObject (name=name@entry=0x7fac0e1341f0, globals=<optimized out>, locals=<optimized out>, fromlist=fromlist@entry=0x55ff908c17e0 <_Py_NoneStruct>, level=0); at /usr/local/src/conda/python-3.10.14/Python/import.c:1623; #417 0x000055ff9067536b in import_name (level=0x7fac0e3000d0, fromlist=0x55ff908c17e0 <_Py_NoneStruct>, name=0x7fac0e1341f0, f=0x7fac0e329a40, tstate=<optimized out>); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:6018; #418 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=0x7fac0e329a40, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:3695; #419 0x000055ff90714c60 in _PyEval_EvalFrame (throwflag=0, f=0x7fac0e329a40, tstate=0x55ff9515e050) at /usr/local/src/conda/python-3.10.14/Include/internal/pycore_ceval.h:46; #420 _PyEval_Vector (tstate=tstate@entry=0x55ff9515e050, con=con@entry=0x7fff1128db00, locals=locals@entry=0x7fac0e241bc0, args=args@entry=0x0, argcount=argcount@entry=0, ; kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.10.14/Python/ceval.c:5067; #421 0x000055ff90714ba7 in PyEval_EvalCode (co=co@entry=0x7fac0e2b80e0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/ceval.c:1134; #422 0x000055ff9074512a in run_eval_code_obj (tstate=tstate@entry=0x55ff9515e050, co=co@entry=0x7fac0e2b80e0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1291; #423 0x00005",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:89168,Performance,optimiz,optimized,89168,"globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1291; #423 0x000055ff90740523 in run_mod (mod=mod@entry=0x55ff952b55d8, filename=filename@entry=0x7fac0e29b2d0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0, ; flags=flags@entry=0x7fff1128dce8, arena=arena@entry=0x7fac0e303b90) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1312; #424 0x000055ff905d76f5 in pyrun_file (fp=fp@entry=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, start=start@entry=257, globals=globals@entry=0x7fac0e241bc0, ; locals=locals@entry=0x7fac0e241bc0, closeit=closeit@entry=1, flags=0x7fff1128dce8) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208; #425 0x000055ff9073a9fe in _PyRun_SimpleFileObject (fp=0x55ff95162c40, filename=0x7fac0e29b2d0, closeit=1, flags=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456; #426 0x000055ff9073a594 in _PyRun_AnyFileObject (fp=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, closeit=closeit@entry=1, flags=flags@entry=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90; #427 0x000055ff9073778b in pymain_run_file_obj (skip_source_first_line=0, filename=0x7fac0e29b2d0, program_name=0x7fac0e299d10) at /usr/local/src/conda/python-3.10.14/Modules/main.c:357; #428 pymain_run_file (config=0x55ff95142180) at /usr/local/src/conda/python-3.10.14/Modules/main.c:376; #429 pymain_run_python (exitcode=0x7fff1128dce4) at /usr/local/src/conda/python-3.10.14/Modules/main.c:591; #430 Py_RunMain () at /usr/local/src/conda/python-3.10.14/Modules/main.c:670; #431 0x000055ff907081f7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.14/Modules/main.c:1090; #432 0x00007fac1bfc1088 in __libc_start_call_main () from /lib64/libc.so.6; #433 0x00007fac1bfc114b in __libc_start_main_impl () from /lib64/libc.so.6; #434 0x000055ff907080f1 in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430:89190,Performance,optimiz,optimized,89190,"globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1291; #423 0x000055ff90740523 in run_mod (mod=mod@entry=0x55ff952b55d8, filename=filename@entry=0x7fac0e29b2d0, globals=globals@entry=0x7fac0e241bc0, locals=locals@entry=0x7fac0e241bc0, ; flags=flags@entry=0x7fff1128dce8, arena=arena@entry=0x7fac0e303b90) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1312; #424 0x000055ff905d76f5 in pyrun_file (fp=fp@entry=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, start=start@entry=257, globals=globals@entry=0x7fac0e241bc0, ; locals=locals@entry=0x7fac0e241bc0, closeit=closeit@entry=1, flags=0x7fff1128dce8) at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:1208; #425 0x000055ff9073a9fe in _PyRun_SimpleFileObject (fp=0x55ff95162c40, filename=0x7fac0e29b2d0, closeit=1, flags=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:456; #426 0x000055ff9073a594 in _PyRun_AnyFileObject (fp=0x55ff95162c40, filename=filename@entry=0x7fac0e29b2d0, closeit=closeit@entry=1, flags=flags@entry=0x7fff1128dce8); at /usr/local/src/conda/python-3.10.14/Python/pythonrun.c:90; #427 0x000055ff9073778b in pymain_run_file_obj (skip_source_first_line=0, filename=0x7fac0e29b2d0, program_name=0x7fac0e299d10) at /usr/local/src/conda/python-3.10.14/Modules/main.c:357; #428 pymain_run_file (config=0x55ff95142180) at /usr/local/src/conda/python-3.10.14/Modules/main.c:376; #429 pymain_run_python (exitcode=0x7fff1128dce4) at /usr/local/src/conda/python-3.10.14/Modules/main.c:591; #430 Py_RunMain () at /usr/local/src/conda/python-3.10.14/Modules/main.c:670; #431 0x000055ff907081f7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.14/Modules/main.c:1090; #432 0x00007fac1bfc1088 in __libc_start_call_main () from /lib64/libc.so.6; #433 0x00007fac1bfc114b in __libc_start_main_impl () from /lib64/libc.so.6; #434 0x000055ff907080f1 in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326038430
https://github.com/psi4/psi4/issues/3214#issuecomment-2326478048:35,Deployability,install,installation,35,The backtrace was wrong; the conda installation was corrupt and even `xc-info` failed to run. The real issue turned out to be fixed by #3194.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326478048
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:25,Availability,failure,failures,25,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:2229,Integrability,wrap,wrapper,2229,"id) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv::compute_gradient (this=0x7ffc67b35840); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/scf_grad.cc:249; #13 0x00007f21a9b3855d in psi::scfgrad::scfgrad (ref_wfn=..., options=...); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/wrapper.cc:46; #14 0x00007f21a841948d in py_psi_scfgrad (ref_wfn=...) at /home/work/psi4-1.9.1/psi4/src/core.cc:317; #15 0x00007f21a84ae799 in pybind11::detail::argument_loader<std::shared_ptr<psi::scf::HF> >::call_impl<std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), 0ul, pybind11::detail::void_type>(std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), std::integer_sequence<unsigned long, 0ul>, pybind11::detail::void_type&&) && (this=0x7ffc67b35f10, ; f=@0x56025a2cca88: 0x7f21a84193f0 <py_psi_scfgrad(std::shared_ptr<psi::scf::HF>)>); at /usr/include/pybind11/cast.h:1480; #16 0x00007f21a84a146f in pybind11::detail::argument_loader<std::shared_ptr<psi::scf::HF> >::call<std::shared_ptr<psi::Matrix>, pybind11::detail::void_type, std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>)>(std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>)) && (this=0x7ffc67b35f10, ; f=@0x56025a2cca88: 0x7f21a84193f0 <py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:9849,Modifiability,config,config,9849,"x000056022aa64bd0 in pyrun_file (fp=fp@entry=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:94,Performance,optimiz,optimized,94,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:237,Performance,optimiz,optimized,237,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:483,Performance,optimiz,optimized,483,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:505,Performance,optimiz,optimized,505,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:533,Performance,optimiz,optimized,533,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:560,Performance,optimiz,optimized,560,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:5146,Performance,optimiz,optimized,5146,"shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::scf::HF>, pybind11::name, pybind11::scope, pybind11::sibling, pybind11::arg, char [61]>(std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), std::shared_ptr<psi::Matrix> (*)(std::shared_ptr<psi::scf::HF>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, char const (&) [61])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /usr/include/pybind11/pybind11.h:224. #19 0x00007f21a8441138 in pybind11::cpp_function::dispatcher (self=0x7f2185ffe790, args_in=0x7f21476cd000, ; kwargs_in=0x0) at /usr/include/pybind11/pybind11.h:946; #20 0x000056022a991401 in cfunction_call (func=0x7f2186005210, args=0x7f21476cd000, kwargs=0x0); at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:537; #21 0x000056022a97109b in _PyObject_MakeTpCall (tstate=0x56022ae03058 <_PyRuntime+459704>, ; callable=0x7f2186005210, args=<optimized out>, nargs=1, keywords=0x0); at /usr/local/src/conda/python-3.12.5/Objects/call.c:240; #22 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9af0, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #23 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #24 0x000056022aa50d9a in run_eval_code_obj (tstate=tstate@entry=0x56022ae03058 <_PyRuntime+459704>, ; co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1722; --Type <RET> for more, q to quit, c to continue without paging--; #25 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x56025a306440, ; filename=filename@entry=0x56022ad98b00 <_PyRuntime+24160>, globals=globals@entry=0x7f21abff9900, ; locals=local",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:5304,Performance,optimiz,optimized,5304,"]>(std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), std::shared_ptr<psi::Matrix> (*)(std::shared_ptr<psi::scf::HF>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, char const (&) [61])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /usr/include/pybind11/pybind11.h:224. #19 0x00007f21a8441138 in pybind11::cpp_function::dispatcher (self=0x7f2185ffe790, args_in=0x7f21476cd000, ; kwargs_in=0x0) at /usr/include/pybind11/pybind11.h:946; #20 0x000056022a991401 in cfunction_call (func=0x7f2186005210, args=0x7f21476cd000, kwargs=0x0); at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:537; #21 0x000056022a97109b in _PyObject_MakeTpCall (tstate=0x56022ae03058 <_PyRuntime+459704>, ; callable=0x7f2186005210, args=<optimized out>, nargs=1, keywords=0x0); at /usr/local/src/conda/python-3.12.5/Objects/call.c:240; #22 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9af0, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #23 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #24 0x000056022aa50d9a in run_eval_code_obj (tstate=tstate@entry=0x56022ae03058 <_PyRuntime+459704>, ; co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1722; --Type <RET> for more, q to quit, c to continue without paging--; #25 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x56025a306440, ; filename=filename@entry=0x56022ad98b00 <_PyRuntime+24160>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFla",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:5355,Performance,optimiz,optimized,5355,"]>(std::shared_ptr<psi::Matrix> (*&)(std::shared_ptr<psi::scf::HF>), std::shared_ptr<psi::Matrix> (*)(std::shared_ptr<psi::scf::HF>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, pybind11::arg const&, char const (&) [61])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /usr/include/pybind11/pybind11.h:224. #19 0x00007f21a8441138 in pybind11::cpp_function::dispatcher (self=0x7f2185ffe790, args_in=0x7f21476cd000, ; kwargs_in=0x0) at /usr/include/pybind11/pybind11.h:946; #20 0x000056022a991401 in cfunction_call (func=0x7f2186005210, args=0x7f21476cd000, kwargs=0x0); at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:537; #21 0x000056022a97109b in _PyObject_MakeTpCall (tstate=0x56022ae03058 <_PyRuntime+459704>, ; callable=0x7f2186005210, args=<optimized out>, nargs=1, keywords=0x0); at /usr/local/src/conda/python-3.12.5/Objects/call.c:240; #22 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9af0, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #23 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #24 0x000056022aa50d9a in run_eval_code_obj (tstate=tstate@entry=0x56022ae03058 <_PyRuntime+459704>, ; co=co@entry=0x56025a2e86d0, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1722; --Type <RET> for more, q to quit, c to continue without paging--; #25 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x56025a306440, ; filename=filename@entry=0x56022ad98b00 <_PyRuntime+24160>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFla",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:6813,Performance,optimiz,optimized,6813,"ythonrun.c:1722; --Type <RET> for more, q to quit, c to continue without paging--; #25 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x56025a306440, ; filename=filename@entry=0x56022ad98b00 <_PyRuntime+24160>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to qui",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:6838,Performance,optimiz,optimized,6838,"ythonrun.c:1722; --Type <RET> for more, q to quit, c to continue without paging--; #25 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x56025a306440, ; filename=filename@entry=0x56022ad98b00 <_PyRuntime+24160>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to qui",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7018,Performance,optimiz,optimized,7018,"0>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7040,Performance,optimiz,optimized,7040,"0>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7063,Performance,optimiz,optimized,7063,"0>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7090,Performance,optimiz,optimized,7090,"0>, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8, arena=arena@entry=0x7f215015b370); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7251,Performance,optimiz,optimized,7251,":1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #34 0x000056022",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7298,Performance,optimiz,optimized,7298,":1743; #26 0x000056022aa3ccb2 in PyRun_StringFlags (; str=str@entry=0x56025a2d4098 ""\nimport psi4\nfrom psi4 import *\nfrom psi4.core import *\nfrom psi4.driver.diatomic import anharmonicity\nfrom psi4.driver.gaussian_n import *\nfrom psi4.driver.frac import ip_fitting, frac_traverse\nfrom ""..., start=start@entry=257, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900, flags=flags@entry=0x7ffc67b366b8); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1618; #27 0x000056022aa47f97 in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, ; locals=0x7f21abff9900, globals=0x7f21abff9900, source=0x56025a2d4070); at /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #34 0x000056022",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:7951,Performance,optimiz,optimized,7951,"t /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #34 0x000056022aa50d9a in run_eval_code_obj (tstate=tstate@entry=0x56022ae03058 <_PyRuntime+459704>, ; co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1722; #35 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x560259ddd528, filename=filename@entry=0x7f21abe2c090, ; globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; flags=flags@entry=0x7ffc67b36bd0, arena=arena@entry=0x7f21abf1bcb0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #36 0x000056022aa64bd0 in pyrun_file (fp=fp@entry=0x560259cb7470, filename=filename@entry=0x7",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:8002,Performance,optimiz,optimized,8002,"t /usr/local/src/conda/python-3.12.5/Python/bltinmodule.c:1121; #28 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, ; kwnames=<optimized out>) at /usr/local/src/conda/python-3.12.5/Python/clinic/bltinmodule.c.h:586; #29 0x000056022a986246 in cfunction_vectorcall_FASTCALL_KEYWORDS (func=<optimized out>, args=0x7f21b9ea9078, ; nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/methodobject.c:438; #30 0x000056022a985fcf in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, ; args=0x7f21b9ea9078, callable=0x7f21abf9c770, tstate=0x56022ae03058 <_PyRuntime+459704>); at /usr/local/src/conda/python-3.12.5/Include/internal/pycore_call.h:92; #31 PyObject_Vectorcall (callable=0x7f21abf9c770, args=0x7f21b9ea9078, nargsf=9223372036854775809, ; kwnames=0x0) at /usr/local/src/conda/python-3.12.5/Objects/call.c:325; --Type <RET> for more, q to quit, c to continue without paging--; #32 0x000056022a877f65 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=0x7f21b9ea9020, ; throwflag=<optimized out>) at Python/bytecodes.c:2714; #33 0x000056022aa2bece in PyEval_EvalCode (co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, ; locals=locals@entry=0x7f21abff9900) at /usr/local/src/conda/python-3.12.5/Python/ceval.c:578; #34 0x000056022aa50d9a in run_eval_code_obj (tstate=tstate@entry=0x56022ae03058 <_PyRuntime+459704>, ; co=co@entry=0x560259e3fbd0, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1722; #35 0x000056022aa4bf4b in run_mod (mod=mod@entry=0x560259ddd528, filename=filename@entry=0x7f21abe2c090, ; globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; flags=flags@entry=0x7ffc67b36bd0, arena=arena@entry=0x7f21abf1bcb0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1743; #36 0x000056022aa64bd0 in pyrun_file (fp=fp@entry=0x560259cb7470, filename=filename@entry=0x7",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:10178,Performance,optimiz,optimized,10178,"y=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f21534/psi4/src/psi4/libmints/eribase.cc#L241",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:10200,Performance,optimiz,optimized,10200,"y=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f21534/psi4/src/psi4/libmints/eribase.cc#L241",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:10578,Performance,optimiz,optimized,10578,"y=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f21534/psi4/src/psi4/libmints/eribase.cc#L241",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:10600,Performance,optimiz,optimized,10600,"y=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f21534/psi4/src/psi4/libmints/eribase.cc#L241",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:10627,Performance,optimiz,optimized,10627,"y=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; start=start@entry=257, globals=globals@entry=0x7f21abff9900, locals=locals@entry=0x7f21abff9900, ; closeit=closeit@entry=1, flags=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:1643; #37 0x000056022aa6420e in _PyRun_SimpleFileObject (fp=0x560259cb7470, filename=0x7f21abe2c090, closeit=1, ; flags=0x7ffc67b36bd0) at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:433; #38 0x000056022aa63ee4 in _PyRun_AnyFileObject (fp=0x560259cb7470, filename=filename@entry=0x7f21abe2c090, ; closeit=closeit@entry=1, flags=flags@entry=0x7ffc67b36bd0); at /usr/local/src/conda/python-3.12.5/Python/pythonrun.c:78; #39 0x000056022aa5cf42 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7f21abe2c090, ; program_name=0x7f21abe2c270) at /usr/local/src/conda/python-3.12.5/Modules/main.c:360; --Type <RET> for more, q to quit, c to continue without paging--; #40 pymain_run_file (config=0x56022ada5c38 <_PyRuntime+77720>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:379; #41 pymain_run_python (exitcode=0x7ffc67b36ba4) at /usr/local/src/conda/python-3.12.5/Modules/main.c:633; #42 Py_RunMain () at /usr/local/src/conda/python-3.12.5/Modules/main.c:713; #43 0x000056022aa147e7 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>); at /usr/local/src/conda/python-3.12.5/Modules/main.c:767; #44 0x00007f21b9bd3088 in __libc_start_call_main (main=main@entry=0x56022aa14720 <main>, argc=argc@entry=6, ; argv=argv@entry=0x7ffc67b36e38) at ../sysdeps/nptl/libc_start_call_main.h:58; #45 0x00007f21b9bd314b in __libc_start_main_impl (main=0x56022aa14720 <main>, argc=6, argv=0x7ffc67b36e38, ; init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc67b36e28); at ../csu/libc-start.c:360; #46 0x000056022aa14681 in _start (); (gdb) ; ```; which corresponds to; https://github.com/psi4/psi4/blob/3484122eaaec9e185bc33581c6cdef4669f21534/psi4/src/psi4/libmints/eribase.cc#L241",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969:412,Safety,abort,abort,412,"Actually, there are more failures; ```; (gdb) bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0); at pthread_kill.c:44; #1 0x00007f21b9c426d3 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78; #2 0x00007f21b9be9c4e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007f21b9bd1902 in __GI_abort () at abort.c:79; #4 0x00007f21862e80af in std::__glibcxx_assert_fail (file=<optimized out>, line=<optimized out>, ; function=<optimized out>, condition=<optimized out>); at ../../../../../libstdc++-v3/src/c++11/assert_fail.cc:41; #5 0x00007f21aa275614 in std::vector<double const*, libint2::detail::ext_stack_allocator<double const*, 121ul> >::operator[] (this=0x56025b76c988, __n=6) at /usr/include/c++/14/bits/stl_vector.h:1149; #6 0x00007f21aa2a709b in psi::Libint2TwoElectronInt::compute_shell_deriv1 (this=0x56025b7bb980, s1=0, s2=0, ; s3=0, s4=0) at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/eribase.cc:3245; #7 0x00007f21a9f71d73 in _ZN3psi11MintsHelper11metric_gradERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS_6MatrixEESt4lessIS7_ESaISt4pairIKS7_SA_EEERSE_._omp_fn.0(void) (); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2343; #8 0x00007f219d9a89c4 in __kmp_api_GOMP_parallel_40_alias (); from /home/susi/.conda/envs/p4env/lib/libgomp.so.1; #9 0x00007f21a9f5f757 in psi::MintsHelper::metric_grad (this=0x56025ac87f20, D=..., aux_name=...); at /home/work/psi4-1.9.1/psi4/src/psi4/libmints/mintshelper.cc:2335; #10 0x00007f21a9b85c92 in psi::scfgrad::DFJKGrad::build_AB_x_terms (this=0x56025a8b4200); at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:862; #11 0x00007f21a9b818c2 in psi::scfgrad::DFJKGrad::compute_gradient (this=0x56025a8b4200); --Type <RET> for more, q to quit, c to continue without paging--; at /home/work/psi4-1.9.1/psi4/src/psi4/scfgrad/jk_grad.cc:257; #12 0x00007f21a9b7595c in psi::scfgrad::SCFDeriv:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214#issuecomment-2326581969
https://github.com/psi4/psi4/issues/3221#issuecomment-2356307438:3123,Energy Efficiency,energy,energy,3123,"60000000 ; C -0.250620000000 3.033490000000 -1.830910000000 ; C 0.367510000000 3.482590000000 -0.594640000000 ; C 1.749690000000 3.033490000000 -0.594640000000 ; C -1.580280000000 2.601460000000 -1.830910000000 ; C -1.962310000000 1.425700000000 -2.594960000000 ; C -2.962470000000 0.699040000000 -1.830910000000 ; C -3.198570000000 1.425700000000 -0.594640000000 ; C -2.344340000000 2.601460000000 -0.594640000000 ; C -2.962470000000 -0.699040000000 -1.830910000000 ; C -1.962310000000 -1.425700000000 -2.594960000000 ; C -1.580280000000 -2.601460000000 -1.830910000000 ; C -2.344340000000 -2.601460000000 -0.594640000000 ; C -3.198570000000 -1.425700000000 -0.594640000000 ; C -1.000160000000 -0.726660000000 -3.329980000000 ; C -1.000160000000 0.726660000000 -3.329980000000 ; C 0.382030000000 1.175760000000 -3.329980000000 ; C 1.236260000000 -0.000000000000 -3.329980000000 ; C 0.382030000000 -1.175760000000 -3.329980000000 ; }; ```. The energy is about 17 Hartree lower than for the other isomers in this set, and there's the same tiny band gap observed:. ```. Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -4.532636 2A -2.786368 3A -1.250402 ; 4A -1.089303 5A -1.072010 6A -1.069172 ; 7A -1.066179 8A -1.033189 9A -1.032723 ; 10A -1.030891 11A -1.028656 12A -1.027962 ; 13A -0.991803 14A -0.990535 15A -0.987342 ; 16A -0.973125 17A -0.960409 18A -0.959419 ; 19A -0.958304 20A -0.956895 21A -0.908137 ; 22A -0.907635 23A -0.907511 24A -0.906906 ; 25A -0.906315 26A -0.891379 27A -0.891257 ; 28A -0.890707 29A -0.890398 30A -0.839042 ; 31A -0.837178 32A -0.834818 33A -0.833934 ; 34A -0.833813 35A -0.817752 36A -0.817322 ; 37A -0.816951 38A -0.773550 39A -0.772891 ; 40A -0.772830 41A -0.741258 42A -0.741108 ; 43A -0.738895 44A -0.738043 45A -0.737386 ; 46A -0.736864 47A -0.735958 48A -0.735127 ; 49A -0.704822 50A -0.667369 51A -0.666237 ; 52A -0.665137 53A -0.664185 54A -0.645333 ; 55A -0.645019 56A -0.644751 57A -0.643862 ; 58A -0.643693 59A -0.626239 60A -0.625011",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2356307438
https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665:6,Energy Efficiency,energy,energy,6,"> The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. With psi4 1.9.1 from conda I get -43.40752609176465 for H2C-C5-CH2 and -42.04595200805039 for heptatriyne. My numbers are oddly different from yours, but they do show a difference of 854 kcal/mol.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665
https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665:78,Energy Efficiency,energy,energy,78,"> The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. With psi4 1.9.1 from conda I get -43.40752609176465 for H2C-C5-CH2 and -42.04595200805039 for heptatriyne. My numbers are oddly different from yours, but they do show a difference of 854 kcal/mol.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665
https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665:283,Energy Efficiency,energy,energy,283,"> The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. With psi4 1.9.1 from conda I get -43.40752609176465 for H2C-C5-CH2 and -42.04595200805039 for heptatriyne. My numbers are oddly different from yours, but they do show a difference of 854 kcal/mol.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665
https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665:153,Safety,predict,predicted,153,"> The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. With psi4 1.9.1 from conda I get -43.40752609176465 for H2C-C5-CH2 and -42.04595200805039 for heptatriyne. My numbers are oddly different from yours, but they do show a difference of 854 kcal/mol.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665
https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965:152,Energy Efficiency,energy,energy,152,"My guess is that the performance would be better with fewer threads, since too much parallellization can hurt performance. The 50 Hartree difference in energy suggests that the compilation on Summit is not good. Did you run the Psi4 test suite?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965
https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965:21,Performance,perform,performance,21,"My guess is that the performance would be better with fewer threads, since too much parallellization can hurt performance. The 50 Hartree difference in energy suggests that the compilation on Summit is not good. Did you run the Psi4 test suite?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965
https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965:110,Performance,perform,performance,110,"My guess is that the performance would be better with fewer threads, since too much parallellization can hurt performance. The 50 Hartree difference in energy suggests that the compilation on Summit is not good. Did you run the Psi4 test suite?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965
https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965:233,Testability,test,test,233,"My guess is that the performance would be better with fewer threads, since too much parallellization can hurt performance. The 50 Hartree difference in energy suggests that the compilation on Summit is not good. Did you run the Psi4 test suite?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:695,Energy Efficiency,energy,energy,695,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:727,Energy Efficiency,energy,energy,727,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1435,Energy Efficiency,energy,energy,1435,": fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1467,Energy Efficiency,energy,energy,1467,": fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1633,Energy Efficiency,energy,energy,1633,".................. Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1664,Energy Efficiency,energy,energy,1664,".................. Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1910,Energy Efficiency,energy,energy,1910,"............ Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1941,Energy Efficiency,energy,energy,1941,"............ Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:89,Testability,Test,Test,89,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:175,Testability,Test,Test,175,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:257,Testability,Test,Test,257,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:344,Testability,Test,Test,344,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:433,Testability,Test,Test,433,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:519,Testability,Test,Test,519,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:613,Testability,Test,Test,613,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:708,Testability,Test,Test,708,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:796,Testability,Test,Test,796,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:884,Testability,Test,Test,884,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:973,Testability,Test,Test,973,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1063,Testability,Test,Test,1063," and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1155,Testability,Test,Test,1155,"; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1251,Testability,Test,Test,1251,"1: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1354,Testability,Test,Test,1354,"t #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 tes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1449,Testability,Test,Test,1449,": fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1553,Testability,Test,Test,1553,".................. Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1647,Testability,Test,Test,1647,".................. Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1737,Testability,Test,Test,1737,"rgy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1828,Testability,Test,Test,1828,".................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 se",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1924,Testability,Test,Test,1924,"............ Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1994,Testability,test,tests,1994,"........ Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2010,Testability,test,tests,2010,"........ Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2082,Testability,test,tests,2082,"........................ Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2117,Testability,test,tests,2117,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2152,Testability,test,test,2152,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2181,Testability,test,test,2181,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2214,Testability,test,test,2214,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2244,Testability,test,test,2244,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2277,Testability,test,test,2277,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2310,Testability,test,test,2310,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2344,Testability,test,test,2344,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2378,Testability,test,test,2378,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2412,Testability,test,test,2412,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2446,Testability,test,test,2446,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2477,Testability,test,test,2477,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2510,Testability,test,test,2510,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2542,Testability,test,tests,2542,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2580,Testability,test,test,2580,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2614,Testability,test,tests,2614,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2651,Testability,test,tests,2651,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2685,Testability,test,test,2685,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2726,Testability,test,tests,2726,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2760,Testability,test,tests,2760,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2791,Testability,test,test,2791,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2832,Testability,test,tests,2832,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2866,Testability,test,tests,2866,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2902,Testability,test,test,2902,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:2915,Testability,Test,Test,2915,"...................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Test time (real) = 1278.48 sec; ```; Is there anything else that I should run specifically to pin point what could be wrong with this functional and basis set combination?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:20013,Availability,Error,Errors,20013," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:20184,Availability,failure,failure,20184," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:657,Energy Efficiency,energy,energy,657,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:691,Energy Efficiency,energy,energy,691,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:753,Energy Efficiency,energy,energy,753,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:786,Energy Efficiency,energy,energy,786,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12568,Energy Efficiency,energy,energy,12568,f ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12603,Energy Efficiency,energy,energy,12603,f ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12666,Energy Efficiency,energy,energy,12666,............. Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12701,Energy Efficiency,energy,energy,12701,............. Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15131,Energy Efficiency,energy,energy-conv,15131,..... Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #50,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15172,Energy Efficiency,energy,energy-conv,15172,..... Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #50,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15735,Energy Efficiency,energy,energy,15735,tart 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15769,Energy Efficiency,energy,energy,15769,tart 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16730,Energy Efficiency,energy,energy,16730,"rgy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 77",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16771,Energy Efficiency,energy,energy,16771,"rgy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 77",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16932,Energy Efficiency,energy,energy,16932,"185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16965,Energy Efficiency,energy,energy,16965,"185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17314,Energy Efficiency,energy,energy,17314,"thon-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17347,Energy Efficiency,energy,energy,17347,"thon-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7939,Integrability,interface,interface,7939,st #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7980,Integrability,interface,interface,7980,st #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:43,Testability,Test,Test,43,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:134,Testability,Test,Test,134,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:223,Testability,Test,Test,223,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:313,Testability,Test,Test,313,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:404,Testability,Test,Test,404,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:491,Testability,Test,Test,491,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:576,Testability,Test,Test,576,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:671,Testability,Test,Test,671,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:767,Testability,Test,Test,767,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:861,Testability,Test,Test,861,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:960,Testability,Test,Test,960,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1055,Testability,Test,Test,1055, project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1140,Testability,Test,Test,1140,5 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1226,Testability,Test,Test,1226,/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1311,Testability,Test,Test,1311,sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi .....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1396,Testability,Test,Test,1396,asscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1481,Testability,Test,Test,1481, casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1567,Testability,Test,Test,1567,: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubepr,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1654,Testability,Test,Test,1654, cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1741,Testability,Test,Test,1741, Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1825,Testability,Test,Test,1825,d 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1910,Testability,Test,Test,1910,... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:1995,Testability,Test,Test,1995, ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcassc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2084,Testability,Test,Test,2084,ct .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2174,Testability,Test,Test,2174,.................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2264,Testability,Test,Test,2264,.............. Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2357,Testability,Test,Test,2357,...... Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2450,Testability,Test,Test,2450,assed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2543,Testability,Test,Test,2543,.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2637,Testability,Test,Test,2637,; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2729,Testability,Test,Test,2729,rt 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2817,Testability,Test,Test,2817,57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:2904,Testability,Test,Test,2904, cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3001,Testability,Test,Test,3001,5 Test #79: cc8 .............................. Passed 4.58 sec; Start 85: cdomp2-1; 23/185 Test #85: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3100,Testability,Test,Test,3100,: cdomp2-1 ......................... Passed 10.26 sec; Start 86: cdomp2-2; 24/185 Test #86: cdomp2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3197,Testability,Test,Test,3197,2-2 ......................... Passed 31.46 sec; Start 95: ci-multi; 25/185 Test #95: ci-multi ......................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3296,Testability,Test,Test,3296,.................... Passed 17.28 sec; Start 96: cisd-h2o+-0; 26/185 Test #96: cisd-h2o+-0 ...................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3390,Testability,Test,Test,3390,................... Passed 6.82 sec; Start 103: ci-property; 27/185 Test #103: ci-property ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3479,Testability,Test,Test,3479,y ...................... Passed 138.78 sec; Start 104: cubeprop; 28/185 Test #104: cubeprop ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3569,Testability,Test,Test,3569,p ......................... Passed 11.86 sec; Start 106: decontract; 29/185 Test #106: decontract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3660,Testability,Test,Test,3660,ntract ....................... Passed 2.88 sec; Start 108: dct-grad2; 30/185 Test #108: dct-grad2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3755,Testability,Test,Test,3755,d2 ........................ Passed 14.27 sec; Start 111: dct1; 31/185 Test #111: dct1 ............................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3853,Testability,Test,Test,3853,................. Passed 5.03 sec; Start 113: dct3; 32/185 Test #113: dct3 ............................. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:3944,Testability,Test,Test,3944,............. Passed 3.21 sec; Start 123: ao-dfcasscf-sp; 33/185 Test #123: ao-dfcasscf-sp ................... Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4036,Testability,Test,Test,4036,.................. Passed 3.04 sec; Start 124: density-screen-1; 34/185 Test #124: density-screen-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4131,Testability,Test,Test,4131,en-1 ................. Passed 2.89 sec; Start 126: dfcasscf-sa-sp; 35/185 Test #126: dfcasscf-sa-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4226,Testability,Test,Test,4226,a-sp ................... Passed 24.45 sec; Start 127: dfcasscf-fzc-sp; 36/185 Test #127: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4321,Testability,Test,Test,4321,cf-fzc-sp .................. Passed 4.55 sec; Start 128: dfcasscf-sp; 37/185 Test #128: dfcasscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4412,Testability,Test,Test,4412,asscf-sp ...................... Passed 5.25 sec; Start 129: dfccd1; 38/185 Test #129: dfccd1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4503,Testability,Test,Test,4503,1 ........................... Passed 5.11 sec; Start 132: dfccsd1; 39/185 Test #132: dfccsd1 .......................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4599,Testability,Test,Test,4599,....................... Passed 7.31 sec; Start 133: dfccsdl1; 40/185 Test #133: dfccsdl1 ......................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4694,Testability,Test,Test,4694,................... Passed 7.10 sec; Start 134: dfccsd-grad1; 41/185 Test #134: dfccsd-grad1 ..................... Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4795,Testability,Test,Test,4795,............. Passed 14.46 sec; Start 135: dfccsd-t-grad1; 42/185 Test #135: dfccsd-t-grad1 ................... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4897,Testability,Test,Test,4897,......... Passed 13.06 sec; Start 138: dfmp2-1; 43/185 Test #138: dfmp2-1 .......................... Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:4989,Testability,Test,Test,4989,........ Passed 74.50 sec; Start 143: dfmp2-fc; 44/185 Test #143: dfmp2-fc ......................... Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5087,Testability,Test,Test,5087,.. Passed 66.21 sec; Start 144: dfmp2-freq1; 45/185 Test #144: dfmp2-freq1 ...................... Passed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5189,Testability,Test,Test,5189,ed 23.80 sec; Start 145: dfmp2-freq2; 46/185 Test #145: dfmp2-freq2 ...................... Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5279,Testability,Test,Test,5279, Passed 24.30 sec; Start 150: dfmp2-grad1; 47/185 Test #150: dfmp2-grad1 ...................... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5370,Testability,Test,Test,5370,.... Passed 4.33 sec; Start 155: dfomp2-1; 48/185 Test #155: dfomp2-1 ......................... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ...........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5459,Testability,Test,Test,5459,...... Passed 6.63 sec; Start 162: dfomp3-1; 49/185 Test #162: dfomp3-1 ......................... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5553,Testability,Test,Test,5553,... Passed 31.52 sec; Start 165: dfomp3-grad2; 50/185 Test #165: dfomp3-grad2 ..................... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5648,Testability,Test,Test,5648,.... Passed 35.25 sec; Start 178: dfrasscf-sp; 51/185 Test #178: dfrasscf-sp ...................... Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5745,Testability,Test,Test,5745,.. Passed 6.60 sec; Start 185: dft-freq-analytic1; 52/185 Test #185: dft-freq-analytic1 ............... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5845,Testability,Test,Test,5845,... Passed 34.44 sec; Start 186: dft-freq-analytic2; 53/185 Test #186: dft-freq-analytic2 ............... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:5947,Testability,Test,Test,5947,... Passed 42.50 sec; Start 192: dft-vv10; 54/185 Test #192: dft-vv10 .........................***Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6043,Testability,Test,Test,6043,**Failed 18.45 sec; Start 197: dft-dens-cut; 55/185 Test #197: dft-dens-cut .....................***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6133,Testability,Test,Test,6133,.......***Failed 4.64 sec; Start 203: explicit-am-basis; 56/185 Test #203: explicit-am-basis ................ Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6229,Testability,Test,Test,6229,............. Passed 2.37 sec; Start 204: extern1; 57/185 Test #204: extern1 .......................... Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6318,Testability,Test,Test,6318,.............. Passed 14.78 sec; Start 207: extern4; 58/185 Test #207: extern4 .......................... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6408,Testability,Test,Test,6408,............... Passed 3.16 sec; Start 209: fsapt2; 59/185 Test #209: fsapt2 ........................... Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6499,Testability,Test,Test,6499,............. Passed 9.41 sec; Start 210: fsapt-terms; 60/185 Test #210: fsapt-terms ......................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6589,Testability,Test,Test,6589,.................***Failed 15.99 sec; Start 212: fsapt-ext; 61/185 Test #212: fsapt-ext ........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6677,Testability,Test,Test,6677,........................ Passed 10.84 sec; Start 213: fsapt-ext-abc; 62/185 Test #213: fsapt-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6768,Testability,Test,Test,6768,t-ext-abc ....................***Failed 28.87 sec; Start 214: fsapt-ext-abc2; 63/185 Test #214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6858,Testability,Test,Test,6858,#214: fsapt-ext-abc2 ...................***Failed 55.36 sec; Start 215: fsapt-ext-abc-au; 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/18,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:6947,Testability,Test,Test,6947, 64/185 Test #215: fsapt-ext-abc-au .................***Failed 32.87 sec; Start 221: fci-dipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-i,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7037,Testability,Test,Test,7037,ipole; 65/185 Test #221: fci-dipole ....................... Passed 8.84 sec; Start 228: fcidump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7127,Testability,Test,Test,7127,idump; 66/185 Test #228: fcidump .......................... Passed 3.94 sec; Start 235: freq-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7216,Testability,Test,Test,7216,req-isotope2; 67/185 Test #235: freq-isotope2 .................... Passed 6.24 sec; Start 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7305,Testability,Test,Test,7305, 237: fnocc2; 68/185 Test #237: fnocc2 ........................... Passed 17.66 sec; Start 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7395,Testability,Test,Test,7395, 239: fnocc4; 69/185 Test #239: fnocc4 ........................... Passed 136.23 sec; Start 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7485,Testability,Test,Test,7485,t 240: fnocc5; 70/185 Test #240: fnocc5 ........................... Passed 53.87 sec; Start 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7575,Testability,Test,Test,7575,t 241: fnocc6; 71/185 Test #241: fnocc6 ........................... Passed 7.06 sec; Start 248: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7669,Testability,Test,Test,7669,: gibbs; 72/185 Test #248: gibbs ............................ Passed 14.27 sec; Start 251: matrix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7764,Testability,Test,Test,7764,ix1; 73/185 Test #251: matrix1 .......................... Passed 1.85 sec; Start 252: matrix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7853,Testability,Test,Test,7853,rix2; 74/185 Test #252: matrix2 .......................... Passed 1.81 sec; Start 253: mbis-1; 75/185 Test #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:7957,Testability,Test,Test,7957,st #253: mbis-1 ........................... Passed 10.77 sec; Start 258: mbis-6; 76/185 Test #258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8051,Testability,Test,Test,8051,258: mbis-6 ........................... Passed 16.06 sec; Start 259: mcscf1; 77/185 Test #259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8140,Testability,Test,Test,8140,#259: mcscf1 ........................... Passed 2.04 sec; Start 262: mints1; 78/185 Test #262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8229,Testability,Test,Test,8229,#262: mints1 ........................... Passed 1.93 sec; Start 263: mints2; 79/185 Test #263: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8322,Testability,Test,Test,8322,: mints2 ........................... Passed 3.59 sec; Start 272: mints10; 80/185 Test #272: mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8413,Testability,Test,Test,8413, mints10 .......................... Passed 2.30 sec; Start 274: molden1; 81/185 Test #274: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8502,Testability,Test,Test,8502,: molden1 .......................... Passed 3.07 sec; Start 275: molden2; 82/185 Test #275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8589,Testability,Test,Test,8589,275: molden2 .......................... Passed 2.82 sec; Start 284: mp2p5-grad1; 83/185 Test #284: mp2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8689,Testability,Test,Test,8689,p2p5-grad1 ...................... Passed 2.74 sec; Start 288: mp2-property; 84/185 Test #288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8778,Testability,Test,Test,8778,288: mp2-property ..................... Passed 4.86 sec; Start 289: mpn-bh; 85/185 Test #289: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8868,Testability,Test,Test,8868,89: mpn-bh ........................... Passed 3.94 sec; Start 302: numpy-array-interface; 86/185 Test #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:8967,Testability,Test,Test,8967,st #302: numpy-array-interface ............ Passed 1.88 sec; Start 305: olccd-grad2; 87/185 Test #305: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9066,Testability,Test,Test,9066,05: olccd-grad2 ...................... Passed 8.44 sec; Start 306: olccd1; 88/185 Test #306: olccd1 ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9165,Testability,Test,Test,9165, ........................... Passed 3.32 sec; Start 310: omp2-2; 89/185 Test #310: omp2-2 ........................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9260,Testability,Test,Test,9260,...................... Passed 6.22 sec; Start 314: omp2-grad1; 90/185 Test #314: omp2-grad1 ....................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9355,Testability,Test,Test,9355,.................... Passed 3.07 sec; Start 317: omp2p5-2; 91/185 Test #317: omp2p5-2 ......................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9447,Testability,Test,Test,9447,................... Passed 6.67 sec; Start 320: omp3-1; 92/185 Test #320: omp3-1 ........................... Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9543,Testability,Test,Test,9543,............ Passed 3.05 sec; Start 328: opt1; 93/185 Test #328: opt1 ............................. Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9638,Testability,Test,Test,9638,.... Passed 6.47 sec; Start 348: opt-freeze-coords; 94/185 Test #348: opt-freeze-coords ................ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9734,Testability,Test,Test,9734,........ Passed 6.55 sec; Start 351: phi-ao; 95/185 Test #351: phi-ao ........................... Passed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9834,Testability,Test,Test,9834,ssed 21.33 sec; Start 355: props4; 96/185 Test #355: props4 ........................... Passed 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:9927,Testability,Test,Test,9927,d 3.14 sec; Start 356: psimrcc-ccsd_t-1; 97/185 Test #356: psimrcc-ccsd_t-1 ................. Passed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10023,Testability,Test,Test,10023,ssed 3.41 sec; Start 357: psimrcc-ccsd_t-2; 98/185 Test #357: psimrcc-ccsd_t-2 ................. Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10111,Testability,Test,Test,10111,........ Passed 2.43 sec; Start 358: psimrcc-ccsd_t-3; 99/185 Test #358: psimrcc-ccsd_t-3 ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10200,Testability,Test,Test,10200, ................. Passed 2.31 sec; Start 362: psimrcc-pt2; 100/185 Test #362: psimrcc-pt2 ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10290,Testability,Test,Test,10290, ...................... Passed 2.09 sec; Start 363: psimrcc-sp1; 101/185 Test #363: psimrcc-sp1 ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10385,Testability,Test,Test,10385, ...................... Passed 8.92 sec; Start 364: psithon1; 102/185 Test #364: psithon1 ......................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10478,Testability,Test,Test,10478,...................... Passed 4.17 sec; Start 368: pywrap-alias; 103/185 Test #368: pywrap-alias ..................... Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10578,Testability,Test,Test,10578,.................. Passed 15.86 sec; Start 369: pywrap-all; 104/185 Test #369: pywrap-all ....................... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10685,Testability,Test,Test,10685,...... Passed 68.57 sec; Start 371: pywrap-cbs1; 105/185 Test #371: pywrap-cbs1 ...................... Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ...........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10773,Testability,Test,Test,10773,.............. Passed 13.76 sec; Start 378: pywrap-molecule; 106/185 Test #378: pywrap-molecule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large .....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10864,Testability,Test,Test,10864,cule .................. Passed 2.05 sec; Start 382: rasscf-sp; 107/185 Test #382: rasscf-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ..,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:10952,Testability,Test,Test,10952,-sp ........................ Passed 4.11 sec; Start 383: sad-scf-type; 108/185 Test #383: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 ..,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11040,Testability,Test,Test,11040,: sad-scf-type ..................... Passed 7.40 sec; Start 384: sad1; 109/185 Test #384: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11128,Testability,Test,Test,11128,: sad1 ............................. Passed 3.34 sec; Start 385: sapt1; 110/185 Test #385: sapt1 ............................ Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11233,Testability,Test,Test,11233,.................... Passed 50.41 sec; Start 399: sapt8; 111/185 Test #399: sapt8 ............................ Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-comp,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11338,Testability,Test,Test,11338,..... Passed 22.22 sec; Start 401: scf-dipder; 112/185 Test #401: scf-dipder ....................... Passed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11442,Testability,Test,Test,11442,sed 4.11 sec; Start 402: scf-guess; 113/185 Test #402: scf-guess ........................ Passed 14.46 sec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11546,Testability,Test,Test,11546,ec; Start 403: scf-guess-read1; 114/185 Test #403: scf-guess-read1 .................. Passed 2.99 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11642,Testability,Test,Test,11642,9 sec; Start 404: scf-upcast-custom-basis; 115/185 Test #404: scf-upcast-custom-basis .......... Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11737,Testability,Test,Test,11737,. Passed 2.95 sec; Start 407: scf1; 116/185 Test #407: scf1 ............................. Passed 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11832,Testability,Test,Test,11832,d 4.26 sec; Start 408: scf-occ; 117/185 Test #408: scf-occ .......................... Passed 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:11923,Testability,Test,Test,11923,d 3.02 sec; Start 409: scf2; 118/185 Test #409: scf2 ............................. Passed 3.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12014,Testability,Test,Test,12014,.60 sec; Start 410: scf3; 119/185 Test #410: scf3 ............................. Passed 2.41 sec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12107,Testability,Test,Test,12107,ec; Start 412: scf5; 120/185 Test #412: scf5 ............................. Passed 128.54 sec; Start 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12205,Testability,Test,Test,12205,t 415: scf-level-shift-rks; 121/185 Test #415: scf-level-shift-rks .............. Passed 442.68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-ba,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12298,Testability,Test,Test,12298,68 sec; Start 416: scf-level-shift-uhf; 122/185 Test #416: scf-level-shift-uhf .............. Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-f,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12392,Testability,Test,Test,12392,Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12486,Testability,Test,Test,12486,......... Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12584,Testability,Test,Test,12584,f ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12682,Testability,Test,Test,12682,............. Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12777,Testability,Test,Test,12777,............. Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12874,Testability,Test,Test,12874,........... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp .....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12971,Testability,Test,Test,12971,..... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13069,Testability,Test,Test,13069,assed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13171,Testability,Test,Test,13171,.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13270,Testability,Test,Test,13270,2 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13359,Testability,Test,Test,13359,2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13448,Testability,Test,Test,13448,ssed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13536,Testability,Test,Test,13536,... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13633,Testability,Test,Test,13633,.... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13725,Testability,Test,Test,13725,.......... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13821,Testability,Test,Test,13821,......... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:13915,Testability,Test,Test,13915,............ Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14011,Testability,Test,Test,14011,............. Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14104,Testability,Test,Test,14104,.................. Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14197,Testability,Test,Test,14197,lesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv .....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14291,Testability,Test,Test,14291,4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14384,Testability,Test,Test,14384,............................ Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14479,Testability,Test,Test,14479,...................... Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14576,Testability,Test,Test,14576,............. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h .................... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4nump,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14679,Testability,Test,Test,14679,....... Passed 2.79 sec; Start 450: options1; 147/185 Test #450: options1 ......................... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4nu,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14772,Testability,Test,Test,14772,...... Passed 1.84 sec; Start 451: cubeprop-esp; 148/185 Test #451: cubeprop-esp ..................... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14864,Testability,Test,Test,14864,.......... Passed 17.03 sec; Start 452: dft-smoke; 149/185 Test #452: dft-smoke ........................***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:14957,Testability,Test,Test,14957,...........***Failed 10.64 sec; Start 453: scf-hess1; 150/185 Test #453: scf-hess1 ........................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15048,Testability,Test,Test,15048,................ Passed 5.15 sec; Start 454: scf-hess2; 151/185 Test #454: scf-hess2 ........................ Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15152,Testability,Test,Test,15152,..... Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #50,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15246,Testability,Test,Test,15246,.... Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15346,Testability,Test,Test,15346,assed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 17,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15443,Testability,Test,Test,15443,d 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15549,Testability,Test,Test,15549,; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15654,Testability,Test,Test,15654,67: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15751,Testability,Test,Test,15751,tart 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15847,Testability,Test,Test,15847,rt 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15944,Testability,Test,Test,15944,75: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-ener,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16041,Testability,Test,Test,16041,inK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16136,Testability,Test,Test,16136,pl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16245,Testability,Test,Test,16245, 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16344,Testability,Test,Test,16344,; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16442,Testability,Test,Test,16442, 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16540,Testability,Test,Test,16540,"radient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16641,Testability,Test,Test,16641,"rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16746,Testability,Test,Test,16746,"rgy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 77",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16852,Testability,Test,Test,16852,"85 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16948,Testability,Test,Test,16948,"185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17040,Testability,Test,Test,17040," 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17133,Testability,Test,Test,17133,"4; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17231,Testability,Test,Test,17231,"x-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17330,Testability,Test,Test,17330,"thon-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17428,Testability,Test,Test,17428,"thon-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); dire",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17497,Testability,test,tests,17497,": python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17513,Testability,test,tests,17513,": python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17586,Testability,test,tests,17586,"ssed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17622,Testability,test,tests,17622,"atabases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17655,Testability,test,test,17655,"n-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17690,Testability,test,tests,17690,"ed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17723,Testability,test,tests,17723,"ema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17756,Testability,test,tests,17756,"son-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17791,Testability,test,tests,17791,"Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 tes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17823,Testability,test,tests,17823,"-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17855,Testability,test,test,17855,"514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17891,Testability,test,tests,17891,".... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17926,Testability,test,tests,17926,"ftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17958,Testability,test,tests,17958,"dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17991,Testability,test,tests,17991,". Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18024,Testability,test,test,18024,"pt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18057,Testability,test,test,18057,"........................ Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18096,Testability,test,test,18096,"ec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18137,Testability,test,test,18137,"524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); prope",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18171,Testability,test,test,18171,"...... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18204,Testability,test,tests,18204,"5: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18239,Testability,test,tests,18239," fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18273,Testability,test,test,18273,".***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18307,Testability,test,tests,18307,"dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18340,Testability,test,tests,18340,"ftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18374,Testability,test,test,18374,"Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18408,Testability,test,tests,18408,"r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18446,Testability,test,test,18446,"2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18477,Testability,test,tests,18477,"ed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18513,Testability,test,tests,18513,sts failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); st,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18548,Testability,test,test,18548,ummary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests);,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18584,Testability,test,tests,18584,tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests);,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18619,Testability,test,tests,18619, tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18653,Testability,test,tests,18653,test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18688,Testability,test,tests,18688,ests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18724,Testability,test,tests,18724,sts); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18756,Testability,test,tests,18756,ests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 -,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18789,Testability,test,test,18789,ests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18826,Testability,test,tests,18826,); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Fa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18860,Testability,test,tests,18860, cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18893,Testability,test,tests,18893,ts); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18925,Testability,test,tests,18925,ests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed);,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18960,Testability,test,tests,18960,s); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18996,Testability,test,tests,18996,; dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19029,Testability,test,test,19029, dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while runni,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19062,Testability,test,tests,19062, dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19094,Testability,test,tests,19094, test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19126,Testability,test,tests,19126,oc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Tem,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19167,Testability,test,tests,19167,"(1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-fail",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19203,Testability,test,tests,19203,"sts); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19241,Testability,test,tests,19241," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19277,Testability,test,tests,19277," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19314,Testability,test,tests,19314," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19350,Testability,test,tests,19350," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19393,Testability,test,tests,19393," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19429,Testability,test,tests,19429," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19464,Testability,test,tests,19464," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19506,Testability,test,tests,19506," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19544,Testability,test,tests,19544," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19579,Testability,test,tests,19579," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19616,Testability,test,tests,19616," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19647,Testability,test,test,19647," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19678,Testability,test,tests,19678," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19692,Testability,Test,Test,19692," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:19738,Testability,test,tests,19738," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:20059,Testability,test,tests,20059," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:20120,Testability,Test,Testing,20120," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:20147,Testability,log,log,20147," (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.94 sec*proc (185 tests); sapt = 2255.37 sec*proc (14 tests); scf = 2018.25 sec*proc (36 tests); smoketests = 1345.56 sec*proc (16 tests); stability = 14.22 sec*proc (3 tests); tdscf = 352.79 sec*proc (2 tests); tutorial = 24.08 sec*proc (4 tests); uhf = 3.31 sec*proc (1 test); x2c = 24.82 sec*proc (4 tests). Total Test time (real) = 7214.27 sec. The following tests FAILED:; 192 - dft-vv10 (Failed); 197 - dft-dens-cut (Failed); 210 - fsapt-terms (Failed); 213 - fsapt-ext-abc (Failed); 214 - fsapt-ext-abc2 (Failed); 215 - fsapt-ext-abc-au (Failed); 452 - dft-smoke (Failed); 525 - fsaptd-terms (Failed); 527 - dftd4-r2scan (Failed); Errors while running CTest; Output from these tests are in: /gpfs/alpine2/scratch/jslj23/chm205/psi4/build/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:494,Energy Efficiency,energy,energy,494,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:581,Energy Efficiency,energy,energy,581,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:670,Energy Efficiency,energy,energy,670,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:762,Energy Efficiency,energy,energy,762,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:848,Energy Efficiency,energy,energy,848,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:938,Energy Efficiency,energy,energy,938,"With `MP2/cc-PVDZ`, the discrepancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1026,Energy Efficiency,energy,energy,1026,"screpancies seem to be within 1 Hartree when Summit is compared to local runs. I ran the compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1112,Energy Efficiency,energy,energy,1112,"e compairisons for the 20 canonical amino acids (structures from `HF/6-31G*` geometry optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1199,Energy Efficiency,energy,energy,1199,"optimisation outputs). It takes anywhere from 10-30+ times longer on Summit even with the exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.57",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1288,Energy Efficiency,energy,energy,1288," exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1369,Energy Efficiency,energy,energy,1369,"puts.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1454,Energy Efficiency,energy,energy,1454,"wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.044321",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1537,Energy Efficiency,energy,energy,1537,"taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1629,Energy Efficiency,energy,energy,1629,"n: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1714,Energy Efficiency,energy,energy,1714,"ken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1799,Energy Efficiency,energy,energy,1799,"ime taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1886,Energy Efficiency,energy,energy,1886,"me taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1974,Energy Efficiency,energy,energy,1974," time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2061,Energy Efficiency,energy,energy,2061," time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine ener",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2146,Energy Efficiency,energy,energy,2146," time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine ener",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2261,Energy Efficiency,energy,energy,2261,"051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.896657411",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2348,Energy Efficiency,energy,energy,2348,"9 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hart",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2437,Energy Efficiency,energy,energy,2437,"seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2529,Energy Efficiency,energy,energy,2529,"ethionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hart",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2616,Energy Efficiency,energy,energy,2616,"enylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2708,Energy Efficiency,energy,energy,2708,"Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2795,Energy Efficiency,energy,energy,2795,"ine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2881,Energy Efficiency,energy,energy,2881,"ine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2969,Energy Efficiency,energy,energy,2969,"phan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3058,Energy Efficiency,energy,energy,3058,"ne energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3144,Energy Efficiency,energy,energy,3144," energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3229,Energy Efficiency,energy,energy,3229,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3318,Energy Efficiency,energy,energy,3318,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3410,Energy Efficiency,energy,energy,3410,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3496,Energy Efficiency,energy,energy,3496,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3582,Energy Efficiency,energy,energy,3582,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3670,Energy Efficiency,energy,energy,3670,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3758,Energy Efficiency,energy,energy,3758,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3845,Energy Efficiency,energy,energy,3845,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3929,Energy Efficiency,energy,energy,3929,"`. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141532/Summit_psi4_outputs.tar.gz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595
https://github.com/psi4/psi4/issues/3223#issuecomment-2429922482:173,Energy Efficiency,energy,energy,173,"There have been many issues in [PySCF ](https://github.com/pyscf/pyscf) with similar issues in that changing the number of threads results in significant changes in the SCF energy. The origin of these issues has always been an inconsistent set of OpenMP libraries, and my best guess is that that's also the case here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2429922482
https://github.com/psi4/psi4/pull/3226#issuecomment-2452051681:240,Modifiability,variab,variables,240,@tallakahath Please pull the branch and then commit the addition of `MBIS VALENCE WIDTHS` to the [glossary](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/glossary_psivariables.rst). Just follow the pattern of the other MBIS variables.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2452051681
https://github.com/psi4/psi4/pull/3226#issuecomment-2457640228:67,Energy Efficiency,CHARGE,CHARGES,67,@JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457640228
https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305:276,Availability,failure,failure,276,"> @JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?. It should be. We need one other reviewer, and then to troubleshoot the failing test... The failure is unrelated to this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305
https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305:69,Energy Efficiency,CHARGE,CHARGES,69,"> @JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?. It should be. We need one other reviewer, and then to troubleshoot the failing test... The failure is unrelated to this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305
https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305:264,Testability,test,test,264,"> @JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?. It should be. We need one other reviewer, and then to troubleshoot the failing test... The failure is unrelated to this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305
https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558:115,Deployability,update,updated,115,"This is not ok. The SCF class header `hf.h` states; ```; /// List of external potentials to add to Fock matrix and updated at every iteration; /// e.g. PCM potential; std::vector<SharedMatrix> external_potentials_;; ```. Indeed, if you look at the SCF driver, this array gets populated at every iteration; ```; if core.get_option('SCF', 'PCM'):; calc_type = core.PCM.CalcType.Total; if core.get_option(""PCM"", ""PCM_SCF_TYPE"") == ""SEPARATE"":; calc_type = core.PCM.CalcType.NucAndEle; Dt = self.Da().clone(); Dt.add(self.Db()); upcm, Vpcm = self.get_PCM().compute_PCM_terms(Dt, calc_type); SCFE += upcm; self.push_back_external_potential(Vpcm); ```; which is why it is cleared at every iteration. The right way to do this is to add a definition of a persistent external potential, which gets summed in at every iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558
https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558:666,Usability,clear,cleared,666,"This is not ok. The SCF class header `hf.h` states; ```; /// List of external potentials to add to Fock matrix and updated at every iteration; /// e.g. PCM potential; std::vector<SharedMatrix> external_potentials_;; ```. Indeed, if you look at the SCF driver, this array gets populated at every iteration; ```; if core.get_option('SCF', 'PCM'):; calc_type = core.PCM.CalcType.Total; if core.get_option(""PCM"", ""PCM_SCF_TYPE"") == ""SEPARATE"":; calc_type = core.PCM.CalcType.NucAndEle; Dt = self.Da().clone(); Dt.add(self.Db()); upcm, Vpcm = self.get_PCM().compute_PCM_terms(Dt, calc_type); SCFE += upcm; self.push_back_external_potential(Vpcm); ```; which is why it is cleared at every iteration. The right way to do this is to add a definition of a persistent external potential, which gets summed in at every iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391567558
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:738,Energy Efficiency,charge,charges,738,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:874,Energy Efficiency,charge,charge,874,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:218,Modifiability,variab,variable,218,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:785,Modifiability,extend,extend,785,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:111,Usability,simpl,simplest,111,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:441,Usability,clear,cleared,441,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920
https://github.com/psi4/psi4/pull/3231#issuecomment-2408284190:136,Safety,detect,detection,136,I made a change that should have no effect except poking the CI. I want to check that it now pulls v7 from c-f and then fails the cmake detection b/c it wants v6.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231#issuecomment-2408284190
https://github.com/psi4/psi4/issues/3235#issuecomment-2437600460:559,Usability,simpl,simplest,559,"Hello Evgeny. `Could it be interesting for the CASINO community?`. Co-author of [TREXIO: A File Format and Library for Quantum Chemistry](https://arxiv.org/abs/2302.14793) Pablo López Rıós is one of [the Casino developers](https://vallico.net/casinoqmc/how-to-cite/), I think he can give a comprehensive answer, especially since there are other formats for multi-determinant data in CASINO i.e mdet.casl and [cmdet.casl](https://journals.aps.org/pre/abstract/10.1103/PhysRevE.89.023304) which were developed by him personally. I have given a description only simplest multideterminant format in CASINO.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235#issuecomment-2437600460
https://github.com/psi4/psi4/issues/3236#issuecomment-2444497182:18,Deployability,update,update,18,"1. Thanks for the update! What is the other library that has those capabilities? I can look into this, sounds helpful.; 2. I'm using Psi4 version 1.9.1. Should I be updating it to something else for more stability analysis capabilities?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444497182
https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042:310,Availability,error,error,310,"1. The key phrase here is _would give us_. The capabilities aren't there yet. This is GauXC. I know this was a feature they desired, but I don't know how close it is to being complete. My guess is that things are, as always, not going as optimistically as they would like.; 2. Psi4 1.9.1 should not raise this error. You're saying that the input; ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check', 'basis_guess': 'true'}); mol = psi4.geometry(""""""; symmetry c1; 0 3; O; """""");; psi4.energy('PBE/6-31G', molecule=mol); ```; gave you `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`? Can you double-check and post the output file?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042
https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042:517,Energy Efficiency,energy,energy,517,"1. The key phrase here is _would give us_. The capabilities aren't there yet. This is GauXC. I know this was a feature they desired, but I don't know how close it is to being complete. My guess is that things are, as always, not going as optimistically as they would like.; 2. Psi4 1.9.1 should not raise this error. You're saying that the input; ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check', 'basis_guess': 'true'}); mol = psi4.geometry(""""""; symmetry c1; 0 3; O; """""");; psi4.energy('PBE/6-31G', molecule=mol); ```; gave you `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`? Can you double-check and post the output file?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042
https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042:597,Security,Validat,ValidationError,597,"1. The key phrase here is _would give us_. The capabilities aren't there yet. This is GauXC. I know this was a feature they desired, but I don't know how close it is to being complete. My guess is that things are, as always, not going as optimistically as they would like.; 2. Psi4 1.9.1 should not raise this error. You're saying that the input; ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check', 'basis_guess': 'true'}); mol = psi4.geometry(""""""; symmetry c1; 0 3; O; """""");; psi4.energy('PBE/6-31G', molecule=mol); ```; gave you `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`? Can you double-check and post the output file?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042
https://github.com/psi4/psi4/issues/3236#issuecomment-2445337538:72,Testability,test,test,72,"1. Got it - thank you!; 2. I think I got what the issue is. I had a few test scripts, and the one that failed was actually using `'reference': 'rhf'`, which is not implemented, is that correct? Thanks for the help. This is the output file ; [test_rhf.txt](https://github.com/user-attachments/files/17563195/test_rhf.txt). . To confirm, actually `wB97X-D3BJ` stability analysis should be implemented as well? Does the stability analysis for GGA include hybrids?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2445337538
https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790:15,Availability,ping,ping,15,"thanks for the ping @JonathonMisiewicz; yes, there are definitely too many irons in the fire, since I had already forgotten about this whole shenanigan. [GauXC](https://github.com/wavefunction91/GauXC) is definitely where things like the orbital and geometric Hessian matrix elements should be computed, since the code gets very complicated for meta-GGAs and it also is completely independent of the form of the atomic-orbital basis set, meaning that the same code will not only work for the 40+ Gaussian-basis DFT programs but also for programs using Slater-type orbitals or numerical atomic orbitals. Opened up https://github.com/wavefunction91/GauXC/issues/139 for tracking.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790
