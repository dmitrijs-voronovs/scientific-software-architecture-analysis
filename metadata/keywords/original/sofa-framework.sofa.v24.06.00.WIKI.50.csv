id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:5879,Usability,Clear,Clear,5879,"d . ◆ map_modifyDialogOpened. std::map< void*, QTreeWidgetItem* > sofa::gui::qt::QSofaListView::map_modifyDialogOpened. protected . ◆ map_modifyObjectWindow. std::map< void*, QDialog* > sofa::gui::qt::QSofaListView::map_modifyObjectWindow. protected . ◆ object_. ObjectModel sofa::gui::qt::QSofaListView::object_. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::QSofaListView::propertyWidget. protected . Constructor details. ◆ QSofaListView(). sofa::gui::qt::QSofaListView::QSofaListView ; (; const SofaListViewAttribute & ; attribute, . QWidget * ; parent = nullptr, . const char * ; name = nullptr, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). ◆ ~QSofaListView(). sofa::gui::qt::QSofaListView::~QSofaListView ; (; ). override . Function details. ◆ ActivateNode. void sofa::gui::qt::QSofaListView::ActivateNode ; (; ). protectedslot . ◆ addInPropertyWidget(). void sofa::gui::qt::QSofaListView::addInPropertyWidget ; (; QTreeWidgetItem * ; item, . bool ; clear . ). ◆ Clear(). void sofa::gui::qt::QSofaListView::Clear ; (; sofa::simulation::Node * ; rootNode). ◆ Close. void sofa::gui::qt::QSofaListView::Close ; (; ). signal . ◆ CloseAllDialogs. void sofa::gui::qt::QSofaListView::CloseAllDialogs ; (; ). slot . ◆ collapseNode [1/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; ). protectedslot . ◆ collapseNode() [2/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; QTreeWidgetItem * ; item). protected . ◆ collectNodesToChange(). std::list<core::objectmodel::BaseNode*> sofa::gui::qt::QSofaListView::collectNodesToChange ; (; core::objectmodel::BaseNode * ; node). protected . ◆ contextMenuEvent(). void sofa::gui::qt::QSofaListView::contextMenuEvent ; (; QContextMenuEvent * ; event). override . ◆ copyFilePathToClipBoard. void sofa::gui::qt::QSofaListView::copyFilePathToClipBoard ; (; ). protectedslot . ◆ dataModified. void sofa::gui::qt::QSofaListView::dataModified ; (; QString ; ). signal . ◆ DeactivateNode. void sofa::gui::qt::QSofaListView::D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:5923,Usability,Clear,Clear,5923,"TreeWidgetItem* > sofa::gui::qt::QSofaListView::map_modifyDialogOpened. protected . ◆ map_modifyObjectWindow. std::map< void*, QDialog* > sofa::gui::qt::QSofaListView::map_modifyObjectWindow. protected . ◆ object_. ObjectModel sofa::gui::qt::QSofaListView::object_. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::QSofaListView::propertyWidget. protected . Constructor details. ◆ QSofaListView(). sofa::gui::qt::QSofaListView::QSofaListView ; (; const SofaListViewAttribute & ; attribute, . QWidget * ; parent = nullptr, . const char * ; name = nullptr, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). ◆ ~QSofaListView(). sofa::gui::qt::QSofaListView::~QSofaListView ; (; ). override . Function details. ◆ ActivateNode. void sofa::gui::qt::QSofaListView::ActivateNode ; (; ). protectedslot . ◆ addInPropertyWidget(). void sofa::gui::qt::QSofaListView::addInPropertyWidget ; (; QTreeWidgetItem * ; item, . bool ; clear . ). ◆ Clear(). void sofa::gui::qt::QSofaListView::Clear ; (; sofa::simulation::Node * ; rootNode). ◆ Close. void sofa::gui::qt::QSofaListView::Close ; (; ). signal . ◆ CloseAllDialogs. void sofa::gui::qt::QSofaListView::CloseAllDialogs ; (; ). slot . ◆ collapseNode [1/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; ). protectedslot . ◆ collapseNode() [2/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; QTreeWidgetItem * ; item). protected . ◆ collectNodesToChange(). std::list<core::objectmodel::BaseNode*> sofa::gui::qt::QSofaListView::collectNodesToChange ; (; core::objectmodel::BaseNode * ; node). protected . ◆ contextMenuEvent(). void sofa::gui::qt::QSofaListView::contextMenuEvent ; (; QContextMenuEvent * ; event). override . ◆ copyFilePathToClipBoard. void sofa::gui::qt::QSofaListView::copyFilePathToClipBoard ; (; ). protectedslot . ◆ dataModified. void sofa::gui::qt::QSofaListView::dataModified ; (; QString ; ). signal . ◆ DeactivateNode. void sofa::gui::qt::QSofaListView::DeactivateNode ; (; ). protectedslot . ◆ expandN",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view_1_1_lock_context_manager-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSofaListView::LockContextManager Member List . This is the complete list of members for sofa::gui::qt::QSofaListView::LockContextManager, including all inherited members. LockContextManager(QSofaListView *view, bool isLocked)sofa::gui::qt::QSofaListView::LockContextManagerinline; selfsofa::gui::qt::QSofaListView::LockContextManager; statesofa::gui::qt::QSofaListView::LockContextManager; ~LockContextManager()sofa::gui::qt::QSofaListView::LockContextManagerinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view_1_1_lock_context_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view_1_1_lock_context_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget-members.html:232,Modifiability,inherit,inherited,232,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSofaStatWidget Member List . This is the complete list of members for sofa::gui::qt::QSofaStatWidget, including all inherited members. addCollisionModelsStat(const sofa::type::vector< sofa::core::CollisionModel * > &v)sofa::gui::qt::QSofaStatWidgetprotected; addSummary()sofa::gui::qt::QSofaStatWidgetprotected; CreateStats(sofa::simulation::Node *root)sofa::gui::qt::QSofaStatWidget; items_statssofa::gui::qt::QSofaStatWidgetprotected; QSofaStatWidget(QWidget *parent)sofa::gui::qt::QSofaStatWidget; statsCountersofa::gui::qt::QSofaStatWidgetprotected; statsLabelsofa::gui::qt::QSofaStatWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html:317,Modifiability,Inherit,Inheritance,317,"﻿. SOFA API: sofa::gui::qt::QSofaStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QSofaStatWidget Class Reference . #include <QSofaStatWidget.h>. Inheritance diagram for sofa::gui::qt::QSofaStatWidget:. [legend]. Protected Attributes; QLabel * statsLabel;  ; QTreeWidget * statsCounter;  ; std::vector< std::pair< core::objectmodel::Base *, QTreeWidgetItem * > > items_stats;  . Public Member Functions;  QSofaStatWidget (QWidget *parent);  ; void CreateStats (sofa::simulation::Node *root);  . Protected Member Functions; void addSummary ();  ; void addCollisionModelsStat (const sofa::type::vector< sofa::core::CollisionModel * > &v);  . Attribute details. ◆ items_stats. std::vector<std::pair<core::objectmodel::Base*, QTreeWidgetItem*> > sofa::gui::qt::QSofaStatWidget::items_stats. protected . ◆ statsCounter. QTreeWidget* sofa::gui::qt::QSofaStatWidget::statsCounter. protected . ◆ statsLabel. QLabel* sofa::gui::qt::QSofaStatWidget::statsLabel. protected . Constructor details. ◆ QSofaStatWidget(). sofa::gui::qt::QSofaStatWidget::QSofaStatWidget ; (; QWidget * ; parent). Function details. ◆ addCollisionModelsStat(). void sofa::gui::qt::QSofaStatWidget::addCollisionModelsStat ; (; const sofa::type::vector< sofa::core::CollisionModel * > & ; v). protected . ◆ addSummary(). void sofa::gui::qt::QSofaStatWidget::addSummary ; (; ). protected . ◆ CreateStats(). void sofa::gui::qt::QSofaStatWidget::CreateStats ; (; sofa::simulation::Node * ; root). sofaguiqtQSofaStatWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QStartNavigationOperation Member List . This is the complete list of members for sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:316,Modifiability,config,configure,316," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:511,Modifiability,config,configure,511," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:600,Modifiability,config,configurePerformer,600," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:641,Performance,perform,performer,641," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:1535,Performance,perform,performersofa,1535," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1343,Deployability,release,released,1343,"::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:284,Modifiability,Inherit,Inheritance,284,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:425,Modifiability,config,configure,425,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:557,Modifiability,inherit,inherited,557,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:709,Modifiability,inherit,inherited,709,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:827,Modifiability,inherit,inherited,827,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:989,Modifiability,config,configure,989,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1607,Modifiability,Inherit,Inherited,1607," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1645,Modifiability,inherit,inherited,1645," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1782,Modifiability,inherit,inherited,1782," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1933,Modifiability,inherit,inherited,1933," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2128,Modifiability,inherit,inherited,2128," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2261,Modifiability,inherit,inherited,2261," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2386,Modifiability,inherit,inherited,2386," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2508,Modifiability,config,configurePerformer,2508," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2613,Modifiability,inherit,inherited,2613," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2836,Modifiability,config,configure,2836,"void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2896,Modifiability,config,configure,2896,"void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1473,Performance,perform,performer,1473,"ent::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerfo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1712,Performance,perform,performer,1712," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1746,Performance,perform,performer,1746," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:2550,Performance,perform,performer,2550," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSOFAApplication Member List . This is the complete list of members for sofa::gui::qt::QSOFAApplication, including all inherited members. event(QEvent *event) overridesofa::gui::qt::QSOFAApplicationinlineprotected; QSOFAApplication(int &argc, char **argv)sofa::gui::qt::QSOFAApplicationinline; translate(const char *context, const char *key, const char *disambiguation, QCoreApplication::Encoding encoding=QCoreApplication::UnicodeUTF8, int n=-1)sofa::gui::qt::QSOFAApplicationinlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html:371,Modifiability,Inherit,Inheritance,371,"﻿. SOFA API: sofa::gui::qt::QSOFAApplication Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QSOFAApplication Class Reference . Custom QApplication class handling FileOpen events for MacOS. ; More... Inheritance diagram for sofa::gui::qt::QSOFAApplication:. [legend]; Detailed Description; Custom QApplication class handling FileOpen events for MacOS. . Public Member Functions;  QSOFAApplication (int &argc, char **argv);  . Static Public Member Functions; static QString translate (const char *context, const char *key, const char *disambiguation, QCoreApplication::Encoding encoding=QCoreApplication::UnicodeUTF8, int n=-1);  . Protected Member Functions; bool event (QEvent *event) override;  . Constructor details. ◆ QSOFAApplication(). sofa::gui::qt::QSOFAApplication::QSOFAApplication ; (; int & ; argc, . char ** ; argv . ). inline . Function details. ◆ event(). bool sofa::gui::qt::QSOFAApplication::event ; (; QEvent * ; event). inlineoverrideprotected . ◆ translate(). static QString sofa::gui::qt::QSOFAApplication::translate ; (; const char * ; context, . const char * ; key, . const char * ; disambiguation, . QCoreApplication::Encoding ; encoding = QCoreApplication::UnicodeUTF8, . int ; n = -1 . ). inlinestatic . sofaguiqtQSOFAApplication; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableModelUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableModelUpdater, including all inherited members. data(const QModelIndex &index, int role) const overridesofa::gui::qt::QTableModelUpdater; flags(const QModelIndex &) const overridesofa::gui::qt::QTableModelUpdater; QTableModelUpdater(int numRows, int numCols, QWidget *parent=nullptr, const char *=nullptr)sofa::gui::qt::QTableModelUpdater; resizeTableH(int number)sofa::gui::qt::QTableModelUpdaterslot; resizeTableV(int number)sofa::gui::qt::QTableModelUpdaterslot; setReadOnly(const bool isReadOnly)sofa::gui::qt::QTableModelUpdater. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html:292,Modifiability,Inherit,Inheritance,292,"﻿. SOFA API: sofa::gui::qt::QTableModelUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableModelUpdater Class Reference . #include <QModelViewTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableModelUpdater:. [legend]. Public Member Functions;  QTableModelUpdater (int numRows, int numCols, QWidget *parent=nullptr, const char *=nullptr);  ; Qt::ItemFlags flags (const QModelIndex &) const override;  ; QVariant data (const QModelIndex &index, int role) const override;  ; void setReadOnly (const bool isReadOnly);  . Public Slots; void resizeTableV (int number);  ; void resizeTableH (int number);  . Constructor details. ◆ QTableModelUpdater(). sofa::gui::qt::QTableModelUpdater::QTableModelUpdater ; (; int ; numRows, . int ; numCols, . QWidget * ; parent = nullptr, . const char * ; = nullptr . ). Function details. ◆ data(). QVariant sofa::gui::qt::QTableModelUpdater::data ; (; const QModelIndex & ; index, . int ; role . ); const. override . ◆ flags(). Qt::ItemFlags sofa::gui::qt::QTableModelUpdater::flags ; (; const QModelIndex & ; ); const. override . ◆ resizeTableH. void sofa::gui::qt::QTableModelUpdater::resizeTableH ; (; int ; number). slot . ◆ resizeTableV. void sofa::gui::qt::QTableModelUpdater::resizeTableV ; (; int ; number). slot . ◆ setReadOnly(). void sofa::gui::qt::QTableModelUpdater::setReadOnly ; (; const bool ; isReadOnly). sofaguiqtQTableModelUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableUpdater, including all inherited members. QTableUpdater(int numRows, int numCols, QWidget *parent=0, const char *name=0)sofa::gui::qt::QTableUpdaterinline; resizeTableH(int number)sofa::gui::qt::QTableUpdaterinlineslot; resizeTableV(int number)sofa::gui::qt::QTableUpdaterinlineslot; setDisplayed(bool b)sofa::gui::qt::QTableUpdaterinlineslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html:273,Modifiability,Inherit,Inheritance,273,"﻿. SOFA API: sofa::gui::qt::QTableUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableUpdater Class Reference . #include <QTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableUpdater:. [legend]. Public Member Functions;  QTableUpdater (int numRows, int numCols, QWidget *parent=0, const char *name=0);  . Public Slots; void setDisplayed (bool b);  ; void resizeTableV (int number);  ; void resizeTableH (int number);  . Constructor details. ◆ QTableUpdater(). sofa::gui::qt::QTableUpdater::QTableUpdater ; (; int ; numRows, . int ; numCols, . QWidget * ; parent = 0, . const char * ; name = 0 . ). inline . Function details. ◆ resizeTableH. void sofa::gui::qt::QTableUpdater::resizeTableH ; (; int ; number). inlineslot . ◆ resizeTableV. void sofa::gui::qt::QTableUpdater::resizeTableV ; (; int ; number). inlineslot . ◆ setDisplayed. void sofa::gui::qt::QTableUpdater::setDisplayed ; (; bool ; b). inlineslot . sofaguiqtQTableUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableViewUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableViewUpdater, including all inherited members. QTableViewUpdater(QWidget *parent=nullptr)sofa::gui::qt::QTableViewUpdater; setDisplayed(bool b)sofa::gui::qt::QTableViewUpdaterslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html:290,Modifiability,Inherit,Inheritance,290,﻿. SOFA API: sofa::gui::qt::QTableViewUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableViewUpdater Class Reference . #include <QModelViewTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableViewUpdater:. [legend]. Public Member Functions;  QTableViewUpdater (QWidget *parent=nullptr);  . Public Slots; void setDisplayed (bool b);  . Constructor details. ◆ QTableViewUpdater(). sofa::gui::qt::QTableViewUpdater::QTableViewUpdater ; (; QWidget * ; parent = nullptr). Function details. ◆ setDisplayed. void sofa::gui::qt::QTableViewUpdater::setDisplayed ; (; bool ; b). slot . sofaguiqtQTableViewUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:1889,Deployability,Update,UpdateDatas,1889,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:1948,Deployability,update,updateDataValue,1948,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:2009,Deployability,Update,UpdateDataWidgets,2009,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:2074,Deployability,update,updateWidgetValue,2074,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTabulationModifyObject Member List . This is the complete list of members for sofa::gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:1261,Deployability,Update,UpdateDatas,1261,"lationModifyObject.h>. Inheritance diagram for sofa::gui::qt::QTabulationModifyObject:. [legend]. Protected Attributes; core::objectmodel::Base * object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::object. protected . ◆ pixelMaxSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelMaxSize. protected . ◆ pixelSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelSize. protected . ◆ size. unsigned int sofa::gui::qt::QTabulationModifyObject::size. protected . Constructor details. ◆ QTabulation",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:1285,Deployability,Update,UpdateDataWidgets,1285,"lationModifyObject.h>. Inheritance diagram for sofa::gui::qt::QTabulationModifyObject:. [legend]. Protected Attributes; core::objectmodel::Base * object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::object. protected . ◆ pixelMaxSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelMaxSize. protected . ◆ pixelSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelSize. protected . ◆ size. unsigned int sofa::gui::qt::QTabulationModifyObject::size. protected . Constructor details. ◆ QTabulation",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:1438,Deployability,update,updateDataValue,1438," object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::object. protected . ◆ pixelMaxSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelMaxSize. protected . ◆ pixelSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelSize. protected . ◆ size. unsigned int sofa::gui::qt::QTabulationModifyObject::size. protected . Constructor details. ◆ QTabulationModifyObject(). sofa::gui::qt::QTabulationModifyObject::QTabulationModifyObject ; (; QWidget * ; parent, . core::objectmodel::Base * ; object, . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:1466,Deployability,update,updateWidgetValue,1466," object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::object. protected . ◆ pixelMaxSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelMaxSize. protected . ◆ pixelSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelSize. protected . ◆ size. unsigned int sofa::gui::qt::QTabulationModifyObject::size. protected . Constructor details. ◆ QTabulationModifyObject(). sofa::gui::qt::QTabulationModifyObject::QTabulationModifyObject ; (; QWidget * ; parent, . core::objectmodel::Base * ; object, . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4023,Deployability,Update,UpdateDatas,4023," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4081,Deployability,Update,UpdateDatas,4081," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4112,Deployability,update,updateDataValue,4112," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4174,Deployability,update,updateDataValue,4174," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4207,Deployability,Update,UpdateDataWidgets,4207," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4271,Deployability,Update,UpdateDataWidgets,4271," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4308,Deployability,update,updateWidgetValue,4308," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:4372,Deployability,update,updateWidgetValue,4372," ; idx = 1 . ). Function details. ◆ addData(). void sofa::gui::qt::QTabulationModifyObject::addData ; (; sofa::core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). ◆ addLink(). void sofa::gui::qt::QTabulationModifyObject::addLink ; (; sofa::core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). ◆ addStretch(). void sofa::gui::qt::QTabulationModifyObject::addStretch ; (; ). ◆ dataValueChanged. void sofa::gui::qt::QTabulationModifyObject::dataValueChanged ; (; QString ; dataValue). slot . ◆ externalWidgetAddition(). void sofa::gui::qt::QTabulationModifyObject::externalWidgetAddition ; (; int ; num). inline . ◆ getDataModifiedString(). QString sofa::gui::qt::QTabulationModifyObject::getDataModifiedString ; (; ); const. ◆ getIndex(). unsigned int sofa::gui::qt::QTabulationModifyObject::getIndex ; (; ); const. inline . ◆ isDirty(). bool sofa::gui::qt::QTabulationModifyObject::isDirty ; (; ); const. ◆ isEmpty(). bool sofa::gui::qt::QTabulationModifyObject::isEmpty ; (; ); const. ◆ isFull(). bool sofa::gui::qt::QTabulationModifyObject::isFull ; (; ); const. ◆ nodeNameModification. void sofa::gui::qt::QTabulationModifyObject::nodeNameModification ; (; simulation::Node * ; ). signal . ◆ setFull(). void sofa::gui::qt::QTabulationModifyObject::setFull ; (; ). inline . ◆ setTabDirty. void sofa::gui::qt::QTabulationModifyObject::setTabDirty ; (; bool ; b = true). slot . ◆ TabDirty. void sofa::gui::qt::QTabulationModifyObject::TabDirty ; (; bool ; ). signal . ◆ UpdateDatas. void sofa::gui::qt::QTabulationModifyObject::UpdateDatas ; (; ). signal . ◆ updateDataValue. void sofa::gui::qt::QTabulationModifyObject::updateDataValue ; (; ). slot . ◆ UpdateDataWidgets. void sofa::gui::qt::QTabulationModifyObject::UpdateDataWidgets ; (; ). signal . ◆ updateWidgetValue. void sofa::gui::qt::QTabulationModifyObject::updateWidgetValue ; (; ). slot . sofaguiqtQTabulationModifyObject; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:338,Modifiability,Inherit,Inheritance,338,"﻿. SOFA API: sofa::gui::qt::QTabulationModifyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QTabulationModifyObject Class Reference . #include <QTabulationModifyObject.h>. Inheritance diagram for sofa::gui::qt::QTabulationModifyObject:. [legend]. Protected Attributes; core::objectmodel::Base * object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTopologyOperation Member List . This is the complete list of members for sofa::gui::qt::QTopologyOperation, including all inherited members. advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:361,Modifiability,config,configure,361," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:518,Modifiability,config,configure,518," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:640,Modifiability,config,configurePerformer,640," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:681,Performance,perform,performer,681," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:1898,Performance,perform,performersofa,1898,TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperation()sofa::gui::qt::QTopologyOperation; scalesofa::gui::common::TopologyOperationprotected; scaleSlidersofa::gui::qt::QTopologyOperationprotected; scaleValuesofa::gui::qt::QTopologyOperationprotected; setEnableBox(int i)sofa::gui::qt::QTopologyOperationslot; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicMesh(bool v)sofa::gui::common::TopologyOperationinline; start() overridesofa::gui::common::TopologyOperationvirtual; topologicalOperationsofa::gui::common::TopologyOperationprotected; TopologyOperation()sofa::gui::common::TopologyOperationinline; volumicMeshsofa::gui::common::TopologyOperationprotected; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2008,Deployability,release,released,2008,"on::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:310,Modifiability,Inherit,Inheritance,310,"﻿. SOFA API: sofa::gui::qt::QTopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:598,Modifiability,inherit,inherited,598,"﻿. SOFA API: sofa::gui::qt::QTopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:760,Modifiability,inherit,inherited,760,"﻿. SOFA API: sofa::gui::qt::QTopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:1110,Modifiability,config,configure,1110,"tions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:1212,Modifiability,inherit,inherited,1212,"tions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:1696,Modifiability,inherit,inherited,1696,"on::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:1858,Modifiability,config,configure,1858,"on::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2256,Modifiability,config,configurePerformer,2256,"herited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2459,Modifiability,Inherit,Inherited,2459,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2497,Modifiability,inherit,inherited,2497,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2644,Modifiability,inherit,inherited,2644,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2770,Modifiability,inherit,inherited,2770,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:3538,Modifiability,config,configure,3538,"nableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUTTON ; b . ). inlineoverridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ getScale(). double sofa::gui::qt::QTopologyOperation::getScale ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getTopologicalOperation(). int sofa::gui::qt::QTopologyOperation::getTopologicalOperation ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getVolumicMesh(). bool sofa::gui::qt::QTopologyOperation::getVolumicMesh ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ setEnableBox. void sofa::gui::qt::QTopologyOperation::setEnableBox ; (; int ; i). slot . sofaguiqtQTopologyOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:3591,Modifiability,config,configure,3591,"nableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUTTON ; b . ). inlineoverridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ getScale(). double sofa::gui::qt::QTopologyOperation::getScale ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getTopologicalOperation(). int sofa::gui::qt::QTopologyOperation::getTopologicalOperation ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getVolumicMesh(). bool sofa::gui::qt::QTopologyOperation::getVolumicMesh ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ setEnableBox. void sofa::gui::qt::QTopologyOperation::setEnableBox ; (; int ; i). slot . sofaguiqtQTopologyOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2186,Performance,perform,performer,2186,"herited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2298,Performance,perform,performer,2298,"herited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2564,Performance,perform,performer,2564,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:2598,Performance,perform,performer,2598,"h (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTransformationWidget Member List . This is the complete list of members for sofa::gui::qt::QTransformationWidget, including all inherited members. applyTransformation(simulation::Node *node)sofa::gui::qt::QTransformationWidget; changeValue()sofa::gui::qt::QTransformationWidgetinlineslot; getNumWidgets() constsofa::gui::qt::QTransformationWidgetinline; isDefaultValues() constsofa::gui::qt::QTransformationWidget; numWidgets_sofa::gui::qt::QTransformationWidgetprotected; QTransformationWidget(QWidget *parent, QString name)sofa::gui::qt::QTransformationWidget; rotationsofa::gui::qt::QTransformationWidgetprotected; scalesofa::gui::qt::QTransformationWidgetprotected; setDefaultValues()sofa::gui::qt::QTransformationWidget; TransformationDirty(bool)sofa::gui::qt::QTransformationWidgetsignal; translationsofa::gui::qt::QTransformationWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html:332,Modifiability,Inherit,Inheritance,332,"﻿. SOFA API: sofa::gui::qt::QTransformationWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QTransformationWidget Class Reference . #include <QTransformationWidget.h>. Inheritance diagram for sofa::gui::qt::QTransformationWidget:. [legend]. Protected Attributes; const unsigned int numWidgets_;  ; WDoubleLineEdit * translation [3];  ; WDoubleLineEdit * rotation [3];  ; WDoubleLineEdit * scale [3];  . Public Member Functions;  QTransformationWidget (QWidget *parent, QString name);  ; unsigned int getNumWidgets () const;  ; void setDefaultValues ();  ; bool isDefaultValues () const;  ; void applyTransformation (simulation::Node *node);  . Signals; void TransformationDirty (bool);  . Public Slots; void changeValue ();  . Attribute details. ◆ numWidgets_. const unsigned int sofa::gui::qt::QTransformationWidget::numWidgets_. protected . ◆ rotation. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::rotation[3]. protected . ◆ scale. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::scale[3]. protected . ◆ translation. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::translation[3]. protected . Constructor details. ◆ QTransformationWidget(). sofa::gui::qt::QTransformationWidget::QTransformationWidget ; (; QWidget * ; parent, . QString ; name . ). Function details. ◆ applyTransformation(). void sofa::gui::qt::QTransformationWidget::applyTransformation ; (; simulation::Node * ; node). ◆ changeValue. void sofa::gui::qt::QTransformationWidget::changeValue ; (; ). inlineslot . ◆ getNumWidgets(). unsigned int sofa::gui::qt::QTransformationWidget::getNumWidgets ; (; ); const. inline . ◆ isDefaultValues(). bool sofa::gui::qt::QTransformationWidget::isDefaultValues ; (; ); const. ◆ setDefaultValues(). void sofa::gui::qt::QTransformationWidget::setDefaultValues ; (; ). ◆ TransformationDirty. void sofa::gui::q",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QVisitorControlPanel Member List . This is the complete list of members for sofa::gui::qt::QVisitorControlPanel, including all inherited members. activateTraceStateVectors(bool)sofa::gui::qt::QVisitorControlPanelslot; changeFirstIndex(int)sofa::gui::qt::QVisitorControlPanel; changeFirstIndex()sofa::gui::qt::QVisitorControlPanelslot; changeRange(int)sofa::gui::qt::QVisitorControlPanel; changeRange()sofa::gui::qt::QVisitorControlPanelslot; clearGraph()sofa::gui::qt::QVisitorControlPanelsignal; filterResults()sofa::gui::qt::QVisitorControlPanelslot; focusOn(QString)sofa::gui::qt::QVisitorControlPanelsignal; QVisitorControlPanel(QWidget *parent)sofa::gui::qt::QVisitorControlPanel; spinIndexsofa::gui::qt::QVisitorControlPanelprotected; spinRangesofa::gui::qt::QVisitorControlPanelprotected; textFiltersofa::gui::qt::QVisitorControlPanelprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html:557,Usability,clear,clearGraph,557,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QVisitorControlPanel Member List . This is the complete list of members for sofa::gui::qt::QVisitorControlPanel, including all inherited members. activateTraceStateVectors(bool)sofa::gui::qt::QVisitorControlPanelslot; changeFirstIndex(int)sofa::gui::qt::QVisitorControlPanel; changeFirstIndex()sofa::gui::qt::QVisitorControlPanelslot; changeRange(int)sofa::gui::qt::QVisitorControlPanel; changeRange()sofa::gui::qt::QVisitorControlPanelslot; clearGraph()sofa::gui::qt::QVisitorControlPanelsignal; filterResults()sofa::gui::qt::QVisitorControlPanelslot; focusOn(QString)sofa::gui::qt::QVisitorControlPanelsignal; QVisitorControlPanel(QWidget *parent)sofa::gui::qt::QVisitorControlPanel; spinIndexsofa::gui::qt::QVisitorControlPanelprotected; spinRangesofa::gui::qt::QVisitorControlPanelprotected; textFiltersofa::gui::qt::QVisitorControlPanelprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:329,Modifiability,Inherit,Inheritance,329,﻿. SOFA API: sofa::gui::qt::QVisitorControlPanel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorContr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:683,Usability,clear,clearGraph,683,﻿. SOFA API: sofa::gui::qt::QVisitorControlPanel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorContr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:1787,Usability,clear,clearGraph,1787,. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorControlPanel::focusOn ; (; QString ; ). signal . sofaguiqtQVisitorControlPanel; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:1841,Usability,clear,clearGraph,1841,. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorControlPanel::focusOn ; (; QString ; ). signal . sofaguiqtQVisitorControlPanel; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html:2629,Deployability,update,updateDataValue,2629,"dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::RadioDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html:2677,Deployability,update,updateVisibility,2677,"dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::RadioDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html:2722,Deployability,update,updateWidgetValue,2722,"dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::RadioDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html:232,Modifiability,inherit,inherited,232,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::RadioDataWidget Member List . This is the complete list of members for sofa::gui::qt::RadioDataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; buttonListsofa::gui::qt::RadioDataWidgetprotected; buttonModesofa::gui::qt::RadioDataWidgetprotected; comboListsofa::gui::qt::RadioDataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::RadioDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2188,Deployability,update,updateVisibility,2188,"d perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2633,Deployability,update,update,2633,"ata< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2736,Deployability,update,update,2736," > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:3452,Deployability,update,updateDataValue,3452,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:3480,Deployability,update,updateWidgetValue,3480,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4490,Deployability,update,update,4490," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4935,Deployability,update,update,4935," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:350,Modifiability,Inherit,Inheritance,350,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:583,Modifiability,inherit,inherited,583,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:698,Modifiability,inherit,inherited,698,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:1356,Modifiability,config,configure,1356,"rt. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:1452,Modifiability,inherit,inherited,1452,"aseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:1856,Modifiability,inherit,inherited,1856,"aseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2802,Modifiability,Inherit,Inherited,2802,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2853,Modifiability,inherit,inherited,2853,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:3026,Modifiability,inherit,inherited,3026,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:3238,Modifiability,inherit,inherited,3238,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:3405,Modifiability,inherit,inherited,3405,";  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4725,Modifiability,config,configure,4725," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:1212,Performance,perform,perform,1212,"s simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4300,Performance,perform,perform,4300," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2103,Security,access,accessor,2103,"aseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:297,Usability,Simpl,SimpleDataWidget,297,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:9474,Deployability,update,update,9474,"tatic; setSizeH(int _valH)sofa::gui::qt::RealGUIinlinevirtualslot; setSizeW(int _valW)sofa::gui::qt::RealGUIinlinevirtualslot; setSleepingNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; setTitle(std::string windowTitle)sofa::gui::qt::RealGUIvirtual; setupSurfaceFormat()sofa::gui::qt::RealGUIstatic; setViewerConfiguration(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::RealGUIvirtual; setViewerResolution(int w, int h) overridesofa::gui::qt::RealGUIvirtual; showAbout()sofa::gui::qt::RealGUIvirtualslot; showDocBrowser()sofa::gui::qt::RealGUIvirtualslot; showFPS(double fps) overridesofa::gui::qt::RealGUIvirtual; showhideElements()sofa::gui::qt::RealGUIvirtualslot; showMouseManager()sofa::gui::qt::RealGUIvirtualslot; showPluginManager()sofa::gui::qt::RealGUIvirtualslot; showVideoRecorderManager()sofa::gui::qt::RealGUIvirtualslot; showWindowDataGraph()sofa::gui::qt::RealGUIvirtualslot; simulationGraphsofa::gui::qt::RealGUI; simulationNamesofa::gui::qt::RealGUIprotected; sleep(float seconds, float init_time)sofa::gui::qt::RealGUIinlineprotected; startDumpVisitor()sofa::gui::qt::RealGUIprotected; statWidgetsofa::gui::qt::RealGUIprotected; step()sofa::gui::qt::RealGUIvirtualslot; stepMainLoop() overridesofa::gui::qt::RealGUIvirtual; stopDumpVisitor()sofa::gui::qt::RealGUIprotected; timeLabelsofa::gui::qt::RealGUIprotected; timerIdlesofa::gui::qt::RealGUIprotected; timerStepsofa::gui::qt::RealGUIprotected; toolsDockMoved()sofa::gui::qt::RealGUIvirtualslot; unloadScene(bool _withViewer=true)sofa::gui::qt::RealGUIvirtual; update()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundColour()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundImage()sofa::gui::qt::RealGUIvirtualslot; updateDtEditState()sofa::gui::qt::RealGUIvirtualslot; updateViewerList()sofa::gui::qt::RealGUIprotectedvirtualslot; viewerMapsofa::gui::qt::RealGUIprotected; ~BaseGUI()sofa::gui::common::BaseGUIprotectedvirtual; ~RealGUI() overridesofa::gui::qt::RealGUI.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:9517,Deployability,update,updateBackgroundColour,9517,"tatic; setSizeH(int _valH)sofa::gui::qt::RealGUIinlinevirtualslot; setSizeW(int _valW)sofa::gui::qt::RealGUIinlinevirtualslot; setSleepingNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; setTitle(std::string windowTitle)sofa::gui::qt::RealGUIvirtual; setupSurfaceFormat()sofa::gui::qt::RealGUIstatic; setViewerConfiguration(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::RealGUIvirtual; setViewerResolution(int w, int h) overridesofa::gui::qt::RealGUIvirtual; showAbout()sofa::gui::qt::RealGUIvirtualslot; showDocBrowser()sofa::gui::qt::RealGUIvirtualslot; showFPS(double fps) overridesofa::gui::qt::RealGUIvirtual; showhideElements()sofa::gui::qt::RealGUIvirtualslot; showMouseManager()sofa::gui::qt::RealGUIvirtualslot; showPluginManager()sofa::gui::qt::RealGUIvirtualslot; showVideoRecorderManager()sofa::gui::qt::RealGUIvirtualslot; showWindowDataGraph()sofa::gui::qt::RealGUIvirtualslot; simulationGraphsofa::gui::qt::RealGUI; simulationNamesofa::gui::qt::RealGUIprotected; sleep(float seconds, float init_time)sofa::gui::qt::RealGUIinlineprotected; startDumpVisitor()sofa::gui::qt::RealGUIprotected; statWidgetsofa::gui::qt::RealGUIprotected; step()sofa::gui::qt::RealGUIvirtualslot; stepMainLoop() overridesofa::gui::qt::RealGUIvirtual; stopDumpVisitor()sofa::gui::qt::RealGUIprotected; timeLabelsofa::gui::qt::RealGUIprotected; timerIdlesofa::gui::qt::RealGUIprotected; timerStepsofa::gui::qt::RealGUIprotected; toolsDockMoved()sofa::gui::qt::RealGUIvirtualslot; unloadScene(bool _withViewer=true)sofa::gui::qt::RealGUIvirtual; update()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundColour()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundImage()sofa::gui::qt::RealGUIvirtualslot; updateDtEditState()sofa::gui::qt::RealGUIvirtualslot; updateViewerList()sofa::gui::qt::RealGUIprotectedvirtualslot; viewerMapsofa::gui::qt::RealGUIprotected; ~BaseGUI()sofa::gui::common::BaseGUIprotectedvirtual; ~RealGUI() overridesofa::gui::qt::RealGUI.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:9576,Deployability,update,updateBackgroundImage,9576,"tatic; setSizeH(int _valH)sofa::gui::qt::RealGUIinlinevirtualslot; setSizeW(int _valW)sofa::gui::qt::RealGUIinlinevirtualslot; setSleepingNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; setTitle(std::string windowTitle)sofa::gui::qt::RealGUIvirtual; setupSurfaceFormat()sofa::gui::qt::RealGUIstatic; setViewerConfiguration(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::RealGUIvirtual; setViewerResolution(int w, int h) overridesofa::gui::qt::RealGUIvirtual; showAbout()sofa::gui::qt::RealGUIvirtualslot; showDocBrowser()sofa::gui::qt::RealGUIvirtualslot; showFPS(double fps) overridesofa::gui::qt::RealGUIvirtual; showhideElements()sofa::gui::qt::RealGUIvirtualslot; showMouseManager()sofa::gui::qt::RealGUIvirtualslot; showPluginManager()sofa::gui::qt::RealGUIvirtualslot; showVideoRecorderManager()sofa::gui::qt::RealGUIvirtualslot; showWindowDataGraph()sofa::gui::qt::RealGUIvirtualslot; simulationGraphsofa::gui::qt::RealGUI; simulationNamesofa::gui::qt::RealGUIprotected; sleep(float seconds, float init_time)sofa::gui::qt::RealGUIinlineprotected; startDumpVisitor()sofa::gui::qt::RealGUIprotected; statWidgetsofa::gui::qt::RealGUIprotected; step()sofa::gui::qt::RealGUIvirtualslot; stepMainLoop() overridesofa::gui::qt::RealGUIvirtual; stopDumpVisitor()sofa::gui::qt::RealGUIprotected; timeLabelsofa::gui::qt::RealGUIprotected; timerIdlesofa::gui::qt::RealGUIprotected; timerStepsofa::gui::qt::RealGUIprotected; toolsDockMoved()sofa::gui::qt::RealGUIvirtualslot; unloadScene(bool _withViewer=true)sofa::gui::qt::RealGUIvirtual; update()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundColour()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundImage()sofa::gui::qt::RealGUIvirtualslot; updateDtEditState()sofa::gui::qt::RealGUIvirtualslot; updateViewerList()sofa::gui::qt::RealGUIprotectedvirtualslot; viewerMapsofa::gui::qt::RealGUIprotected; ~BaseGUI()sofa::gui::common::BaseGUIprotectedvirtual; ~RealGUI() overridesofa::gui::qt::RealGUI.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:9634,Deployability,update,updateDtEditState,9634,"tatic; setSizeH(int _valH)sofa::gui::qt::RealGUIinlinevirtualslot; setSizeW(int _valW)sofa::gui::qt::RealGUIinlinevirtualslot; setSleepingNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; setTitle(std::string windowTitle)sofa::gui::qt::RealGUIvirtual; setupSurfaceFormat()sofa::gui::qt::RealGUIstatic; setViewerConfiguration(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::RealGUIvirtual; setViewerResolution(int w, int h) overridesofa::gui::qt::RealGUIvirtual; showAbout()sofa::gui::qt::RealGUIvirtualslot; showDocBrowser()sofa::gui::qt::RealGUIvirtualslot; showFPS(double fps) overridesofa::gui::qt::RealGUIvirtual; showhideElements()sofa::gui::qt::RealGUIvirtualslot; showMouseManager()sofa::gui::qt::RealGUIvirtualslot; showPluginManager()sofa::gui::qt::RealGUIvirtualslot; showVideoRecorderManager()sofa::gui::qt::RealGUIvirtualslot; showWindowDataGraph()sofa::gui::qt::RealGUIvirtualslot; simulationGraphsofa::gui::qt::RealGUI; simulationNamesofa::gui::qt::RealGUIprotected; sleep(float seconds, float init_time)sofa::gui::qt::RealGUIinlineprotected; startDumpVisitor()sofa::gui::qt::RealGUIprotected; statWidgetsofa::gui::qt::RealGUIprotected; step()sofa::gui::qt::RealGUIvirtualslot; stepMainLoop() overridesofa::gui::qt::RealGUIvirtual; stopDumpVisitor()sofa::gui::qt::RealGUIprotected; timeLabelsofa::gui::qt::RealGUIprotected; timerIdlesofa::gui::qt::RealGUIprotected; timerStepsofa::gui::qt::RealGUIprotected; toolsDockMoved()sofa::gui::qt::RealGUIvirtualslot; unloadScene(bool _withViewer=true)sofa::gui::qt::RealGUIvirtual; update()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundColour()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundImage()sofa::gui::qt::RealGUIvirtualslot; updateDtEditState()sofa::gui::qt::RealGUIvirtualslot; updateViewerList()sofa::gui::qt::RealGUIprotectedvirtualslot; viewerMapsofa::gui::qt::RealGUIprotected; ~BaseGUI()sofa::gui::common::BaseGUIprotectedvirtual; ~RealGUI() overridesofa::gui::qt::RealGUI.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:9688,Deployability,update,updateViewerList,9688,"tatic; setSizeH(int _valH)sofa::gui::qt::RealGUIinlinevirtualslot; setSizeW(int _valW)sofa::gui::qt::RealGUIinlinevirtualslot; setSleepingNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; setTitle(std::string windowTitle)sofa::gui::qt::RealGUIvirtual; setupSurfaceFormat()sofa::gui::qt::RealGUIstatic; setViewerConfiguration(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::RealGUIvirtual; setViewerResolution(int w, int h) overridesofa::gui::qt::RealGUIvirtual; showAbout()sofa::gui::qt::RealGUIvirtualslot; showDocBrowser()sofa::gui::qt::RealGUIvirtualslot; showFPS(double fps) overridesofa::gui::qt::RealGUIvirtual; showhideElements()sofa::gui::qt::RealGUIvirtualslot; showMouseManager()sofa::gui::qt::RealGUIvirtualslot; showPluginManager()sofa::gui::qt::RealGUIvirtualslot; showVideoRecorderManager()sofa::gui::qt::RealGUIvirtualslot; showWindowDataGraph()sofa::gui::qt::RealGUIvirtualslot; simulationGraphsofa::gui::qt::RealGUI; simulationNamesofa::gui::qt::RealGUIprotected; sleep(float seconds, float init_time)sofa::gui::qt::RealGUIinlineprotected; startDumpVisitor()sofa::gui::qt::RealGUIprotected; statWidgetsofa::gui::qt::RealGUIprotected; step()sofa::gui::qt::RealGUIvirtualslot; stepMainLoop() overridesofa::gui::qt::RealGUIvirtual; stopDumpVisitor()sofa::gui::qt::RealGUIprotected; timeLabelsofa::gui::qt::RealGUIprotected; timerIdlesofa::gui::qt::RealGUIprotected; timerStepsofa::gui::qt::RealGUIprotected; toolsDockMoved()sofa::gui::qt::RealGUIvirtualslot; unloadScene(bool _withViewer=true)sofa::gui::qt::RealGUIvirtual; update()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundColour()sofa::gui::qt::RealGUIvirtualslot; updateBackgroundImage()sofa::gui::qt::RealGUIvirtualslot; updateDtEditState()sofa::gui::qt::RealGUIvirtualslot; updateViewerList()sofa::gui::qt::RealGUIprotectedvirtualslot; viewerMapsofa::gui::qt::RealGUIprotected; ~BaseGUI()sofa::gui::common::BaseGUIprotectedvirtual; ~RealGUI() overridesofa::gui::qt::RealGUI.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:216,Modifiability,inherit,inherited,216,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::RealGUI Member List . This is the complete list of members for sofa::gui::qt::RealGUI, including all inherited members. activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:784,Modifiability,config,configDirectoryPathsofa,784," activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:846,Modifiability,config,configureGUI,846," activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:4950,Modifiability,plugin,pluginManagerDialogsofa,4950,"eamsofa::gui::qt::RealGUIprotected; m_dumpVisitorStreamsofa::gui::qt::RealGUIprotected; m_enableInteractionsofa::gui::qt::RealGUIprotected; m_exportGnuplotsofa::gui::qt::RealGUIprotected; m_filelistenersofa::gui::qt::RealGUIprotected; m_fullScreensofa::gui::qt::RealGUIprotected; m_modifiedLogFilessofa::gui::qt::RealGUIprotected; m_viewersofa::gui::qt::RealGUIprotected; mainLoop() overridesofa::gui::qt::RealGUIvirtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprotectedstatic; mSimulationsofa::gui::qt::RealGUIprotected; newRootNode(sofa::simulation::Node *root, const char *path)sofa::gui::qt::RealGUIvirtualslot; newScene()sofa::gui::qt::RealGUIsignal; newStep()sofa::gui::qt::RealGUIsignal; onSceneGraphRefreshButtonClicked()sofa::gui::qt::RealGUIprotectedvirtualslot; pathDumpVisitorsofa::gui::qt::RealGUIprotected; playpauseGUI(bool value)sofa::gui::qt::RealGUIvirtualslot; pluginManagerDialogsofa::gui::qt::RealGUIprotected; popupOpenFileSelector()sofa::gui::qt::RealGUIvirtualslot; propertyDockMoved(Qt::DockWidgetArea a)sofa::gui::qt::RealGUIprotectedslot; propertyWidgetsofa::gui::qt::RealGUIprotected; quit()sofa::gui::qt::RealGUIsignal; RealGUI(const char *viewername)sofa::gui::qt::RealGUI; recentlyOpenedFilesManagersofa::gui::qt::RealGUIprotected; redraw() overridesofa::gui::qt::RealGUIslot; registerViewer(common::BaseViewer *_viewer) overridesofa::gui::qt::RealGUIvirtual; reload()sofa::gui::qt::RealGUIsignal; removeViewer()sofa::gui::qt::RealGUIvirtual; resetScene()sofa::gui::qt::RealGUIvirtualslot; resetView()sofa::gui::qt::RealGUIinlinevirtualslot; saveScreenshot(const std::string &filename, int compression_level=-1)sofa::gui::common::BaseGUIvirtual; saveView()sofa::gui::qt::RealGUIinlinevirtualslot; sceneGraphViewDirtynessChanged(bool isDirty)sofa::gui::qt::RealGUIprotectedvirtualslot; sceneGraphViewLockingChanged(bool isLocked)sofa::gui::qt::RealGUIprotectedvi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:3572,Performance,load,loadSimulation,3572,)sofa::gui::qt::RealGUIvirtual; fileRecentlyOpened(QAction *action)sofa::gui::qt::RealGUIvirtualslot; fileReload()sofa::gui::qt::RealGUIvirtualslot; fpsLabelsofa::gui::qt::RealGUIprotected; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getSofaViewer()sofa::gui::qt::RealGUI; getViewer() overridesofa::gui::qt::RealGUIvirtual; gnuplotDirectorysofa::gui::qt::RealGUIprotected; helpAbout()sofa::gui::qt::RealGUIinlinevirtualslot; informationOnPickCallBacksofa::gui::qt::RealGUIprotected; init()sofa::gui::qt::RealGUIprotected; InitApplication(RealGUI *_gui)sofa::gui::qt::RealGUIprotectedstatic; initViewer(common::BaseViewer *_viewer) overridesofa::gui::qt::RealGUIprotectedvirtual; interactionGUI(bool value)sofa::gui::qt::RealGUIvirtualslot; keyPressEvent(QKeyEvent *e) overridesofa::gui::qt::RealGUIprotected; loadSimulation(bool one_step=false)sofa::gui::qt::RealGUIprotected; lockAnimation(bool)sofa::gui::qt::RealGUIvirtualslot; m_animateOBJsofa::gui::qt::RealGUIprotected; m_animationOBJcountersofa::gui::qt::RealGUIprotected; m_clockBeforeLastStepsofa::gui::qt::RealGUIprotected; m_displayComputationTimesofa::gui::qt::RealGUIprotected; m_dumpStatesofa::gui::qt::RealGUIprotected; m_dumpStateStreamsofa::gui::qt::RealGUIprotected; m_dumpVisitorStreamsofa::gui::qt::RealGUIprotected; m_enableInteractionsofa::gui::qt::RealGUIprotected; m_exportGnuplotsofa::gui::qt::RealGUIprotected; m_filelistenersofa::gui::qt::RealGUIprotected; m_fullScreensofa::gui::qt::RealGUIprotected; m_modifiedLogFilessofa::gui::qt::RealGUIprotected; m_viewersofa::gui::qt::RealGUIprotected; mainLoop() overridesofa::gui::qt::RealGUIvirtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprotectedstatic; mSimulationsofa::gui::qt::RealGU,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:692,Usability,clear,clear,692," activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:4185,Deployability,Update,Update,4185,"oid setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *button) override;  ; void setDumpState (bool) override;  ; void setLogTime (bool) override;  ; void setExportState (bool) override;  ; virtual void setGnuplotPath (const std::string &path) override;  ; virtual void createViewer (const char *_viewerName, bool _updateViewerList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; stat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7016,Deployability,update,updateDtEditState,7016,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7153,Deployability,update,update,7153,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7180,Deployability,update,updateBackgroundColour,7180,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7223,Deployability,update,updateBackgroundImage,7223,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8409,Deployability,update,updateViewerList,8409,"esh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8484,Deployability,Update,Update,8484,"esh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8615,Deployability,Update,Update,8615,"yComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8637,Deployability,update,update,8637,"yComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8756,Deployability,Update,Update,8756,"ndow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabel. protected . ◆ gnuplotDirectory. std::string sofa::gui::qt::RealGUI::gnuplotDirectory. protected . ◆ informationOnPickCallBack. Information",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8778,Deployability,update,update,8778,"ndow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void helpAbout ();  ; virtual void editRecordDirectory ();  ; virtual void editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabel. protected . ◆ gnuplotDirectory. std::string sofa::gui::qt::RealGUI::gnuplotDirectory. protected . ◆ informationOnPickCallBack. Information",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:18089,Deployability,Update,Update,18089,"the GUI) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ interactionGUI. void sofa::gui::qt::RealGUI::interactionGUI ; (; bool ; value). virtualslot . ◆ keyPressEvent(). void sofa::gui::qt::RealGUI::keyPressEvent ; (; QKeyEvent * ; e). overrideprotected . ◆ loadSimulation(). void sofa::gui::qt::RealGUI::loadSimulation ; (; bool ; one_step = false). protected . ◆ lockAnimation. void sofa::gui::qt::RealGUI::lockAnimation ; (; bool ; value). virtualslot . ◆ mainLoop(). int sofa::gui::qt::RealGUI::mainLoop ; (; ). overridevirtual . Implements sofa::gui::common::BaseGUI. ◆ newRootNode. void sofa::gui::qt::RealGUI::newRootNode ; (; sofa::simulation::Node * ; root, . const char * ; path . ). virtualslot . ◆ newScene. void sofa::gui::qt::RealGUI::newScene ; (; ). signal . ◆ newStep. void sofa::gui::qt::RealGUI::newStep ; (; ). signal . ◆ onSceneGraphRefreshButtonClicked. void sofa::gui::qt::RealGUI::onSceneGraphRefreshButtonClicked ; (; ). protectedvirtualslot . Update the scenegraph and activate the automatic refresh. . ◆ playpauseGUI. void sofa::gui::qt::RealGUI::playpauseGUI ; (; bool ; value). virtualslot . ◆ popupOpenFileSelector. void sofa::gui::qt::RealGUI::popupOpenFileSelector ; (; ). virtualslot . This open popup the file selection windows. . ◆ propertyDockMoved. void sofa::gui::qt::RealGUI::propertyDockMoved ; (; Qt::DockWidgetArea ; a). protectedslot . ◆ quit. void sofa::gui::qt::RealGUI::quit ; (; ). signal . ◆ redraw. void sofa::gui::qt::RealGUI::redraw ; (; ). overrideslot . refresh the visualization window . ◆ registerViewer(). void sofa::gui::qt::RealGUI::registerViewer ; (; common::BaseViewer * ; _viewer). overridevirtual . Used to directly replace the current viewer. ; Reimplemented from sofa::gui::common::BaseGUI. ◆ reload. void sofa::gui::qt::RealGUI::reload ; (; ). signal . ◆ removeViewer(). void sofa::gui::qt::RealGUI::removeViewer ; (; ). virtual . ◆ resetScene. void sofa::gui::qt::RealGUI::resetScene ; (; ). virtualslot . ◆ resetView. virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:19406,Deployability,Update,Update,19406,ertyDockMoved ; (; Qt::DockWidgetArea ; a). protectedslot . ◆ quit. void sofa::gui::qt::RealGUI::quit ; (; ). signal . ◆ redraw. void sofa::gui::qt::RealGUI::redraw ; (; ). overrideslot . refresh the visualization window . ◆ registerViewer(). void sofa::gui::qt::RealGUI::registerViewer ; (; common::BaseViewer * ; _viewer). overridevirtual . Used to directly replace the current viewer. ; Reimplemented from sofa::gui::common::BaseGUI. ◆ reload. void sofa::gui::qt::RealGUI::reload ; (; ). signal . ◆ removeViewer(). void sofa::gui::qt::RealGUI::removeViewer ; (; ). virtual . ◆ resetScene. void sofa::gui::qt::RealGUI::resetScene ; (; ). virtualslot . ◆ resetView. virtual void sofa::gui::qt::RealGUI::resetView ; (; ). inlinevirtualslot . ◆ saveView. virtual void sofa::gui::qt::RealGUI::saveView ; (; ). inlinevirtualslot . ◆ sceneGraphViewDirtynessChanged. void sofa::gui::qt::RealGUI::sceneGraphViewDirtynessChanged ; (; bool ; isDirty). protectedvirtualslot . Update the SceneGraph update button to reflect the dirtiness status. . ◆ sceneGraphViewLockingChanged. void sofa::gui::qt::RealGUI::sceneGraphViewLockingChanged ; (; bool ; isLocked). protectedvirtualslot . Update the SceneGraph update button to reflect the locking status. . ◆ screenshot. void sofa::gui::qt::RealGUI::screenshot ; (; ). virtualslot . ◆ setBackgroundColor(). void sofa::gui::qt::RealGUI::setBackgroundColor ; (; const sofa::type::RGBAColor & ; c). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setBackgroundImage(). void sofa::gui::qt::RealGUI::setBackgroundImage ; (; const std::string & ; i). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setDt. void sofa::gui::qt::RealGUI::setDt ; (; const QString & ; value). virtualslot . ◆ setDumpState(). void sofa::gui::qt::RealGUI::setDumpState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportGnuplot. void sofa::gui::qt::RealGUI::setExportGnuplot ; (; bool ; exp). virtualslot . ◆ setExp,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:19428,Deployability,update,update,19428,ertyDockMoved ; (; Qt::DockWidgetArea ; a). protectedslot . ◆ quit. void sofa::gui::qt::RealGUI::quit ; (; ). signal . ◆ redraw. void sofa::gui::qt::RealGUI::redraw ; (; ). overrideslot . refresh the visualization window . ◆ registerViewer(). void sofa::gui::qt::RealGUI::registerViewer ; (; common::BaseViewer * ; _viewer). overridevirtual . Used to directly replace the current viewer. ; Reimplemented from sofa::gui::common::BaseGUI. ◆ reload. void sofa::gui::qt::RealGUI::reload ; (; ). signal . ◆ removeViewer(). void sofa::gui::qt::RealGUI::removeViewer ; (; ). virtual . ◆ resetScene. void sofa::gui::qt::RealGUI::resetScene ; (; ). virtualslot . ◆ resetView. virtual void sofa::gui::qt::RealGUI::resetView ; (; ). inlinevirtualslot . ◆ saveView. virtual void sofa::gui::qt::RealGUI::saveView ; (; ). inlinevirtualslot . ◆ sceneGraphViewDirtynessChanged. void sofa::gui::qt::RealGUI::sceneGraphViewDirtynessChanged ; (; bool ; isDirty). protectedvirtualslot . Update the SceneGraph update button to reflect the dirtiness status. . ◆ sceneGraphViewLockingChanged. void sofa::gui::qt::RealGUI::sceneGraphViewLockingChanged ; (; bool ; isLocked). protectedvirtualslot . Update the SceneGraph update button to reflect the locking status. . ◆ screenshot. void sofa::gui::qt::RealGUI::screenshot ; (; ). virtualslot . ◆ setBackgroundColor(). void sofa::gui::qt::RealGUI::setBackgroundColor ; (; const sofa::type::RGBAColor & ; c). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setBackgroundImage(). void sofa::gui::qt::RealGUI::setBackgroundImage ; (; const std::string & ; i). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setDt. void sofa::gui::qt::RealGUI::setDt ; (; const QString & ; value). virtualslot . ◆ setDumpState(). void sofa::gui::qt::RealGUI::setDumpState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportGnuplot. void sofa::gui::qt::RealGUI::setExportGnuplot ; (; bool ; exp). virtualslot . ◆ setExp,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:19613,Deployability,Update,Update,19613,ization window . ◆ registerViewer(). void sofa::gui::qt::RealGUI::registerViewer ; (; common::BaseViewer * ; _viewer). overridevirtual . Used to directly replace the current viewer. ; Reimplemented from sofa::gui::common::BaseGUI. ◆ reload. void sofa::gui::qt::RealGUI::reload ; (; ). signal . ◆ removeViewer(). void sofa::gui::qt::RealGUI::removeViewer ; (; ). virtual . ◆ resetScene. void sofa::gui::qt::RealGUI::resetScene ; (; ). virtualslot . ◆ resetView. virtual void sofa::gui::qt::RealGUI::resetView ; (; ). inlinevirtualslot . ◆ saveView. virtual void sofa::gui::qt::RealGUI::saveView ; (; ). inlinevirtualslot . ◆ sceneGraphViewDirtynessChanged. void sofa::gui::qt::RealGUI::sceneGraphViewDirtynessChanged ; (; bool ; isDirty). protectedvirtualslot . Update the SceneGraph update button to reflect the dirtiness status. . ◆ sceneGraphViewLockingChanged. void sofa::gui::qt::RealGUI::sceneGraphViewLockingChanged ; (; bool ; isLocked). protectedvirtualslot . Update the SceneGraph update button to reflect the locking status. . ◆ screenshot. void sofa::gui::qt::RealGUI::screenshot ; (; ). virtualslot . ◆ setBackgroundColor(). void sofa::gui::qt::RealGUI::setBackgroundColor ; (; const sofa::type::RGBAColor & ; c). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setBackgroundImage(). void sofa::gui::qt::RealGUI::setBackgroundImage ; (; const std::string & ; i). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setDt. void sofa::gui::qt::RealGUI::setDt ; (; const QString & ; value). virtualslot . ◆ setDumpState(). void sofa::gui::qt::RealGUI::setDumpState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportGnuplot. void sofa::gui::qt::RealGUI::setExportGnuplot ; (; bool ; exp). virtualslot . ◆ setExportState(). void sofa::gui::qt::RealGUI::setExportState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportVisitor. void sofa::gui::qt::RealGUI::setExportVisitor ; (,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:19635,Deployability,update,update,19635,ization window . ◆ registerViewer(). void sofa::gui::qt::RealGUI::registerViewer ; (; common::BaseViewer * ; _viewer). overridevirtual . Used to directly replace the current viewer. ; Reimplemented from sofa::gui::common::BaseGUI. ◆ reload. void sofa::gui::qt::RealGUI::reload ; (; ). signal . ◆ removeViewer(). void sofa::gui::qt::RealGUI::removeViewer ; (; ). virtual . ◆ resetScene. void sofa::gui::qt::RealGUI::resetScene ; (; ). virtualslot . ◆ resetView. virtual void sofa::gui::qt::RealGUI::resetView ; (; ). inlinevirtualslot . ◆ saveView. virtual void sofa::gui::qt::RealGUI::saveView ; (; ). inlinevirtualslot . ◆ sceneGraphViewDirtynessChanged. void sofa::gui::qt::RealGUI::sceneGraphViewDirtynessChanged ; (; bool ; isDirty). protectedvirtualslot . Update the SceneGraph update button to reflect the dirtiness status. . ◆ sceneGraphViewLockingChanged. void sofa::gui::qt::RealGUI::sceneGraphViewLockingChanged ; (; bool ; isLocked). protectedvirtualslot . Update the SceneGraph update button to reflect the locking status. . ◆ screenshot. void sofa::gui::qt::RealGUI::screenshot ; (; ). virtualslot . ◆ setBackgroundColor(). void sofa::gui::qt::RealGUI::setBackgroundColor ; (; const sofa::type::RGBAColor & ; c). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setBackgroundImage(). void sofa::gui::qt::RealGUI::setBackgroundImage ; (; const std::string & ; i). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setDt. void sofa::gui::qt::RealGUI::setDt ; (; const QString & ; value). virtualslot . ◆ setDumpState(). void sofa::gui::qt::RealGUI::setDumpState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportGnuplot. void sofa::gui::qt::RealGUI::setExportGnuplot ; (; bool ; exp). virtualslot . ◆ setExportState(). void sofa::gui::qt::RealGUI::setExportState ; (; bool ; b). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ setExportVisitor. void sofa::gui::qt::RealGUI::setExportVisitor ; (,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24272,Deployability,update,update,24272,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24309,Deployability,update,update,24309,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24340,Deployability,update,updateBackgroundColour,24340,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24393,Deployability,update,updateBackgroundColour,24393,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24440,Deployability,update,updateBackgroundImage,24440,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24492,Deployability,update,updateBackgroundImage,24492,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24538,Deployability,update,updateDtEditState,24538,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24586,Deployability,update,updateDtEditState,24586,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24628,Deployability,update,updateViewerList,24628,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24675,Deployability,update,updateViewerList,24675,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:24723,Deployability,Update,Update,24723,"howFPS(). void sofa::gui::qt::RealGUI::showFPS ; (; double ; ). overridevirtual . Force the displayed FPS value (if any) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ showhideElements. void sofa::gui::qt::RealGUI::showhideElements ; (; ). virtualslot . ◆ showMouseManager. void sofa::gui::qt::RealGUI::showMouseManager ; (; ). virtualslot . ◆ showPluginManager. void sofa::gui::qt::RealGUI::showPluginManager ; (; ). virtualslot . ◆ showVideoRecorderManager. void sofa::gui::qt::RealGUI::showVideoRecorderManager ; (; ). virtualslot . ◆ showWindowDataGraph. void sofa::gui::qt::RealGUI::showWindowDataGraph ; (; ). virtualslot . ◆ sleep(). void sofa::gui::qt::RealGUI::sleep ; (; float ; seconds, . float ; init_time . ). inlineprotected . ◆ startDumpVisitor(). void sofa::gui::qt::RealGUI::startDumpVisitor ; (; ). protected . ◆ step. void sofa::gui::qt::RealGUI::step ; (; ). virtualslot . ◆ stepMainLoop(). void sofa::gui::qt::RealGUI::stepMainLoop ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ stopDumpVisitor(). void sofa::gui::qt::RealGUI::stopDumpVisitor ; (; ). protected . ◆ toolsDockMoved. void sofa::gui::qt::RealGUI::toolsDockMoved ; (; ). virtualslot . ◆ unloadScene(). void sofa::gui::qt::RealGUI::unloadScene ; (; bool ; _withViewer = true). virtual . ◆ update. void sofa::gui::qt::RealGUI::update ; (; ). virtualslot . ◆ updateBackgroundColour. void sofa::gui::qt::RealGUI::updateBackgroundColour ; (; ). virtualslot . ◆ updateBackgroundImage. void sofa::gui::qt::RealGUI::updateBackgroundImage ; (; ). virtualslot . ◆ updateDtEditState. void sofa::gui::qt::RealGUI::updateDtEditState ; (; ). virtualslot . ◆ updateViewerList. void sofa::gui::qt::RealGUI::updateViewerList ; (; ). protectedvirtualslot . Update the viewerMap and create viewer if we haven't yet one (the first of the list) TODO: find a better way to propagate the argument when we construct the viewer . sofaguiqtRealGUI; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:4547,Integrability,message,message,4547,"rList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init (); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:431,Modifiability,Inherit,Inheritance,431,"﻿. SOFA API: sofa::gui::qt::RealGUI Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::RealGUI Class Reference . #include <RealGUI.h>. Inheritance diagram for sofa::gui::qt::RealGUI:. [legend]. Public Attributes; QSofaListView * simulationGraph;  . Protected Attributes; QLabel * fpsLabel;  ; QLabel * timeLabel;  ; bool m_dumpState;  ; std::ofstream * m_dumpStateStream;  ; std::ostringstream m_dumpVisitorStream;  ; bool m_exportGnuplot;  ; bool m_animateOBJ;  ; int m_animationOBJcounter;  ; bool m_displayComputationTime;  ; bool m_fullScreen;  ; sofa::gui::qt::viewer::SofaViewer * m_viewer;  ; clock_t m_clockBeforeLastStep;  ; QDisplayPropertyWidget * propertyWidget;  ; std::map< helper::SofaViewerFactory::Key, QAction * > viewerMap;  list of all viewer key name (for creation) mapped to its QAction in the GUI More...;  ; InformationOnPickCallBack informationOnPickCallBack;  ; QWidget * currentTab;  ; QSofaStatWidget * statWidget;  ; QTimer * timerStep;  ; QTimer * timerIdle;  ; WDoubleLineEdit * background [3];  ; QLineEdit * backgroundImage;  ; SofaPluginManager * pluginManagerDialog;  ; QMenuFilesRecentlyOpened recentlyOpenedFilesManager;  ; std::string simulationName;  ; std::string gnuplotDirectory;  ; std::string pathDumpVisitor;  ; std::set< std::string > m_modifiedLogFiles;  Keep track of log files that have been modified since the GUI started. More...;  ; bool m_enableInteraction {false};  ; sofa::simulation::Node::SPtr mSimulation;  ; sofa::helper::system::FileEventListener * m_filelistener {nullptr};  . Public Member Functions;  RealGUI (const char *viewername);  ;  ~RealGUI () override;  ; void showFPS (double fps) override;  Force the displayed FPS value (if any) Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:1377,Modifiability,plugin,pluginManagerDialog,1377,"s Reference . #include <RealGUI.h>. Inheritance diagram for sofa::gui::qt::RealGUI:. [legend]. Public Attributes; QSofaListView * simulationGraph;  . Protected Attributes; QLabel * fpsLabel;  ; QLabel * timeLabel;  ; bool m_dumpState;  ; std::ofstream * m_dumpStateStream;  ; std::ostringstream m_dumpVisitorStream;  ; bool m_exportGnuplot;  ; bool m_animateOBJ;  ; int m_animationOBJcounter;  ; bool m_displayComputationTime;  ; bool m_fullScreen;  ; sofa::gui::qt::viewer::SofaViewer * m_viewer;  ; clock_t m_clockBeforeLastStep;  ; QDisplayPropertyWidget * propertyWidget;  ; std::map< helper::SofaViewerFactory::Key, QAction * > viewerMap;  list of all viewer key name (for creation) mapped to its QAction in the GUI More...;  ; InformationOnPickCallBack informationOnPickCallBack;  ; QWidget * currentTab;  ; QSofaStatWidget * statWidget;  ; QTimer * timerStep;  ; QTimer * timerIdle;  ; WDoubleLineEdit * background [3];  ; QLineEdit * backgroundImage;  ; SofaPluginManager * pluginManagerDialog;  ; QMenuFilesRecentlyOpened recentlyOpenedFilesManager;  ; std::string simulationName;  ; std::string gnuplotDirectory;  ; std::string pathDumpVisitor;  ; std::set< std::string > m_modifiedLogFiles;  Keep track of log files that have been modified since the GUI started. More...;  ; bool m_enableInteraction {false};  ; sofa::simulation::Node::SPtr mSimulation;  ; sofa::helper::system::FileEventListener * m_filelistener {nullptr};  . Public Member Functions;  RealGUI (const char *viewername);  ;  ~RealGUI () override;  ; void showFPS (double fps) override;  Force the displayed FPS value (if any) More...;  ; void stepMainLoop () override;  ; int mainLoop () override;  ; int closeGUI () override;  Close the GUI. More...;  ; sofa::simulation::Node * currentSimulation () override;  Get the rootNode of the sofa scene. More...;  ; virtual void fileOpen (std::string filename, bool temporaryFile=false, bool reload=false);  ; virtual void fileOpenSimu (std::string filename);  ; virtual void set",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:3864,Modifiability,inherit,inherited,3864,"al void setFullScreen (bool enable);  ; void centerWindow () override;  ; void setBackgroundColor (const sofa::type::RGBAColor &c) override;  ; virtual void setBackgroundImage (const std::string &i) override;  ; void setViewerConfiguration (sofa::component::setting::ViewerSetting *viewerConf) override;  ; void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *button) override;  ; void setDumpState (bool) override;  ; void setLogTime (bool) override;  ; void setExportState (bool) override;  ; virtual void setGnuplotPath (const std::string &path) override;  ; virtual void createViewer (const char *_viewerName, bool _updateViewerList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:3920,Modifiability,config,configureGUI,3920,"al void setFullScreen (bool enable);  ; void centerWindow () override;  ; void setBackgroundColor (const sofa::type::RGBAColor &c) override;  ; virtual void setBackgroundImage (const std::string &i) override;  ; void setViewerConfiguration (sofa::component::setting::ViewerSetting *viewerConf) override;  ; void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *button) override;  ; void setDumpState (bool) override;  ; void setLogTime (bool) override;  ; void setExportState (bool) override;  ; virtual void setGnuplotPath (const std::string &path) override;  ; virtual void createViewer (const char *_viewerName, bool _updateViewerList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:3997,Modifiability,config,configure,3997,"al void setFullScreen (bool enable);  ; void centerWindow () override;  ; void setBackgroundColor (const sofa::type::RGBAColor &c) override;  ; virtual void setBackgroundImage (const std::string &i) override;  ; void setViewerConfiguration (sofa::component::setting::ViewerSetting *viewerConf) override;  ; void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *button) override;  ; void setDumpState (bool) override;  ; void setLogTime (bool) override;  ; void setExportState (bool) override;  ; virtual void setGnuplotPath (const std::string &path) override;  ; virtual void createViewer (const char *_viewerName, bool _updateViewerList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:4874,Modifiability,inherit,inherited,4874," to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init ();  init data member from RealGUI for the viewer initialisation in the GUI More...;  ; void createDisplayFlags (Node::SPtr root);  ; void loadSimulation (bool one_step=false);  ; void eventNewStep ();  ; void eventNewTime ();  ; void keyPressEvent (QKeyEvent *e) override;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void initViewer (common::BaseViewer *_viewer) override;  init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) More...;  ; virtual int exitApplication (unsi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:6094,Modifiability,inherit,inherited,6094,"tParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init ();  init data member from RealGUI for the viewer initialisation in the GUI More...;  ; void createDisplayFlags (Node::SPtr root);  ; void loadSimulation (bool one_step=false);  ; void eventNewStep ();  ; void eventNewTime ();  ; void keyPressEvent (QKeyEvent *e) override;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void initViewer (common::BaseViewer *_viewer) override;  init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) More...;  ; virtual int exitApplication (unsigned int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void scr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:8979,Modifiability,Inherit,Inherited,8979,"editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabel. protected . ◆ gnuplotDirectory. std::string sofa::gui::qt::RealGUI::gnuplotDirectory. protected . ◆ informationOnPickCallBack. InformationOnPickCallBack sofa::gui::qt::RealGUI::informationOnPickCallBack. protected . ◆ m_animateOBJ. bool sofa::gui::qt::RealGUI::m_animateOBJ. protected . ◆ m_animationOBJcounter. int sofa::gui::qt::RealGUI::m_animationOBJcounter. protected . ◆ m_clockBeforeLastStep. clock_t sofa::gui::qt::RealGUI::m_clockB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:9027,Modifiability,inherit,inherited,9027,"editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabel. protected . ◆ gnuplotDirectory. std::string sofa::gui::qt::RealGUI::gnuplotDirectory. protected . ◆ informationOnPickCallBack. InformationOnPickCallBack sofa::gui::qt::RealGUI::informationOnPickCallBack. protected . ◆ m_animateOBJ. bool sofa::gui::qt::RealGUI::m_animateOBJ. protected . ◆ m_animationOBJcounter. int sofa::gui::qt::RealGUI::m_animationOBJcounter. protected . ◆ m_clockBeforeLastStep. clock_t sofa::gui::qt::RealGUI::m_clockB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:9126,Modifiability,config,configDirectoryPath,9126,"editGnuplotDirectory ();  ; virtual void showDocBrowser ();  ; virtual void showAbout ();  ; virtual void showPluginManager ();  ; virtual void showMouseManager ();  ; virtual void showVideoRecorderManager ();  ; virtual void showWindowDataGraph ();  ; virtual void toolsDockMoved ();  . Protected Slots; virtual void changeViewer ();  ; virtual void updateViewerList ();  ; virtual void onSceneGraphRefreshButtonClicked ();  Update the scenegraph and activate the automatic refresh. More...;  ; virtual void sceneGraphViewDirtynessChanged (bool isDirty);  Update the SceneGraph update button to reflect the dirtiness status. More...;  ; virtual void sceneGraphViewLockingChanged (bool isLocked);  Update the SceneGraph update button to reflect the locking status. More...;  ; void propertyDockMoved (Qt::DockWidgetArea a);  ; void appendToDataLogFile (QString);  ; void docBrowserVisibilityChanged (bool);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Attribute details. ◆ background. WDoubleLineEdit* sofa::gui::qt::RealGUI::background[3]. protected . ◆ backgroundImage. QLineEdit* sofa::gui::qt::RealGUI::backgroundImage. protected . ◆ currentTab. QWidget* sofa::gui::qt::RealGUI::currentTab. protected . ◆ fpsLabel. QLabel* sofa::gui::qt::RealGUI::fpsLabel. protected . ◆ gnuplotDirectory. std::string sofa::gui::qt::RealGUI::gnuplotDirectory. protected . ◆ informationOnPickCallBack. InformationOnPickCallBack sofa::gui::qt::RealGUI::informationOnPickCallBack. protected . ◆ m_animateOBJ. bool sofa::gui::qt::RealGUI::m_animateOBJ. protected . ◆ m_animationOBJcounter. int sofa::gui::qt::RealGUI::m_animationOBJcounter. protected . ◆ m_clockBeforeLastStep. clock_t sofa::gui::qt::RealGUI::m_clockB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:11247,Modifiability,plugin,pluginManagerDialog,11247,"umpStateStream. std::ofstream* sofa::gui::qt::RealGUI::m_dumpStateStream. protected . ◆ m_dumpVisitorStream. std::ostringstream sofa::gui::qt::RealGUI::m_dumpVisitorStream. protected . ◆ m_enableInteraction. bool sofa::gui::qt::RealGUI::m_enableInteraction {false}. protected . ◆ m_exportGnuplot. bool sofa::gui::qt::RealGUI::m_exportGnuplot. protected . ◆ m_filelistener. sofa::helper::system::FileEventListener* sofa::gui::qt::RealGUI::m_filelistener {nullptr}. protected . ◆ m_fullScreen. bool sofa::gui::qt::RealGUI::m_fullScreen. protected . ◆ m_modifiedLogFiles. std::set<std::string> sofa::gui::qt::RealGUI::m_modifiedLogFiles. protected . Keep track of log files that have been modified since the GUI started. . ◆ m_viewer. sofa::gui::qt::viewer::SofaViewer* sofa::gui::qt::RealGUI::m_viewer. protected . ◆ mSimulation. sofa::simulation::Node::SPtr sofa::gui::qt::RealGUI::mSimulation. protected . ◆ pathDumpVisitor. std::string sofa::gui::qt::RealGUI::pathDumpVisitor. protected . ◆ pluginManagerDialog. SofaPluginManager* sofa::gui::qt::RealGUI::pluginManagerDialog. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::RealGUI::propertyWidget. protected . ◆ recentlyOpenedFilesManager. QMenuFilesRecentlyOpened sofa::gui::qt::RealGUI::recentlyOpenedFilesManager. protected . ◆ simulationGraph. QSofaListView* sofa::gui::qt::RealGUI::simulationGraph. ◆ simulationName. std::string sofa::gui::qt::RealGUI::simulationName. protected . ◆ statWidget. QSofaStatWidget* sofa::gui::qt::RealGUI::statWidget. protected . ◆ timeLabel. QLabel* sofa::gui::qt::RealGUI::timeLabel. protected . ◆ timerIdle. QTimer* sofa::gui::qt::RealGUI::timerIdle. protected . ◆ timerStep. QTimer* sofa::gui::qt::RealGUI::timerStep. protected . ◆ viewerMap. std::map< helper::SofaViewerFactory::Key, QAction* > sofa::gui::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:11311,Modifiability,plugin,pluginManagerDialog,11311,"::RealGUI::m_dumpStateStream. protected . ◆ m_dumpVisitorStream. std::ostringstream sofa::gui::qt::RealGUI::m_dumpVisitorStream. protected . ◆ m_enableInteraction. bool sofa::gui::qt::RealGUI::m_enableInteraction {false}. protected . ◆ m_exportGnuplot. bool sofa::gui::qt::RealGUI::m_exportGnuplot. protected . ◆ m_filelistener. sofa::helper::system::FileEventListener* sofa::gui::qt::RealGUI::m_filelistener {nullptr}. protected . ◆ m_fullScreen. bool sofa::gui::qt::RealGUI::m_fullScreen. protected . ◆ m_modifiedLogFiles. std::set<std::string> sofa::gui::qt::RealGUI::m_modifiedLogFiles. protected . Keep track of log files that have been modified since the GUI started. . ◆ m_viewer. sofa::gui::qt::viewer::SofaViewer* sofa::gui::qt::RealGUI::m_viewer. protected . ◆ mSimulation. sofa::simulation::Node::SPtr sofa::gui::qt::RealGUI::mSimulation. protected . ◆ pathDumpVisitor. std::string sofa::gui::qt::RealGUI::pathDumpVisitor. protected . ◆ pluginManagerDialog. SofaPluginManager* sofa::gui::qt::RealGUI::pluginManagerDialog. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::RealGUI::propertyWidget. protected . ◆ recentlyOpenedFilesManager. QMenuFilesRecentlyOpened sofa::gui::qt::RealGUI::recentlyOpenedFilesManager. protected . ◆ simulationGraph. QSofaListView* sofa::gui::qt::RealGUI::simulationGraph. ◆ simulationName. std::string sofa::gui::qt::RealGUI::simulationName. protected . ◆ statWidget. QSofaStatWidget* sofa::gui::qt::RealGUI::statWidget. protected . ◆ timeLabel. QLabel* sofa::gui::qt::RealGUI::timeLabel. protected . ◆ timerIdle. QTimer* sofa::gui::qt::RealGUI::timerIdle. protected . ◆ timerStep. QTimer* sofa::gui::qt::RealGUI::timerStep. protected . ◆ viewerMap. std::map< helper::SofaViewerFactory::Key, QAction* > sofa::gui::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:5597,Performance,load,loadSimulation,5597,"*filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init ();  init data member from RealGUI for the viewer initialisation in the GUI More...;  ; void createDisplayFlags (Node::SPtr root);  ; void loadSimulation (bool one_step=false);  ; void eventNewStep ();  ; void eventNewTime ();  ; void keyPressEvent (QKeyEvent *e) override;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void initViewer (common::BaseViewer *_viewer) override;  init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) More...;  ; virtual int exitApplication (unsigned int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:17378,Performance,load,loadSimulation,17378,"tViewer) TODO: Find a better way to do this . ◆ getViewer(). BaseViewer * sofa::gui::qt::RealGUI::getViewer ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ helpAbout. virtual void sofa::gui::qt::RealGUI::helpAbout ; (; ). inlinevirtualslot . ◆ init(). void sofa::gui::qt::RealGUI::init ; (; void ; ). protected . init data member from RealGUI for the viewer initialisation in the GUI . ◆ InitApplication(). void sofa::gui::qt::RealGUI::InitApplication ; (; RealGUI * ; _gui). staticprotected . ◆ initViewer(). void sofa::gui::qt::RealGUI::initViewer ; (; common::BaseViewer * ; _viewer). overrideprotectedvirtual . init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ interactionGUI. void sofa::gui::qt::RealGUI::interactionGUI ; (; bool ; value). virtualslot . ◆ keyPressEvent(). void sofa::gui::qt::RealGUI::keyPressEvent ; (; QKeyEvent * ; e). overrideprotected . ◆ loadSimulation(). void sofa::gui::qt::RealGUI::loadSimulation ; (; bool ; one_step = false). protected . ◆ lockAnimation. void sofa::gui::qt::RealGUI::lockAnimation ; (; bool ; value). virtualslot . ◆ mainLoop(). int sofa::gui::qt::RealGUI::mainLoop ; (; ). overridevirtual . Implements sofa::gui::common::BaseGUI. ◆ newRootNode. void sofa::gui::qt::RealGUI::newRootNode ; (; sofa::simulation::Node * ; root, . const char * ; path . ). virtualslot . ◆ newScene. void sofa::gui::qt::RealGUI::newScene ; (; ). signal . ◆ newStep. void sofa::gui::qt::RealGUI::newStep ; (; ). signal . ◆ onSceneGraphRefreshButtonClicked. void sofa::gui::qt::RealGUI::onSceneGraphRefreshButtonClicked ; (; ). protectedvirtualslot . Update the scenegraph and activate the automatic refresh. . ◆ playpauseGUI. void sofa::gui::qt::RealGUI::playpauseGUI ; (; bool ; value). virtualslot . ◆ popupOpenFileSelector. void sofa::gui::qt::RealGUI::popupOpenFileSelector ; (; ). virtualslot . This open popup the file selection windows. . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:17425,Performance,load,loadSimulation,17425," getViewer(). BaseViewer * sofa::gui::qt::RealGUI::getViewer ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ helpAbout. virtual void sofa::gui::qt::RealGUI::helpAbout ; (; ). inlinevirtualslot . ◆ init(). void sofa::gui::qt::RealGUI::init ; (; void ; ). protected . init data member from RealGUI for the viewer initialisation in the GUI . ◆ InitApplication(). void sofa::gui::qt::RealGUI::InitApplication ; (; RealGUI * ; _gui). staticprotected . ◆ initViewer(). void sofa::gui::qt::RealGUI::initViewer ; (; common::BaseViewer * ; _viewer). overrideprotectedvirtual . init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) ; Reimplemented from sofa::gui::common::BaseGUI. ◆ interactionGUI. void sofa::gui::qt::RealGUI::interactionGUI ; (; bool ; value). virtualslot . ◆ keyPressEvent(). void sofa::gui::qt::RealGUI::keyPressEvent ; (; QKeyEvent * ; e). overrideprotected . ◆ loadSimulation(). void sofa::gui::qt::RealGUI::loadSimulation ; (; bool ; one_step = false). protected . ◆ lockAnimation. void sofa::gui::qt::RealGUI::lockAnimation ; (; bool ; value). virtualslot . ◆ mainLoop(). int sofa::gui::qt::RealGUI::mainLoop ; (; ). overridevirtual . Implements sofa::gui::common::BaseGUI. ◆ newRootNode. void sofa::gui::qt::RealGUI::newRootNode ; (; sofa::simulation::Node * ; root, . const char * ; path . ). virtualslot . ◆ newScene. void sofa::gui::qt::RealGUI::newScene ; (; ). signal . ◆ newStep. void sofa::gui::qt::RealGUI::newStep ; (; ). signal . ◆ onSceneGraphRefreshButtonClicked. void sofa::gui::qt::RealGUI::onSceneGraphRefreshButtonClicked ; (; ). protectedvirtualslot . Update the scenegraph and activate the automatic refresh. . ◆ playpauseGUI. void sofa::gui::qt::RealGUI::playpauseGUI ; (; bool ; value). virtualslot . ◆ popupOpenFileSelector. void sofa::gui::qt::RealGUI::popupOpenFileSelector ; (; ). virtualslot . This open popup the file selection windows. . ◆ propertyDockMoved. void sofa::gui::qt::RealGUI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:1612,Testability,log,log,1612,"s Reference . #include <RealGUI.h>. Inheritance diagram for sofa::gui::qt::RealGUI:. [legend]. Public Attributes; QSofaListView * simulationGraph;  . Protected Attributes; QLabel * fpsLabel;  ; QLabel * timeLabel;  ; bool m_dumpState;  ; std::ofstream * m_dumpStateStream;  ; std::ostringstream m_dumpVisitorStream;  ; bool m_exportGnuplot;  ; bool m_animateOBJ;  ; int m_animationOBJcounter;  ; bool m_displayComputationTime;  ; bool m_fullScreen;  ; sofa::gui::qt::viewer::SofaViewer * m_viewer;  ; clock_t m_clockBeforeLastStep;  ; QDisplayPropertyWidget * propertyWidget;  ; std::map< helper::SofaViewerFactory::Key, QAction * > viewerMap;  list of all viewer key name (for creation) mapped to its QAction in the GUI More...;  ; InformationOnPickCallBack informationOnPickCallBack;  ; QWidget * currentTab;  ; QSofaStatWidget * statWidget;  ; QTimer * timerStep;  ; QTimer * timerIdle;  ; WDoubleLineEdit * background [3];  ; QLineEdit * backgroundImage;  ; SofaPluginManager * pluginManagerDialog;  ; QMenuFilesRecentlyOpened recentlyOpenedFilesManager;  ; std::string simulationName;  ; std::string gnuplotDirectory;  ; std::string pathDumpVisitor;  ; std::set< std::string > m_modifiedLogFiles;  Keep track of log files that have been modified since the GUI started. More...;  ; bool m_enableInteraction {false};  ; sofa::simulation::Node::SPtr mSimulation;  ; sofa::helper::system::FileEventListener * m_filelistener {nullptr};  . Public Member Functions;  RealGUI (const char *viewername);  ;  ~RealGUI () override;  ; void showFPS (double fps) override;  Force the displayed FPS value (if any) More...;  ; void stepMainLoop () override;  ; int mainLoop () override;  ; int closeGUI () override;  Close the GUI. More...;  ; sofa::simulation::Node * currentSimulation () override;  Get the rootNode of the sofa scene. More...;  ; virtual void fileOpen (std::string filename, bool temporaryFile=false, bool reload=false);  ; virtual void fileOpenSimu (std::string filename);  ; virtual void set",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:10916,Testability,log,log,10916,ofa::gui::qt::RealGUI::m_animationOBJcounter. protected . ◆ m_clockBeforeLastStep. clock_t sofa::gui::qt::RealGUI::m_clockBeforeLastStep. protected . ◆ m_displayComputationTime. bool sofa::gui::qt::RealGUI::m_displayComputationTime. protected . ◆ m_dumpState. bool sofa::gui::qt::RealGUI::m_dumpState. protected . ◆ m_dumpStateStream. std::ofstream* sofa::gui::qt::RealGUI::m_dumpStateStream. protected . ◆ m_dumpVisitorStream. std::ostringstream sofa::gui::qt::RealGUI::m_dumpVisitorStream. protected . ◆ m_enableInteraction. bool sofa::gui::qt::RealGUI::m_enableInteraction {false}. protected . ◆ m_exportGnuplot. bool sofa::gui::qt::RealGUI::m_exportGnuplot. protected . ◆ m_filelistener. sofa::helper::system::FileEventListener* sofa::gui::qt::RealGUI::m_filelistener {nullptr}. protected . ◆ m_fullScreen. bool sofa::gui::qt::RealGUI::m_fullScreen. protected . ◆ m_modifiedLogFiles. std::set<std::string> sofa::gui::qt::RealGUI::m_modifiedLogFiles. protected . Keep track of log files that have been modified since the GUI started. . ◆ m_viewer. sofa::gui::qt::viewer::SofaViewer* sofa::gui::qt::RealGUI::m_viewer. protected . ◆ mSimulation. sofa::simulation::Node::SPtr sofa::gui::qt::RealGUI::mSimulation. protected . ◆ pathDumpVisitor. std::string sofa::gui::qt::RealGUI::pathDumpVisitor. protected . ◆ pluginManagerDialog. SofaPluginManager* sofa::gui::qt::RealGUI::pluginManagerDialog. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::RealGUI::propertyWidget. protected . ◆ recentlyOpenedFilesManager. QMenuFilesRecentlyOpened sofa::gui::qt::RealGUI::recentlyOpenedFilesManager. protected . ◆ simulationGraph. QSofaListView* sofa::gui::qt::RealGUI::simulationGraph. ◆ simulationName. std::string sofa::gui::qt::RealGUI::simulationName. protected . ◆ statWidget. QSofaStatWidget* sofa::gui::qt::RealGUI::statWidget. protected . ◆ timeLabel. QLabel* sofa::gui::qt::RealGUI::timeLabel. protected . ◆ timerIdle. QTimer* sofa::gui::qt::RealGUI::timerIdle. protected . ◆ timerS,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7400,Usability,clear,clear,7400,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13044,Usability,clear,clear,13044,"::Key, QAction* > sofa::gui::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propag",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13080,Usability,clear,clear,13080,"i::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propagate the argument when we c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::RealGUIFileListener Member List . This is the complete list of members for sofa::gui::qt::RealGUIFileListener, including all inherited members. fileHasChanged(const std::string &filename) overridesofa::gui::qt::RealGUIFileListenerinlinevirtual; m_realguisofa::gui::qt::RealGUIFileListener; RealGUIFileListener(RealGUI *realgui)sofa::gui::qt::RealGUIFileListenerinline; ~FileEventListener()sofa::helper::system::FileEventListenerinlinevirtual; ~RealGUIFileListener() overridesofa::gui::qt::RealGUIFileListenerinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html:262,Modifiability,Inherit,Inheritance,262,﻿. SOFA API: sofa::gui::qt::RealGUIFileListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::RealGUIFileListener Class Reference . Inheritance diagram for sofa::gui::qt::RealGUIFileListener:. [legend]. Public Attributes; RealGUI * m_realgui;  . Public Member Functions;  RealGUIFileListener (RealGUI *realgui);  ;  ~RealGUIFileListener () override;  ; void fileHasChanged (const std::string &filename) override;  ;  Public Member Functions inherited from sofa::helper::system::FileEventListener; virtual ~FileEventListener ();  . Attribute details. ◆ m_realgui. RealGUI* sofa::gui::qt::RealGUIFileListener::m_realgui. Constructor details. ◆ RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::RealGUIFileListener ; (; RealGUI * ; realgui). inline . ◆ ~RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::~RealGUIFileListener ; (; ). inlineoverride . Function details. ◆ fileHasChanged(). void sofa::gui::qt::RealGUIFileListener::fileHasChanged ; (; const std::string & ; filename). inlineoverridevirtual . Implements sofa::helper::system::FileEventListener. sofaguiqtRealGUIFileListener; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html:571,Modifiability,inherit,inherited,571,﻿. SOFA API: sofa::gui::qt::RealGUIFileListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::RealGUIFileListener Class Reference . Inheritance diagram for sofa::gui::qt::RealGUIFileListener:. [legend]. Public Attributes; RealGUI * m_realgui;  . Public Member Functions;  RealGUIFileListener (RealGUI *realgui);  ;  ~RealGUIFileListener () override;  ; void fileHasChanged (const std::string &filename) override;  ;  Public Member Functions inherited from sofa::helper::system::FileEventListener; virtual ~FileEventListener ();  . Attribute details. ◆ m_realgui. RealGUI* sofa::gui::qt::RealGUIFileListener::m_realgui. Constructor details. ◆ RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::RealGUIFileListener ; (; RealGUI * ; realgui). inline . ◆ ~RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::~RealGUIFileListener ; (; ). inlineoverride . Function details. ◆ fileHasChanged(). void sofa::gui::qt::RealGUIFileListener::fileHasChanged ; (; const std::string & ; filename). inlineoverridevirtual . Implements sofa::helper::system::FileEventListener. sofaguiqtRealGUIFileListener; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2678,Deployability,update,updateDataValue,2678,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2726,Deployability,update,updateVisibility,2726,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2771,Deployability,update,updateWidgetValue,2771,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SimpleDataWidget< T, Container > Member List . This is the complete list of members for sofa::gui::qt::SimpleDataWidget< T, Container >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:115,Usability,Simpl,SimpleDataWidget,115,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SimpleDataWidget< T, Container > Member List . This is the complete list of members for sofa::gui::qt::SimpleDataWidget< T, Container >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:218,Usability,Simpl,SimpleDataWidget,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SimpleDataWidget< T, Container > Member List . This is the complete list of members for sofa::gui::qt::SimpleDataWidget< T, Container >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:353,Usability,Simpl,SimpleDataWidget,353," baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:752,Usability,Simpl,SimpleDataWidget,752," baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:831,Usability,Simpl,SimpleDataWidget,831," baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, Container >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1399,Usability,Simpl,SimpleDataWidget,1399,"::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1688,Usability,Simpl,SimpleDataWidget,1688,"ui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1754,Usability,Simpl,SimpleDataWidget,1754,"Widget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::Data",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1830,Usability,Simpl,SimpleDataWidget,1830,"ataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2117,Usability,Simpl,SimpleDataWidget,2117,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2259,Usability,Simpl,SimpleDataWidget,2259,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2364,Usability,Simpl,SimpleDataWidget,2364,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2442,Usability,Simpl,SimpleDataWidget,2442,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:2899,Usability,Simpl,SimpleDataWidget,2899,"signal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2494,Deployability,update,updateVisibility,2494,"...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3451,Deployability,update,updateDataValue,3451,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3479,Deployability,update,updateWidgetValue,3479,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:451,Modifiability,Inherit,Inheritance,451,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:846,Modifiability,inherit,inherited,846,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:936,Modifiability,inherit,inherited,936,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:1453,Modifiability,config,configure,1453," BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:1833,Modifiability,inherit,inherited,1833,"true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2162,Modifiability,inherit,inherited,2162,"true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2796,Modifiability,Inherit,Inherited,2796,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2847,Modifiability,inherit,inherited,2847,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3025,Modifiability,inherit,inherited,3025,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3237,Modifiability,inherit,inherited,3237,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3404,Modifiability,inherit,inherited,3404,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:5324,Modifiability,config,configure,5324,"eWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtSimpleDataWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2409,Security,access,accessor,2409,"true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:28,Usability,Simpl,SimpleDataWidget,28,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:249,Usability,Simpl,SimpleDataWidget,249,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:319,Usability,Simpl,SimpleDataWidget,319,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:490,Usability,Simpl,SimpleDataWidget,490,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:641,Usability,Simpl,SimpleDataWidget,641,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:1258,Usability,Simpl,SimpleDataWidget,1258," BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3689,Usability,Simpl,SimpleDataWidget,3689,"...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3769,Usability,Simpl,SimpleDataWidget,3769,"...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3869,Usability,Simpl,SimpleDataWidget,3869,"late<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3903,Usability,Simpl,SimpleDataWidget,3903,"late<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:4128,Usability,Simpl,SimpleDataWidget,4128," ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_wi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:4519,Usability,Simpl,SimpleDataWidget,4519," b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:4881,Usability,Simpl,SimpleDataWidget,4881,"tainer >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:5190,Usability,Simpl,SimpleDataWidget,5190,"eWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtSimpleDataWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:5533,Usability,Simpl,SimpleDataWidget,5533,"eWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtSimpleDataWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:5728,Usability,Simpl,SimpleDataWidget,5728,"eWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtSimpleDataWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaEnrichedPage Member List . This is the complete list of members for sofa::gui::qt::SofaEnrichedPage, including all inherited members. acceptNavigationRequest(const QUrl &url, QWebEnginePage::NavigationType type, bool)sofa::gui::qt::SofaEnrichedPage; isSofaTarget(const QUrl &url)sofa::gui::qt::SofaEnrichedPage; linkClicked(const QUrl &)sofa::gui::qt::SofaEnrichedPagesignal; SofaEnrichedPage(QObject *parent=0)sofa::gui::qt::SofaEnrichedPage. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html:272,Modifiability,Inherit,Inheritance,272,"﻿. SOFA API: sofa::gui::qt::SofaEnrichedPage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaEnrichedPage Class Reference . #include <QDocBrowser.h>. Inheritance diagram for sofa::gui::qt::SofaEnrichedPage:. [legend]. Public Member Functions;  SofaEnrichedPage (QObject *parent=0);  ; bool isSofaTarget (const QUrl &url);  ; bool acceptNavigationRequest (const QUrl &url, QWebEnginePage::NavigationType type, bool);  . Signals; void linkClicked (const QUrl &);  . Constructor details. ◆ SofaEnrichedPage(). sofa::gui::qt::SofaEnrichedPage::SofaEnrichedPage ; (; QObject * ; parent = 0). PRIVATE OBJECTS ////////////////////////////////// May be moved to their own .cpp/.hh if one day someone needs them. . Function details. ◆ acceptNavigationRequest(). bool sofa::gui::qt::SofaEnrichedPage::acceptNavigationRequest ; (; const QUrl & ; url, . QWebEnginePage::NavigationType ; type, . bool ;  . ). ◆ isSofaTarget(). bool sofa::gui::qt::SofaEnrichedPage::isSofaTarget ; (; const QUrl & ; url). ◆ linkClicked. void sofa::gui::qt::SofaEnrichedPage::linkClicked ; (; const QUrl & ; ). signal . sofaguiqtSofaEnrichedPage; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html:619,Deployability,update,updateContent,619,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaMouseManager Member List . This is the complete list of members for sofa::gui::qt::SofaMouseManager, including all inherited members. getMapIndexOperation()sofa::gui::qt::SofaMouseManagerinline; mapIndexOperationsofa::gui::qt::SofaMouseManagerprotected; pickHandlersofa::gui::qt::SofaMouseManagerprotected; selectOperation(int)sofa::gui::qt::SofaMouseManagerslot; setPickHandler(common::PickHandler *)sofa::gui::qt::SofaMouseManager; SofaMouseManager(QWidget *parent)sofa::gui::qt::SofaMouseManager; updateContent()sofa::gui::qt::SofaMouseManager; updateOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::qt::SofaMouseManager; updateOperation(common::MOUSE_BUTTON button, const std::string &id)sofa::gui::qt::SofaMouseManager; updateOperation(common::Operation *op)sofa::gui::qt::SofaMouseManagerprotected; usedOperationssofa::gui::qt::SofaMouseManagerprotected; ~SofaMouseManager() overridesofa::gui::qt::SofaMouseManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html:667,Deployability,update,updateOperation,667,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaMouseManager Member List . This is the complete list of members for sofa::gui::qt::SofaMouseManager, including all inherited members. getMapIndexOperation()sofa::gui::qt::SofaMouseManagerinline; mapIndexOperationsofa::gui::qt::SofaMouseManagerprotected; pickHandlersofa::gui::qt::SofaMouseManagerprotected; selectOperation(int)sofa::gui::qt::SofaMouseManagerslot; setPickHandler(common::PickHandler *)sofa::gui::qt::SofaMouseManager; SofaMouseManager(QWidget *parent)sofa::gui::qt::SofaMouseManager; updateContent()sofa::gui::qt::SofaMouseManager; updateOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::qt::SofaMouseManager; updateOperation(common::MOUSE_BUTTON button, const std::string &id)sofa::gui::qt::SofaMouseManager; updateOperation(common::Operation *op)sofa::gui::qt::SofaMouseManagerprotected; usedOperationssofa::gui::qt::SofaMouseManagerprotected; ~SofaMouseManager() overridesofa::gui::qt::SofaMouseManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html:770,Deployability,update,updateOperation,770,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaMouseManager Member List . This is the complete list of members for sofa::gui::qt::SofaMouseManager, including all inherited members. getMapIndexOperation()sofa::gui::qt::SofaMouseManagerinline; mapIndexOperationsofa::gui::qt::SofaMouseManagerprotected; pickHandlersofa::gui::qt::SofaMouseManagerprotected; selectOperation(int)sofa::gui::qt::SofaMouseManagerslot; setPickHandler(common::PickHandler *)sofa::gui::qt::SofaMouseManager; SofaMouseManager(QWidget *parent)sofa::gui::qt::SofaMouseManager; updateContent()sofa::gui::qt::SofaMouseManager; updateOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::qt::SofaMouseManager; updateOperation(common::MOUSE_BUTTON button, const std::string &id)sofa::gui::qt::SofaMouseManager; updateOperation(common::Operation *op)sofa::gui::qt::SofaMouseManagerprotected; usedOperationssofa::gui::qt::SofaMouseManagerprotected; ~SofaMouseManager() overridesofa::gui::qt::SofaMouseManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html:870,Deployability,update,updateOperation,870,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaMouseManager Member List . This is the complete list of members for sofa::gui::qt::SofaMouseManager, including all inherited members. getMapIndexOperation()sofa::gui::qt::SofaMouseManagerinline; mapIndexOperationsofa::gui::qt::SofaMouseManagerprotected; pickHandlersofa::gui::qt::SofaMouseManagerprotected; selectOperation(int)sofa::gui::qt::SofaMouseManagerslot; setPickHandler(common::PickHandler *)sofa::gui::qt::SofaMouseManager; SofaMouseManager(QWidget *parent)sofa::gui::qt::SofaMouseManager; updateContent()sofa::gui::qt::SofaMouseManager; updateOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::qt::SofaMouseManager; updateOperation(common::MOUSE_BUTTON button, const std::string &id)sofa::gui::qt::SofaMouseManager; updateOperation(common::Operation *op)sofa::gui::qt::SofaMouseManagerprotected; usedOperationssofa::gui::qt::SofaMouseManagerprotected; ~SofaMouseManager() overridesofa::gui::qt::SofaMouseManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaMouseManager Member List . This is the complete list of members for sofa::gui::qt::SofaMouseManager, including all inherited members. getMapIndexOperation()sofa::gui::qt::SofaMouseManagerinline; mapIndexOperationsofa::gui::qt::SofaMouseManagerprotected; pickHandlersofa::gui::qt::SofaMouseManagerprotected; selectOperation(int)sofa::gui::qt::SofaMouseManagerslot; setPickHandler(common::PickHandler *)sofa::gui::qt::SofaMouseManager; SofaMouseManager(QWidget *parent)sofa::gui::qt::SofaMouseManager; updateContent()sofa::gui::qt::SofaMouseManager; updateOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::qt::SofaMouseManager; updateOperation(common::MOUSE_BUTTON button, const std::string &id)sofa::gui::qt::SofaMouseManager; updateOperation(common::Operation *op)sofa::gui::qt::SofaMouseManagerprotected; usedOperationssofa::gui::qt::SofaMouseManagerprotected; ~SofaMouseManager() overridesofa::gui::qt::SofaMouseManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:686,Deployability,update,updateContent,686,"﻿. SOFA API: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:819,Deployability,update,updateOperation,819,"﻿. SOFA API: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:900,Deployability,update,updateOperation,900,"﻿. SOFA API: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:1006,Deployability,update,updateOperation,1006,"I: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2021,Deployability,update,updateContent,2021," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2076,Deployability,update,updateContent,2076," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2100,Deployability,update,updateOperation,2100," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2163,Deployability,update,updateOperation,2163," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2249,Deployability,update,updateOperation,2249," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2312,Deployability,update,updateOperation,2312," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2374,Deployability,update,updateOperation,2374," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:2437,Deployability,update,updateOperation,2437," SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHandler * ; picker). ◆ updateContent(). void sofa::gui::qt::SofaMouseManager::updateContent ; (; ). ◆ updateOperation() [1/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::MOUSE_BUTTON ; button, . const std::string & ; id . ). ◆ updateOperation() [2/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; common::Operation * ; op). protected . ◆ updateOperation() [3/3]. void sofa::gui::qt::SofaMouseManager::updateOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). sofaguiqtSofaMouseManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:336,Modifiability,Inherit,Inheritance,336,"﻿. SOFA API: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html:536,Deployability,update,updateComponentList,536,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaPluginManager Member List . This is the complete list of members for sofa::gui::qt::SofaPluginManager, including all inherited members. addLibrary()sofa::gui::qt::SofaPluginManagerslot; libraryAdded()sofa::gui::qt::SofaPluginManagersignal; libraryRemoved()sofa::gui::qt::SofaPluginManagersignal; removeLibrary()sofa::gui::qt::SofaPluginManagerslot; SofaPluginManager(QWidget *parent)sofa::gui::qt::SofaPluginManager; updateComponentList()sofa::gui::qt::SofaPluginManagerslot; updateDescription()sofa::gui::qt::SofaPluginManagerslot; updatePluginsListView()sofa::gui::qt::SofaPluginManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html:595,Deployability,update,updateDescription,595,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaPluginManager Member List . This is the complete list of members for sofa::gui::qt::SofaPluginManager, including all inherited members. addLibrary()sofa::gui::qt::SofaPluginManagerslot; libraryAdded()sofa::gui::qt::SofaPluginManagersignal; libraryRemoved()sofa::gui::qt::SofaPluginManagersignal; removeLibrary()sofa::gui::qt::SofaPluginManagerslot; SofaPluginManager(QWidget *parent)sofa::gui::qt::SofaPluginManager; updateComponentList()sofa::gui::qt::SofaPluginManagerslot; updateDescription()sofa::gui::qt::SofaPluginManagerslot; updatePluginsListView()sofa::gui::qt::SofaPluginManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html:652,Deployability,update,updatePluginsListView,652,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaPluginManager Member List . This is the complete list of members for sofa::gui::qt::SofaPluginManager, including all inherited members. addLibrary()sofa::gui::qt::SofaPluginManagerslot; libraryAdded()sofa::gui::qt::SofaPluginManagersignal; libraryRemoved()sofa::gui::qt::SofaPluginManagersignal; removeLibrary()sofa::gui::qt::SofaPluginManagerslot; SofaPluginManager(QWidget *parent)sofa::gui::qt::SofaPluginManager; updateComponentList()sofa::gui::qt::SofaPluginManagerslot; updateDescription()sofa::gui::qt::SofaPluginManagerslot; updatePluginsListView()sofa::gui::qt::SofaPluginManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaPluginManager Member List . This is the complete list of members for sofa::gui::qt::SofaPluginManager, including all inherited members. addLibrary()sofa::gui::qt::SofaPluginManagerslot; libraryAdded()sofa::gui::qt::SofaPluginManagersignal; libraryRemoved()sofa::gui::qt::SofaPluginManagersignal; removeLibrary()sofa::gui::qt::SofaPluginManagerslot; SofaPluginManager(QWidget *parent)sofa::gui::qt::SofaPluginManager; updateComponentList()sofa::gui::qt::SofaPluginManagerslot; updateDescription()sofa::gui::qt::SofaPluginManagerslot; updatePluginsListView()sofa::gui::qt::SofaPluginManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:436,Deployability,update,updatePluginsListView,436,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:594,Deployability,update,updateComponentList,594,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:626,Deployability,update,updateDescription,626,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1131,Deployability,update,updateComponentList,1131,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1191,Deployability,update,updateComponentList,1191,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1228,Deployability,update,updateDescription,1228,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1286,Deployability,update,updateDescription,1286,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1321,Deployability,update,updatePluginsListView,1321,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:1385,Deployability,update,updatePluginsListView,1385,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:296,Modifiability,Inherit,Inheritance,296,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaSceneGraphWidget Member List . This is the complete list of members for sofa::gui::qt::SofaSceneGraphWidget, including all inherited members. dirtynessChanged(bool isDirty)sofa::gui::qt::SofaSceneGraphWidgetsignal; isDirty()sofa::gui::qt::SofaSceneGraphWidget; isLocked()sofa::gui::qt::SofaSceneGraphWidget; lock()sofa::gui::qt::SofaSceneGraphWidget; lockingChanged(bool isLocked)sofa::gui::qt::SofaSceneGraphWidgetsignal; m_isDirtysofa::gui::qt::SofaSceneGraphWidgetprotected; m_isLockedsofa::gui::qt::SofaSceneGraphWidgetprotected; setViewToDirty()sofa::gui::qt::SofaSceneGraphWidget; SofaSceneGraphWidget(QWidget *parent)sofa::gui::qt::SofaSceneGraphWidgetinline; unLock()sofa::gui::qt::SofaSceneGraphWidget; ~SofaSceneGraphWidget()sofa::gui::qt::SofaSceneGraphWidgetinline. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:645,Deployability,update,updates,645,﻿. SOFA API: sofa::gui::qt::SofaSceneGraphWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaSceneGraphWidget Class Reference . #include <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore wit,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1260,Deployability,update,updated,1260,"ude <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:2122,Deployability,update,update,2122,"ed (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene graph change is disable. . ◆ lock(). void sofa::gui::qt::SofaSceneGraphWidget::lock ; (; ). ◆ lockingChanged. void sofa::gui::qt::SofaSceneGraphWidget::lockingChanged ; (; bool ; isLocked). signal . Connect to this signal to be notified when the locking status changed. . ◆ setViewToDirty(). void sofa::gui::qt::SofaSceneGraphWidget::setViewToDirty ; (; ). call this method to indicate that the internal model has changed and thus the view is now dirty. . ◆ unLock(). void sofa::gui::qt::SofaSceneGraphWidget::unLock ; (; ). sofaguiqtSofaSceneGraphWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:2135,Deployability,update,update,2135,"ed (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene graph change is disable. . ◆ lock(). void sofa::gui::qt::SofaSceneGraphWidget::lock ; (; ). ◆ lockingChanged. void sofa::gui::qt::SofaSceneGraphWidget::lockingChanged ; (; bool ; isLocked). signal . Connect to this signal to be notified when the locking status changed. . ◆ setViewToDirty(). void sofa::gui::qt::SofaSceneGraphWidget::setViewToDirty ; (; ). call this method to indicate that the internal model has changed and thus the view is now dirty. . ◆ unLock(). void sofa::gui::qt::SofaSceneGraphWidget::unLock ; (; ). sofaguiqtSofaSceneGraphWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:2262,Deployability,update,updates,2262,"ed (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene graph change is disable. . ◆ lock(). void sofa::gui::qt::SofaSceneGraphWidget::lock ; (; ). ◆ lockingChanged. void sofa::gui::qt::SofaSceneGraphWidget::lockingChanged ; (; bool ; isLocked). signal . Connect to this signal to be notified when the locking status changed. . ◆ setViewToDirty(). void sofa::gui::qt::SofaSceneGraphWidget::setViewToDirty ; (; ). call this method to indicate that the internal model has changed and thus the view is now dirty. . ◆ unLock(). void sofa::gui::qt::SofaSceneGraphWidget::unLock ; (; ). sofaguiqtSofaSceneGraphWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1132,Integrability,synchroniz,synchronized,1132,"ted Attributes |; Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaSceneGraphWidget Class Reference . #include <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1977,Integrability,synchroniz,synchronized,1977,"ed (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene graph change is disable. . ◆ lock(). void sofa::gui::qt::SofaSceneGraphWidget::lock ; (; ). ◆ lockingChanged. void sofa::gui::qt::SofaSceneGraphWidget::lockingChanged ; (; bool ; isLocked). signal . Connect to this signal to be notified when the locking status changed. . ◆ setViewToDirty(). void sofa::gui::qt::SofaSceneGraphWidget::setViewToDirty ; (; ). call this method to indicate that the internal model has changed and thus the view is now dirty. . ◆ unLock(). void sofa::gui::qt::SofaSceneGraphWidget::unLock ; (; ). sofaguiqtSofaSceneGraphWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:313,Modifiability,Inherit,Inheritance,313,﻿. SOFA API: sofa::gui::qt::SofaSceneGraphWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaSceneGraphWidget Class Reference . #include <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore wit,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1273,Performance,perform,performance,1273,"ude <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html:1524,Deployability,update,updateContent,1524,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaVideoRecorderManager Member List . This is the complete list of members for sofa::gui::qt::SofaVideoRecorderManager, including all inherited members. captureOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; close()sofa::gui::qt::SofaVideoRecorderManagervirtualslot; currentRecordingTypesofa::gui::qt::SofaVideoRecorderManagerprotected; getBitrate()sofa::gui::qt::SofaVideoRecorderManager; getCodecExtension()sofa::gui::qt::SofaVideoRecorderManager; getCodecName()sofa::gui::qt::SofaVideoRecorderManager; getFramerate()sofa::gui::qt::SofaVideoRecorderManager; getFrameskip()sofa::gui::qt::SofaVideoRecorderManager; getInstance()sofa::gui::qt::SofaVideoRecorderManagerinlinestatic; getRecordingType()sofa::gui::qt::SofaVideoRecorderManagerinline; internalAddWidget(QWidget *parent, QWidget *widgetToAdd)sofa::gui::qt::SofaVideoRecorderManagerstatic; MOVIE enum valuesofa::gui::qt::SofaVideoRecorderManager; movieOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; onChangeRecordingType()sofa::gui::qt::SofaVideoRecorderManagervirtualslot; realtime()sofa::gui::qt::SofaVideoRecorderManager; RecordingType enum namesofa::gui::qt::SofaVideoRecorderManager; SCREENSHOTS enum valuesofa::gui::qt::SofaVideoRecorderManager; screenshotsOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; SofaVideoRecorderManager(QWidget *parent=Q_NULLPTR)sofa::gui::qt::SofaVideoRecorderManager; updateContent()sofa::gui::qt::SofaVideoRecorderManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaVideoRecorderManager Member List . This is the complete list of members for sofa::gui::qt::SofaVideoRecorderManager, including all inherited members. captureOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; close()sofa::gui::qt::SofaVideoRecorderManagervirtualslot; currentRecordingTypesofa::gui::qt::SofaVideoRecorderManagerprotected; getBitrate()sofa::gui::qt::SofaVideoRecorderManager; getCodecExtension()sofa::gui::qt::SofaVideoRecorderManager; getCodecName()sofa::gui::qt::SofaVideoRecorderManager; getFramerate()sofa::gui::qt::SofaVideoRecorderManager; getFrameskip()sofa::gui::qt::SofaVideoRecorderManager; getInstance()sofa::gui::qt::SofaVideoRecorderManagerinlinestatic; getRecordingType()sofa::gui::qt::SofaVideoRecorderManagerinline; internalAddWidget(QWidget *parent, QWidget *widgetToAdd)sofa::gui::qt::SofaVideoRecorderManagerstatic; MOVIE enum valuesofa::gui::qt::SofaVideoRecorderManager; movieOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; onChangeRecordingType()sofa::gui::qt::SofaVideoRecorderManagervirtualslot; realtime()sofa::gui::qt::SofaVideoRecorderManager; RecordingType enum namesofa::gui::qt::SofaVideoRecorderManager; SCREENSHOTS enum valuesofa::gui::qt::SofaVideoRecorderManager; screenshotsOptionsWidgetsofa::gui::qt::SofaVideoRecorderManagerprotected; SofaVideoRecorderManager(QWidget *parent=Q_NULLPTR)sofa::gui::qt::SofaVideoRecorderManager; updateContent()sofa::gui::qt::SofaVideoRecorderManager. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html:720,Deployability,update,updateContent,720,"﻿. SOFA API: sofa::gui::qt::SofaVideoRecorderManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaVideoRecorderManager Class Reference . #include <SofaVideoRecorderManager.h>. Inheritance diagram for sofa::gui::qt::SofaVideoRecorderManager:. [legend]. Protected Attributes; RecordingType currentRecordingType;  ; CaptureOptionsWidget * captureOptionsWidget;  ; MovieOptionsWidget * movieOptionsWidget;  ; QWidget * screenshotsOptionsWidget;  . Public Member Functions;  SofaVideoRecorderManager (QWidget *parent=Q_NULLPTR);  ; void updateContent ();  ; std::string getCodecExtension ();  ; std::string getCodecName ();  ; unsigned int getFramerate ();  ; unsigned int getBitrate ();  ; bool realtime ();  ; unsigned int getFrameskip ();  ; RecordingType getRecordingType ();  . Static Public Member Functions; static SofaVideoRecorderManager * getInstance ();  ; static void internalAddWidget (QWidget *parent, QWidget *widgetToAdd);  . Public Slots; virtual void onChangeRecordingType ();  ; virtual void close ();  . Attribute details. ◆ captureOptionsWidget. CaptureOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::captureOptionsWidget. protected . ◆ currentRecordingType. RecordingType sofa::gui::qt::SofaVideoRecorderManager::currentRecordingType. protected . ◆ movieOptionsWidget. MovieOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::movieOptionsWidget. protected . ◆ screenshotsOptionsWidget. QWidget* sofa::gui::qt::SofaVideoRecorderManager::screenshotsOptionsWidget. protected . Constructor details. ◆ SofaVideoRecorderManager(). sofa::gui::qt::SofaVideoRecorderManager::SofaVideoRecorderManager ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ close. void sofa::gui::qt::SofaVideoRecorderManager::close ; (; ). virtualslot . ◆ getBitrate(). unsigned int sofa::gui::qt::SofaVideoR",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html:2999,Deployability,update,updateContent,2999,"anager::captureOptionsWidget. protected . ◆ currentRecordingType. RecordingType sofa::gui::qt::SofaVideoRecorderManager::currentRecordingType. protected . ◆ movieOptionsWidget. MovieOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::movieOptionsWidget. protected . ◆ screenshotsOptionsWidget. QWidget* sofa::gui::qt::SofaVideoRecorderManager::screenshotsOptionsWidget. protected . Constructor details. ◆ SofaVideoRecorderManager(). sofa::gui::qt::SofaVideoRecorderManager::SofaVideoRecorderManager ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ close. void sofa::gui::qt::SofaVideoRecorderManager::close ; (; ). virtualslot . ◆ getBitrate(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getBitrate ; (; ). ◆ getCodecExtension(). std::string sofa::gui::qt::SofaVideoRecorderManager::getCodecExtension ; (; ). ◆ getCodecName(). std::string sofa::gui::qt::SofaVideoRecorderManager::getCodecName ; (; ). ◆ getFramerate(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getFramerate ; (; ). ◆ getFrameskip(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getFrameskip ; (; ). ◆ getInstance(). static SofaVideoRecorderManager* sofa::gui::qt::SofaVideoRecorderManager::getInstance ; (; ). inlinestatic . ◆ getRecordingType(). RecordingType sofa::gui::qt::SofaVideoRecorderManager::getRecordingType ; (; ). inline . ◆ internalAddWidget(). void sofa::gui::qt::SofaVideoRecorderManager::internalAddWidget ; (; QWidget * ; parent, . QWidget * ; widgetToAdd . ). static . ◆ onChangeRecordingType. void sofa::gui::qt::SofaVideoRecorderManager::onChangeRecordingType ; (; ). virtualslot . ◆ realtime(). bool sofa::gui::qt::SofaVideoRecorderManager::realtime ; (; ). ◆ updateContent(). void sofa::gui::qt::SofaVideoRecorderManager::updateContent ; (; ). Enum details. ◆ RecordingType. enum sofa::gui::qt::SofaVideoRecorderManager::RecordingType. EnumeratorSCREENSHOTS ; MOVIE . sofaguiqtSofaVideoRecorderManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html:3062,Deployability,update,updateContent,3062,"anager::captureOptionsWidget. protected . ◆ currentRecordingType. RecordingType sofa::gui::qt::SofaVideoRecorderManager::currentRecordingType. protected . ◆ movieOptionsWidget. MovieOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::movieOptionsWidget. protected . ◆ screenshotsOptionsWidget. QWidget* sofa::gui::qt::SofaVideoRecorderManager::screenshotsOptionsWidget. protected . Constructor details. ◆ SofaVideoRecorderManager(). sofa::gui::qt::SofaVideoRecorderManager::SofaVideoRecorderManager ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ close. void sofa::gui::qt::SofaVideoRecorderManager::close ; (; ). virtualslot . ◆ getBitrate(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getBitrate ; (; ). ◆ getCodecExtension(). std::string sofa::gui::qt::SofaVideoRecorderManager::getCodecExtension ; (; ). ◆ getCodecName(). std::string sofa::gui::qt::SofaVideoRecorderManager::getCodecName ; (; ). ◆ getFramerate(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getFramerate ; (; ). ◆ getFrameskip(). unsigned int sofa::gui::qt::SofaVideoRecorderManager::getFrameskip ; (; ). ◆ getInstance(). static SofaVideoRecorderManager* sofa::gui::qt::SofaVideoRecorderManager::getInstance ; (; ). inlinestatic . ◆ getRecordingType(). RecordingType sofa::gui::qt::SofaVideoRecorderManager::getRecordingType ; (; ). inline . ◆ internalAddWidget(). void sofa::gui::qt::SofaVideoRecorderManager::internalAddWidget ; (; QWidget * ; parent, . QWidget * ; widgetToAdd . ). static . ◆ onChangeRecordingType. void sofa::gui::qt::SofaVideoRecorderManager::onChangeRecordingType ; (; ). virtualslot . ◆ realtime(). bool sofa::gui::qt::SofaVideoRecorderManager::realtime ; (; ). ◆ updateContent(). void sofa::gui::qt::SofaVideoRecorderManager::updateContent ; (; ). Enum details. ◆ RecordingType. enum sofa::gui::qt::SofaVideoRecorderManager::RecordingType. EnumeratorSCREENSHOTS ; MOVIE . sofaguiqtSofaVideoRecorderManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html:364,Modifiability,Inherit,Inheritance,364,"﻿. SOFA API: sofa::gui::qt::SofaVideoRecorderManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaVideoRecorderManager Class Reference . #include <SofaVideoRecorderManager.h>. Inheritance diagram for sofa::gui::qt::SofaVideoRecorderManager:. [legend]. Protected Attributes; RecordingType currentRecordingType;  ; CaptureOptionsWidget * captureOptionsWidget;  ; MovieOptionsWidget * movieOptionsWidget;  ; QWidget * screenshotsOptionsWidget;  . Public Member Functions;  SofaVideoRecorderManager (QWidget *parent=Q_NULLPTR);  ; void updateContent ();  ; std::string getCodecExtension ();  ; std::string getCodecName ();  ; unsigned int getFramerate ();  ; unsigned int getBitrate ();  ; bool realtime ();  ; unsigned int getFrameskip ();  ; RecordingType getRecordingType ();  . Static Public Member Functions; static SofaVideoRecorderManager * getInstance ();  ; static void internalAddWidget (QWidget *parent, QWidget *widgetToAdd);  . Public Slots; virtual void onChangeRecordingType ();  ; virtual void close ();  . Attribute details. ◆ captureOptionsWidget. CaptureOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::captureOptionsWidget. protected . ◆ currentRecordingType. RecordingType sofa::gui::qt::SofaVideoRecorderManager::currentRecordingType. protected . ◆ movieOptionsWidget. MovieOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::movieOptionsWidget. protected . ◆ screenshotsOptionsWidget. QWidget* sofa::gui::qt::SofaVideoRecorderManager::screenshotsOptionsWidget. protected . Constructor details. ◆ SofaVideoRecorderManager(). sofa::gui::qt::SofaVideoRecorderManager::SofaVideoRecorderManager ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ close. void sofa::gui::qt::SofaVideoRecorderManager::close ; (; ). virtualslot . ◆ getBitrate(). unsigned int sofa::gui::qt::SofaVideoR",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowDataGraph Member List . This is the complete list of members for sofa::gui::qt::SofaWindowDataGraph, including all inherited members. addSimulationObject(sofa::core::objectmodel::BaseObject *bObject)sofa::gui::qt::SofaWindowDataGraphprotected; clearNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; connectNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; debugNodeGraphsofa::gui::qt::SofaWindowDataGraphprotected; m_exceptionssofa::gui::qt::SofaWindowDataGraphprotected; m_graphScenesofa::gui::qt::SofaWindowDataGraphprotected; m_graphViewsofa::gui::qt::SofaWindowDataGraphprotected; m_posXsofa::gui::qt::SofaWindowDataGraphprotected; m_posYsofa::gui::qt::SofaWindowDataGraphprotected; m_rootNodesofa::gui::qt::SofaWindowDataGraphprotected; m_scaleXsofa::gui::qt::SofaWindowDataGraphprotected; m_scaleYsofa::gui::qt::SofaWindowDataGraphprotected; parseSimulationNode(sofa::simulation::Node *node, int posX=0)sofa::gui::qt::SofaWindowDataGraphprotected; resetNodeGraph(sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; SofaWindowDataGraph(QWidget *parent, sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; ~SofaWindowDataGraph()sofa::gui::qt::SofaWindowDataGraph. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html:369,Usability,clear,clearNodeData,369,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowDataGraph Member List . This is the complete list of members for sofa::gui::qt::SofaWindowDataGraph, including all inherited members. addSimulationObject(sofa::core::objectmodel::BaseObject *bObject)sofa::gui::qt::SofaWindowDataGraphprotected; clearNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; connectNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; debugNodeGraphsofa::gui::qt::SofaWindowDataGraphprotected; m_exceptionssofa::gui::qt::SofaWindowDataGraphprotected; m_graphScenesofa::gui::qt::SofaWindowDataGraphprotected; m_graphViewsofa::gui::qt::SofaWindowDataGraphprotected; m_posXsofa::gui::qt::SofaWindowDataGraphprotected; m_posYsofa::gui::qt::SofaWindowDataGraphprotected; m_rootNodesofa::gui::qt::SofaWindowDataGraphprotected; m_scaleXsofa::gui::qt::SofaWindowDataGraphprotected; m_scaleYsofa::gui::qt::SofaWindowDataGraphprotected; parseSimulationNode(sofa::simulation::Node *node, int posX=0)sofa::gui::qt::SofaWindowDataGraphprotected; resetNodeGraph(sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; SofaWindowDataGraph(QWidget *parent, sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; ~SofaWindowDataGraph()sofa::gui::qt::SofaWindowDataGraph. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:444,Integrability,interface,interface,444,"﻿. SOFA API: sofa::gui::qt::SofaWindowDataGraph Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::SofaWindowDataGraph Class Reference . #include <SofaWindowDataGraph.h>. Inheritance diagram for sofa::gui::qt::SofaWindowDataGraph:. [legend]; Detailed Description; This Class provide an interface with the library QtNodes to display Data Graph connection inside a QDialog. It will take a SOFA simulation scene and create Graph nodes for each Sofa component and display connections between Data. . Protected Attributes; QtNodes::FlowScene * m_graphScene;  Pointer to the graphScene used to store nodes. More...;  ; QtNodes::FlowView * m_graphView;  Pointer to the view of the graph. More...;  ; sofa::simulation::Node * m_rootNode;  Point to the root node of the current simulation. More...;  ; std::vector< std::string > m_exceptions;  List of component name not to be display in the graph. More...;  ; SReal m_scaleX;  Scale parameter to apply between nodes for display in abscissa. ; More...;  ; SReal m_scaleY;  Scale parameter to apply between nodes for display in ordinate. More...;  ; int m_posX;  Increment position counter on abscissa for Node display. More...;  ; int m_posY;  Increment position counter on ordinate for Node display. More...;  ; bool debugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:329,Modifiability,Inherit,Inheritance,329,"﻿. SOFA API: sofa::gui::qt::SofaWindowDataGraph Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::SofaWindowDataGraph Class Reference . #include <SofaWindowDataGraph.h>. Inheritance diagram for sofa::gui::qt::SofaWindowDataGraph:. [legend]; Detailed Description; This Class provide an interface with the library QtNodes to display Data Graph connection inside a QDialog. It will take a SOFA simulation scene and create Graph nodes for each Sofa component and display connections between Data. . Protected Attributes; QtNodes::FlowScene * m_graphScene;  Pointer to the graphScene used to store nodes. More...;  ; QtNodes::FlowView * m_graphView;  Pointer to the view of the graph. More...;  ; sofa::simulation::Node * m_rootNode;  Point to the root node of the current simulation. More...;  ; std::vector< std::string > m_exceptions;  List of component name not to be display in the graph. More...;  ; SReal m_scaleX;  Scale parameter to apply between nodes for display in abscissa. ; More...;  ; SReal m_scaleY;  Scale parameter to apply between nodes for display in ordinate. More...;  ; int m_posX;  Increment position counter on abscissa for Node display. More...;  ; int m_posY;  Increment position counter on ordinate for Node display. More...;  ; bool debugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:1462,Testability,log,logs,1462,"ide an interface with the library QtNodes to display Data Graph connection inside a QDialog. It will take a SOFA simulation scene and create Graph nodes for each Sofa component and display connections between Data. . Protected Attributes; QtNodes::FlowScene * m_graphScene;  Pointer to the graphScene used to store nodes. More...;  ; QtNodes::FlowView * m_graphView;  Pointer to the view of the graph. More...;  ; sofa::simulation::Node * m_rootNode;  Point to the root node of the current simulation. More...;  ; std::vector< std::string > m_exceptions;  List of component name not to be display in the graph. More...;  ; SReal m_scaleX;  Scale parameter to apply between nodes for display in abscissa. ; More...;  ; SReal m_scaleY;  Scale parameter to apply between nodes for display in ordinate. More...;  ; int m_posX;  Increment position counter on abscissa for Node display. More...;  ; int m_posY;  Increment position counter on ordinate for Node display. More...;  ; bool debugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2604,Testability,log,logs,2604,";  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2392,Usability,clear,clearNodeData,2392,"bugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protecte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2430,Usability,clear,clear,2430,"bugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protecte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:4364,Usability,clear,clearNodeData,4364,"::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes for display in abscissa. . ◆ m_scaleY. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleY. protected . Scale parameter to apply between nodes for display in ordinate. . Constructor details. ◆ SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::SofaWindowDataGraph ; (; QWidget * ; parent, . sofa::simulation::Node * ; scene . ). Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. . ◆ ~SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::~SofaWindowDataGraph ; (; ). Function details. ◆ addSimulationObject(). size_t sofa::gui::qt::SofaWindowDataGraph::addSimulationObject ; (; sofa::core::objectmodel::BaseObject * ; bObject). protected . Internal method to create a Node for this sofa BaseObject. . ◆ clearNodeData(). void sofa::gui::qt::SofaWindowDataGraph::clearNodeData ; (; ). protected . Internal method to clear the graph structures. . ◆ connectNodeData(). void sofa::gui::qt::SofaWindowDataGraph::connectNodeData ; (; ). protected . Internal method to create all connection between component on the graph. . ◆ parseSimulationNode(). void sofa::gui::qt::SofaWindowDataGraph::parseSimulationNode ; (; sofa::simulation::Node * ; node, . int ; posX = 0 . ). protected . Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. ; See alsoaddSimulationObject for each compoenent then will iterate on children nodes. . ◆ resetNodeGraph(). void sofa::gui::qt::SofaWindowDataGraph::resetNodeGraph ; (; sofa::simulation::Node * ; scene). Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. . sofaguiqtSofaWindowDataGraph; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:4422,Usability,clear,clearNodeData,4422,"::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes for display in abscissa. . ◆ m_scaleY. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleY. protected . Scale parameter to apply between nodes for display in ordinate. . Constructor details. ◆ SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::SofaWindowDataGraph ; (; QWidget * ; parent, . sofa::simulation::Node * ; scene . ). Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. . ◆ ~SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::~SofaWindowDataGraph ; (; ). Function details. ◆ addSimulationObject(). size_t sofa::gui::qt::SofaWindowDataGraph::addSimulationObject ; (; sofa::core::objectmodel::BaseObject * ; bObject). protected . Internal method to create a Node for this sofa BaseObject. . ◆ clearNodeData(). void sofa::gui::qt::SofaWindowDataGraph::clearNodeData ; (; ). protected . Internal method to clear the graph structures. . ◆ connectNodeData(). void sofa::gui::qt::SofaWindowDataGraph::connectNodeData ; (; ). protected . Internal method to create all connection between component on the graph. . ◆ parseSimulationNode(). void sofa::gui::qt::SofaWindowDataGraph::parseSimulationNode ; (; sofa::simulation::Node * ; node, . int ; posX = 0 . ). protected . Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. ; See alsoaddSimulationObject for each compoenent then will iterate on children nodes. . ◆ resetNodeGraph(). void sofa::gui::qt::SofaWindowDataGraph::resetNodeGraph ; (; sofa::simulation::Node * ; scene). Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. . sofaguiqtSofaWindowDataGraph; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:4475,Usability,clear,clear,4475,"::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes for display in abscissa. . ◆ m_scaleY. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleY. protected . Scale parameter to apply between nodes for display in ordinate. . Constructor details. ◆ SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::SofaWindowDataGraph ; (; QWidget * ; parent, . sofa::simulation::Node * ; scene . ). Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. . ◆ ~SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::~SofaWindowDataGraph ; (; ). Function details. ◆ addSimulationObject(). size_t sofa::gui::qt::SofaWindowDataGraph::addSimulationObject ; (; sofa::core::objectmodel::BaseObject * ; bObject). protected . Internal method to create a Node for this sofa BaseObject. . ◆ clearNodeData(). void sofa::gui::qt::SofaWindowDataGraph::clearNodeData ; (; ). protected . Internal method to clear the graph structures. . ◆ connectNodeData(). void sofa::gui::qt::SofaWindowDataGraph::connectNodeData ; (; ). protected . Internal method to create all connection between component on the graph. . ◆ parseSimulationNode(). void sofa::gui::qt::SofaWindowDataGraph::parseSimulationNode ; (; sofa::simulation::Node * ; node, . int ; posX = 0 . ). protected . Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. ; See alsoaddSimulationObject for each compoenent then will iterate on children nodes. . ◆ resetNodeGraph(). void sofa::gui::qt::SofaWindowDataGraph::resetNodeGraph ; (; sofa::simulation::Node * ; scene). Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. . sofaguiqtSofaWindowDataGraph; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html:1790,Deployability,update,updateChart,1790,"ui::qt::SofaWindowProfiler Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler, including all inherited members. activateATimer(bool activate)sofa::gui::qt::SofaWindowProfiler; addTreeItem(AnimationSubStepData *subStep)sofa::gui::qt::SofaWindowProfilerprotected; addTreeItem(const AnimationStepData *step)sofa::gui::qt::SofaWindowProfilerprotected; closeEvent(QCloseEvent *) overridesofa::gui::qt::SofaWindowProfilerinlineslot; closeWindow(bool)sofa::gui::qt::SofaWindowProfilersignal; createChart()sofa::gui::qt::SofaWindowProfilerprotected; createTreeView()sofa::gui::qt::SofaWindowProfilerprotected; expandRootNodeOnly() constsofa::gui::qt::SofaWindowProfilerslot; m_axisYsofa::gui::qt::SofaWindowProfilerprotected; m_bufferSizesofa::gui::qt::SofaWindowProfilerprotected; m_chartsofa::gui::qt::SofaWindowProfilerprotected; m_chartViewsofa::gui::qt::SofaWindowProfilerprotected; m_checkedSeriessofa::gui::qt::SofaWindowProfilerprotected; m_fpsMaxAxissofa::gui::qt::SofaWindowProfilerprotected; m_maxFpssofa::gui::qt::SofaWindowProfilerprotected; m_profilingDatasofa::gui::qt::SofaWindowProfilerprotected; m_selectedParentStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectedStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectionSeriessofa::gui::qt::SofaWindowProfilerprotected; m_seriessofa::gui::qt::SofaWindowProfilerprotected; m_stepsofa::gui::qt::SofaWindowProfilerprotected; onStepSelected(QTreeWidgetItem *item, int column)sofa::gui::qt::SofaWindowProfilerslot; pushStepData()sofa::gui::qt::SofaWindowProfiler; resetGraph()sofa::gui::qt::SofaWindowProfiler; SofaWindowProfiler(QWidget *parent)sofa::gui::qt::SofaWindowProfiler; updateChart()sofa::gui::qt::SofaWindowProfilerprotected; updateFromSelectedStep(int step)sofa::gui::qt::SofaWindowProfilerslot; updateSummaryLabels(int step)sofa::gui::qt::SofaWindowProfilerslot; updateTree(int step)sofa::gui::qt::SofaWindowProfilerslot. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html:1847,Deployability,update,updateFromSelectedStep,1847,"ui::qt::SofaWindowProfiler Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler, including all inherited members. activateATimer(bool activate)sofa::gui::qt::SofaWindowProfiler; addTreeItem(AnimationSubStepData *subStep)sofa::gui::qt::SofaWindowProfilerprotected; addTreeItem(const AnimationStepData *step)sofa::gui::qt::SofaWindowProfilerprotected; closeEvent(QCloseEvent *) overridesofa::gui::qt::SofaWindowProfilerinlineslot; closeWindow(bool)sofa::gui::qt::SofaWindowProfilersignal; createChart()sofa::gui::qt::SofaWindowProfilerprotected; createTreeView()sofa::gui::qt::SofaWindowProfilerprotected; expandRootNodeOnly() constsofa::gui::qt::SofaWindowProfilerslot; m_axisYsofa::gui::qt::SofaWindowProfilerprotected; m_bufferSizesofa::gui::qt::SofaWindowProfilerprotected; m_chartsofa::gui::qt::SofaWindowProfilerprotected; m_chartViewsofa::gui::qt::SofaWindowProfilerprotected; m_checkedSeriessofa::gui::qt::SofaWindowProfilerprotected; m_fpsMaxAxissofa::gui::qt::SofaWindowProfilerprotected; m_maxFpssofa::gui::qt::SofaWindowProfilerprotected; m_profilingDatasofa::gui::qt::SofaWindowProfilerprotected; m_selectedParentStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectedStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectionSeriessofa::gui::qt::SofaWindowProfilerprotected; m_seriessofa::gui::qt::SofaWindowProfilerprotected; m_stepsofa::gui::qt::SofaWindowProfilerprotected; onStepSelected(QTreeWidgetItem *item, int column)sofa::gui::qt::SofaWindowProfilerslot; pushStepData()sofa::gui::qt::SofaWindowProfiler; resetGraph()sofa::gui::qt::SofaWindowProfiler; SofaWindowProfiler(QWidget *parent)sofa::gui::qt::SofaWindowProfiler; updateChart()sofa::gui::qt::SofaWindowProfilerprotected; updateFromSelectedStep(int step)sofa::gui::qt::SofaWindowProfilerslot; updateSummaryLabels(int step)sofa::gui::qt::SofaWindowProfilerslot; updateTree(int step)sofa::gui::qt::SofaWindowProfilerslot. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html:1918,Deployability,update,updateSummaryLabels,1918,"ui::qt::SofaWindowProfiler Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler, including all inherited members. activateATimer(bool activate)sofa::gui::qt::SofaWindowProfiler; addTreeItem(AnimationSubStepData *subStep)sofa::gui::qt::SofaWindowProfilerprotected; addTreeItem(const AnimationStepData *step)sofa::gui::qt::SofaWindowProfilerprotected; closeEvent(QCloseEvent *) overridesofa::gui::qt::SofaWindowProfilerinlineslot; closeWindow(bool)sofa::gui::qt::SofaWindowProfilersignal; createChart()sofa::gui::qt::SofaWindowProfilerprotected; createTreeView()sofa::gui::qt::SofaWindowProfilerprotected; expandRootNodeOnly() constsofa::gui::qt::SofaWindowProfilerslot; m_axisYsofa::gui::qt::SofaWindowProfilerprotected; m_bufferSizesofa::gui::qt::SofaWindowProfilerprotected; m_chartsofa::gui::qt::SofaWindowProfilerprotected; m_chartViewsofa::gui::qt::SofaWindowProfilerprotected; m_checkedSeriessofa::gui::qt::SofaWindowProfilerprotected; m_fpsMaxAxissofa::gui::qt::SofaWindowProfilerprotected; m_maxFpssofa::gui::qt::SofaWindowProfilerprotected; m_profilingDatasofa::gui::qt::SofaWindowProfilerprotected; m_selectedParentStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectedStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectionSeriessofa::gui::qt::SofaWindowProfilerprotected; m_seriessofa::gui::qt::SofaWindowProfilerprotected; m_stepsofa::gui::qt::SofaWindowProfilerprotected; onStepSelected(QTreeWidgetItem *item, int column)sofa::gui::qt::SofaWindowProfilerslot; pushStepData()sofa::gui::qt::SofaWindowProfiler; resetGraph()sofa::gui::qt::SofaWindowProfiler; SofaWindowProfiler(QWidget *parent)sofa::gui::qt::SofaWindowProfiler; updateChart()sofa::gui::qt::SofaWindowProfilerprotected; updateFromSelectedStep(int step)sofa::gui::qt::SofaWindowProfilerslot; updateSummaryLabels(int step)sofa::gui::qt::SofaWindowProfilerslot; updateTree(int step)sofa::gui::qt::SofaWindowProfilerslot. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html:1986,Deployability,update,updateTree,1986,"ui::qt::SofaWindowProfiler Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler, including all inherited members. activateATimer(bool activate)sofa::gui::qt::SofaWindowProfiler; addTreeItem(AnimationSubStepData *subStep)sofa::gui::qt::SofaWindowProfilerprotected; addTreeItem(const AnimationStepData *step)sofa::gui::qt::SofaWindowProfilerprotected; closeEvent(QCloseEvent *) overridesofa::gui::qt::SofaWindowProfilerinlineslot; closeWindow(bool)sofa::gui::qt::SofaWindowProfilersignal; createChart()sofa::gui::qt::SofaWindowProfilerprotected; createTreeView()sofa::gui::qt::SofaWindowProfilerprotected; expandRootNodeOnly() constsofa::gui::qt::SofaWindowProfilerslot; m_axisYsofa::gui::qt::SofaWindowProfilerprotected; m_bufferSizesofa::gui::qt::SofaWindowProfilerprotected; m_chartsofa::gui::qt::SofaWindowProfilerprotected; m_chartViewsofa::gui::qt::SofaWindowProfilerprotected; m_checkedSeriessofa::gui::qt::SofaWindowProfilerprotected; m_fpsMaxAxissofa::gui::qt::SofaWindowProfilerprotected; m_maxFpssofa::gui::qt::SofaWindowProfilerprotected; m_profilingDatasofa::gui::qt::SofaWindowProfilerprotected; m_selectedParentStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectedStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectionSeriessofa::gui::qt::SofaWindowProfilerprotected; m_seriessofa::gui::qt::SofaWindowProfilerprotected; m_stepsofa::gui::qt::SofaWindowProfilerprotected; onStepSelected(QTreeWidgetItem *item, int column)sofa::gui::qt::SofaWindowProfilerslot; pushStepData()sofa::gui::qt::SofaWindowProfiler; resetGraph()sofa::gui::qt::SofaWindowProfiler; SofaWindowProfiler(QWidget *parent)sofa::gui::qt::SofaWindowProfiler; updateChart()sofa::gui::qt::SofaWindowProfilerprotected; updateFromSelectedStep(int step)sofa::gui::qt::SofaWindowProfilerslot; updateSummaryLabels(int step)sofa::gui::qt::SofaWindowProfilerslot; updateTree(int step)sofa::gui::qt::SofaWindowProfilerslot. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler, including all inherited members. activateATimer(bool activate)sofa::gui::qt::SofaWindowProfiler; addTreeItem(AnimationSubStepData *subStep)sofa::gui::qt::SofaWindowProfilerprotected; addTreeItem(const AnimationStepData *step)sofa::gui::qt::SofaWindowProfilerprotected; closeEvent(QCloseEvent *) overridesofa::gui::qt::SofaWindowProfilerinlineslot; closeWindow(bool)sofa::gui::qt::SofaWindowProfilersignal; createChart()sofa::gui::qt::SofaWindowProfilerprotected; createTreeView()sofa::gui::qt::SofaWindowProfilerprotected; expandRootNodeOnly() constsofa::gui::qt::SofaWindowProfilerslot; m_axisYsofa::gui::qt::SofaWindowProfilerprotected; m_bufferSizesofa::gui::qt::SofaWindowProfilerprotected; m_chartsofa::gui::qt::SofaWindowProfilerprotected; m_chartViewsofa::gui::qt::SofaWindowProfilerprotected; m_checkedSeriessofa::gui::qt::SofaWindowProfilerprotected; m_fpsMaxAxissofa::gui::qt::SofaWindowProfilerprotected; m_maxFpssofa::gui::qt::SofaWindowProfilerprotected; m_profilingDatasofa::gui::qt::SofaWindowProfilerprotected; m_selectedParentStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectedStepsofa::gui::qt::SofaWindowProfilerprotected; m_selectionSeriessofa::gui::qt::SofaWindowProfilerprotected; m_seriessofa::gui::qt::SofaWindowProfilerprotected; m_stepsofa::gui::qt::SofaWindowProfilerprotected; onStepSelected(QTreeWidgetItem *item, int column)sofa::gui::qt::SofaWindowProfilerslot; pushStepData()sofa::gui::qt::SofaWindowProfiler; resetGraph()sofa::gui::qt::SofaWindowProfiler; SofaWindowProfiler(QWidget *parent)sofa::gui::qt::SofaWindowProfiler; updateChart()sofa::gui::qt::SofaWindowProfilerprotected; updateFromSelectedStep(int step)sofa::gui::qt::SofaWindowProfilerslot; updateSummaryLabels(int step)sofa::gui::qt::SofaWindowProfilerslot; updateTree(int ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3219,Deployability,update,update,3219,"red. (i.e number of stepData info stored) More...;  ; SReal m_maxFps;  Bigger step encountered in ms. More...;  ; SReal m_fpsMaxAxis;  Current Y max value of the graph (max ms encountered x1.1) More...;  ; std::deque< AnimationStepData * > m_profilingData;  Buffer of. More...;  ; QLineSeries * m_series;  Series of step duration in ms to be plot on the graph. size =. More...;  ; QLineSeries * m_selectionSeries;  Series of selection substep duration in ms to be plot on the graph. size =. More...;  ; std::unordered_map< std::string, CheckedSeries > m_checkedSeries;  ; std::string m_selectedStep;  Name of the substep selected in the Tree. More...;  ; std::string m_selectedParentStep;  Name of the parent of the substep selected in the Tree. More...;  . Public Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3537,Deployability,update,updateChart,3537,"ore...;  ; QLineSeries * m_selectionSeries;  Series of selection substep duration in ms to be plot on the graph. size =. More...;  ; std::unordered_map< std::string, CheckedSeries > m_checkedSeries;  ; std::string m_selectedStep;  Name of the substep selected in the Tree. More...;  ; std::string m_selectedParentStep;  Name of the parent of the substep selected in the Tree. More...;  . Public Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_buffe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3589,Deployability,update,update,3589,"ore...;  ; QLineSeries * m_selectionSeries;  Series of selection substep duration in ms to be plot on the graph. size =. More...;  ; std::unordered_map< std::string, CheckedSeries > m_checkedSeries;  ; std::string m_selectedStep;  Name of the substep selected in the Tree. More...;  ; std::string m_selectedParentStep;  Name of the parent of the substep selected in the Tree. More...;  . Public Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_buffe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3945,Deployability,update,updateFromSelectedStep,3945,"Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_bufferSize. protected . Size of the buffer data stored. (i.e number of stepData info stored) . ◆ m_chart. QChart* sofa::gui::qt::SofaWindowProfiler::m_chart. protected . Pointer to the chart Data. . ◆ m_chartView. ProfilerChartView* sofa::gui::qt::SofaWindowProfiler::m_chartView. protected . Pointer to the. ; See alsoProfilerChartView class to handle chart drawing/selection . ◆ m_checkedSeries. st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3991,Deployability,update,update,3991,"Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_bufferSize. protected . Size of the buffer data stored. (i.e number of stepData info stored) . ◆ m_chart. QChart* sofa::gui::qt::SofaWindowProfiler::m_chart. protected . Pointer to the chart Data. . ◆ m_chartView. ProfilerChartView* sofa::gui::qt::SofaWindowProfiler::m_chartView. protected . Pointer to the. ; See alsoProfilerChartView class to handle chart drawing/selection . ◆ m_checkedSeries. st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:4061,Deployability,update,updateSummaryLabels,4061,"s shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_bufferSize. protected . Size of the buffer data stored. (i.e number of stepData info stored) . ◆ m_chart. QChart* sofa::gui::qt::SofaWindowProfiler::m_chart. protected . Pointer to the chart Data. . ◆ m_chartView. ProfilerChartView* sofa::gui::qt::SofaWindowProfiler::m_chartView. protected . Pointer to the. ; See alsoProfilerChartView class to handle chart drawing/selection . ◆ m_checkedSeries. std::unordered_map<std::string, CheckedSeries> sofa::gui::qt::SofaWindowProfiler::m_checkedSeries. protected . ◆ m_fpsMaxAxis.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:4139,Deployability,update,updateTree,4139,"a ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidgetItem is selected in the Tree view. More...;  ; void expandRootNodeOnly () const;  . Attribute details. ◆ m_axisY. QValueAxis* sofa::gui::qt::SofaWindowProfiler::m_axisY. protected . Pointer to Y Axis. . ◆ m_bufferSize. unsigned int sofa::gui::qt::SofaWindowProfiler::m_bufferSize. protected . Size of the buffer data stored. (i.e number of stepData info stored) . ◆ m_chart. QChart* sofa::gui::qt::SofaWindowProfiler::m_chart. protected . Pointer to the chart Data. . ◆ m_chartView. ProfilerChartView* sofa::gui::qt::SofaWindowProfiler::m_chartView. protected . Pointer to the. ; See alsoProfilerChartView class to handle chart drawing/selection . ◆ m_checkedSeries. std::unordered_map<std::string, CheckedSeries> sofa::gui::qt::SofaWindowProfiler::m_checkedSeries. protected . ◆ m_fpsMaxAxis. SReal sofa::gui::qt::SofaWindowProfiler::m_fpsMaxAxis. protected . Curren",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:7957,Deployability,update,update,7957,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8111,Deployability,update,updateChart,8111,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8166,Deployability,update,updateChart,8166,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8233,Deployability,update,update,8233,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8255,Deployability,update,updateFromSelectedStep,8255,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8319,Deployability,update,updateFromSelectedStep,8319,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8377,Deployability,update,update,8377,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8434,Deployability,update,updateSummaryLabels,8434,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8495,Deployability,update,updateSummaryLabels,8495,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8602,Deployability,update,update,8602,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8633,Deployability,update,updateTree,8633,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8685,Deployability,update,updateTree,8685,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8783,Deployability,update,update,8783,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:614,Modifiability,Inherit,Inheritance,614,"﻿. SOFA API: sofa::gui::qt::SofaWindowProfiler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaWindowProfiler Class Reference . #include <SofaWindowProfiler.h>; The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: ; More... Inheritance diagram for sofa::gui::qt::SofaWindowProfiler:. [legend]; Detailed Description; The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: . plotting the step duration into a graph; Showing information duration/step number; Showing all substep of an animation step with their own duration in ms and the corresponding percentage over the whole step. . Classes; class  AnimationStepData;  The AnimationStepData internal class to store all info of a animation step recorded by AdvancedTimer Data stored/computed will be the step number, and the total time in ms of the step. All Data will then be stored inside a tree of. More...;  ; class  AnimationSubStepData;  The AnimationSubStepData Internal class to store data for each step of the animation. Correspond to one AdvancedTimer::begin/end Data stored/computed will be step name, its time in ms and the corresponding % inside the whole step. the total ms and percentage it represent if this step has substeps. Buffer of AnimationSubStepData corresponding to its children substeps. More...;  ; struct  CheckedSeries;  . Protected Attributes; QChart * m_chart;  Pointer to the chart Data. More...;  ; QValueAxis * m_axisY;  Pointer to Y Axis. Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3293,Usability,clear,clear,3293," in ms. More...;  ; SReal m_fpsMaxAxis;  Current Y max value of the graph (max ms encountered x1.1) More...;  ; std::deque< AnimationStepData * > m_profilingData;  Buffer of. More...;  ; QLineSeries * m_series;  Series of step duration in ms to be plot on the graph. size =. More...;  ; QLineSeries * m_selectionSeries;  Series of selection substep duration in ms to be plot on the graph. size =. More...;  ; std::unordered_map< std::string, CheckedSeries > m_checkedSeries;  ; std::string m_selectedStep;  Name of the substep selected in the Tree. More...;  ; std::string m_selectedParentStep;  Name of the parent of the substep selected in the Tree. More...;  . Public Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8075,Usability,clear,clear,8075,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_step_data-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler::AnimationStepData Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler::AnimationStepData, including all inherited members. AnimationStepData()sofa::gui::qt::SofaWindowProfiler::AnimationStepDatainline; AnimationStepData(int step, const std::string &idString)sofa::gui::qt::SofaWindowProfiler::AnimationStepData; getStepMs(const std::string &stepName, const std::string &parentName)sofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_idStringsofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_overheadMssofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_selfMssofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_selfPercentsofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_stepIterationsofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_subStepssofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_totalMssofa::gui::qt::SofaWindowProfiler::AnimationStepData; m_totalTimerssofa::gui::qt::SofaWindowProfiler::AnimationStepData; processData(const std::string &idString)sofa::gui::qt::SofaWindowProfiler::AnimationStepDataprotected; ~AnimationStepData()sofa::gui::qt::SofaWindowProfiler::AnimationStepDatavirtual. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_step_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_step_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_sub_step_data-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler::AnimationSubStepData Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler::AnimationSubStepData, including all inherited members. AnimationSubStepData(int level, std::string name, ctime_t start)sofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; computeTimeAndPercentage(SReal invTotalMs)sofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; getStepMs(const std::string &stepName, const std::string &parentName)sofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_childrensofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_endsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_levelsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_namesofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_nbrCallsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_selfMssofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_selfPercentsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_startsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_tagsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_totalMssofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; m_totalPercentsofa::gui::qt::SofaWindowProfiler::AnimationSubStepData; ~AnimationSubStepData()sofa::gui::qt::SofaWindowProfiler::AnimationSubStepDatavirtual. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_sub_step_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_animation_sub_step_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:3149,Deployability,update,updateDataValue,3149," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:3197,Deployability,update,updateVisibility,3197," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:3242,Deployability,update,updateWidgetValue,3242," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::TableDataWidget< T, FLAGS > Member List . This is the complete list of members for sofa::gui::qt::TableDataWidget< T, FLAGS >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:1529,Modifiability,Inherit,Inherit,1529,"t< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::Simpl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:343,Usability,Simpl,SimpleDataWidget,343," baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:779,Usability,Simpl,SimpleDataWidget,779," baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:1449,Usability,Simpl,SimpleDataWidget,1449,"otected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:1851,Usability,Simpl,SimpleDataWidget,1851,"al; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2025,Usability,Simpl,SimpleDataWidget,2025,"DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2349,Usability,Simpl,SimpleDataWidget,2349,">inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2528,Usability,Simpl,SimpleDataWidget,2528," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2670,Usability,Simpl,SimpleDataWidget,2670," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2748,Usability,Simpl,SimpleDataWidget,2748," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:3370,Usability,Simpl,SimpleDataWidget,3370," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:1919,Deployability,update,updateVisibility,1919,"createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Pub",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3389,Deployability,update,updateDataValue,3389,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3417,Deployability,update,updateWidgetValue,3417,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:305,Modifiability,Inherit,Inheritance,305,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:661,Modifiability,inherit,inherited,661,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:958,Modifiability,config,configure,958,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:1258,Modifiability,inherit,inherited,1258,"eWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:1587,Modifiability,inherit,inherited,1587,"eWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2142,Modifiability,Inherit,Inherited,2142,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2183,Modifiability,inherit,inherited,2183,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2367,Modifiability,inherit,inherited,2367,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2457,Modifiability,inherit,inherited,2457,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2785,Modifiability,inherit,inherited,2785,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2963,Modifiability,inherit,inherited,2963,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3175,Modifiability,inherit,inherited,3175,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3342,Modifiability,inherit,inherited,3342,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:1834,Security,access,accessor,1834,"eWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:691,Usability,Simpl,SimpleDataWidget,691,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:763,Usability,Simpl,SimpleDataWidget,763,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2213,Usability,Simpl,SimpleDataWidget,2213,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3984,Usability,Simpl,SimpleDataWidget,3984,"fa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented from sofa::gui::qt::DataWidget. sofaguiqtTableDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html:2134,Deployability,update,updateDataValue,2134,":qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< T >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html:2182,Deployability,update,updateVisibility,2182,":qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< T >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html:2227,Deployability,update,updateWidgetValue,2227,":qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< T >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::TDataWidget< T > Member List . This is the complete list of members for sofa::gui::qt::TDataWidget< T >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< T >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:2034,Deployability,update,updateVisibility,2034,"; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:3457,Deployability,update,updateDataValue,3457,"re whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getData() [1/2]. template<class T > . sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ). inline . Accessor function. Gives you the actual data instead of a BaseData pointer of it like in getBaseData(). . ◆ getData() [2/2]. template<class T > . const sofa::core::objectmodel::Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:3485,Deployability,update,updateWidgetValue,3485,"re whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getData() [1/2]. template<class T > . sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ). inline . Accessor function. Gives you the actual data instead of a BaseData pointer of it like in getBaseData(). . ◆ getData() [2/2]. template<class T > . const sofa::core::objectmodel::Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:616,Modifiability,Inherit,Inheritance,616,"﻿. SOFA API: sofa::gui::qt::TDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::TDataWidget< T > Class Template Reference . #include <DataWidget.h>; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. ; More... Inheritance diagram for sofa::gui::qt::TDataWidget< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:1100,Modifiability,inherit,inherited,1100,"; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::TDataWidget< T > Class Template Reference . #include <DataWidget.h>; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. ; More... Inheritance diagram for sofa::gui::qt::TDataWidget< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool va",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:1702,Modifiability,inherit,inherited,1702,"]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:2376,Modifiability,config,configure,2376,"ction is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:2768,Modifiability,inherit,inherited,2768,"ame, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:2982,Modifiability,Inherit,Inherited,2982,"bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:3029,Modifiability,inherit,inherited,3029,"bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:3243,Modifiability,inherit,inherited,3243,"re whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getData() [1/2]. template<class T > . sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ). inline . Accessor function. Gives you the actual data instead of a BaseData pointer of it like in getBaseData(). . ◆ getData() [2/2]. template<class T > . const sofa::core::objectmodel::Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:3410,Modifiability,inherit,inherited,3410,"re whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getData() [1/2]. template<class T > . sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ). inline . Accessor function. Gives you the actual data instead of a BaseData pointer of it like in getBaseData(). . ◆ getData() [2/2]. template<class T > . const sofa::core::objectmodel::Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:492,Security,access,accessor,492,"﻿. SOFA API: sofa::gui::qt::TDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::TDataWidget< T > Class Template Reference . #include <DataWidget.h>; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. ; More... Inheritance diagram for sofa::gui::qt::TDataWidget< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:920,Security,access,accessor,920,"﻿. SOFA API: sofa::gui::qt::TDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::TDataWidget< T > Class Template Reference . #include <DataWidget.h>; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. ; More... Inheritance diagram for sofa::gui::qt::TDataWidget< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:1949,Security,access,accessor,1949,"]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:4205,Security,Access,Accessor,4205,"ember Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt::DataWidget; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ Tdata. template<class T > . MyTData* sofa::gui::qt::TDataWidget< T >::Tdata. protected . Constructor details. ◆ TDataWidget(). template<class T > . sofa::gui::qt::TDataWidget< T >::TDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ create(). template<class T > . template<class RealObject > . static RealObject* sofa::gui::qt::TDataWidget< T >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ getData() [1/2]. template<class T > . sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ). inline . Accessor function. Gives you the actual data instead of a BaseData pointer of it like in getBaseData(). . ◆ getData() [2/2]. template<class T > . const sofa::core::objectmodel::Data<T>* sofa::gui::qt::TDataWidget< T >::getData ; (; ); const. inline . ◆ setData() [1/2]. template<class T > . void sofa::gui::qt::DataWidget::setData. ◆ setData() [2/2]. template<class T > . virtual void sofa::gui::qt::TDataWidget< T >::setData ; (; MyTData * ; d). inlinevirtual . sofaguiqtTDataWidget; Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::WindowVisitor Member List . This is the complete list of members for sofa::gui::qt::WindowVisitor, including all inherited members. chartsComponentsofa::gui::qt::WindowVisitorprotected; chartsVisitorsofa::gui::qt::WindowVisitorprotected; clearGraph()sofa::gui::qt::WindowVisitorinlineslot; closeEvent(QCloseEvent *)sofa::gui::qt::WindowVisitorinlineslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; collapseNode()sofa::gui::qt::WindowVisitorslot; COMMENT enum valuesofa::gui::qt::WindowVisitor; COMPONENT enum valuesofa::gui::qt::WindowVisitor; componentsTimesofa::gui::qt::WindowVisitorprotected; componentsTimeMaxsofa::gui::qt::WindowVisitorprotected; componentsTimeTotalsofa::gui::qt::WindowVisitorprotected; componentType enum namesofa::gui::qt::WindowVisitor; controlPanelsofa::gui::qt::WindowVisitorprotected; expandNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; expandNode()sofa::gui::qt::WindowVisitorslot; focusOn(QString focus)sofa::gui::qt::WindowVisitorslot; getComponentType(std::string name)sofa::gui::qt::WindowVisitorinlinestaticslot; getPixmap(componentType t)sofa::gui::qt::WindowVisitorinlinestaticslot; iconssofa::gui::qt::WindowVisitorprotectedstatic; NODE enum valuesofa::gui::qt::WindowVisitor; OTHER enum valuesofa::gui::qt::WindowVisitor; rightClick(const QPoint &point)sofa::gui::qt::WindowVisitorslot; setCharts(std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV)sofa::gui::qt::WindowVisitor; setCurrentCharts(int)sofa::gui::qt::WindowVisitorslot; setFocusOn(QTreeWidgetItem *item, QString text)sofa::gui::qt::WindowVisitorprotected; statsWidgetsofa::gui::qt::WindowVisitor; typeOfChartssofa::gui::qt::WindowVisitorprotected; VECTOR enum valuesofa::gui::qt::WindowVisitor; visitorsT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html:353,Usability,clear,clearGraph,353," chartsComponentsofa::gui::qt::WindowVisitorprotected; chartsVisitorsofa::gui::qt::WindowVisitorprotected; clearGraph()sofa::gui::qt::WindowVisitorinlineslot; closeEvent(QCloseEvent *)sofa::gui::qt::WindowVisitorinlineslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; collapseNode()sofa::gui::qt::WindowVisitorslot; COMMENT enum valuesofa::gui::qt::WindowVisitor; COMPONENT enum valuesofa::gui::qt::WindowVisitor; componentsTimesofa::gui::qt::WindowVisitorprotected; componentsTimeMaxsofa::gui::qt::WindowVisitorprotected; componentsTimeTotalsofa::gui::qt::WindowVisitorprotected; componentType enum namesofa::gui::qt::WindowVisitor; controlPanelsofa::gui::qt::WindowVisitorprotected; expandNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; expandNode()sofa::gui::qt::WindowVisitorslot; focusOn(QString focus)sofa::gui::qt::WindowVisitorslot; getComponentType(std::string name)sofa::gui::qt::WindowVisitorinlinestaticslot; getPixmap(componentType t)sofa::gui::qt::WindowVisitorinlinestaticslot; iconssofa::gui::qt::WindowVisitorprotectedstatic; NODE enum valuesofa::gui::qt::WindowVisitor; OTHER enum valuesofa::gui::qt::WindowVisitor; rightClick(const QPoint &point)sofa::gui::qt::WindowVisitorslot; setCharts(std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV)sofa::gui::qt::WindowVisitor; setCurrentCharts(int)sofa::gui::qt::WindowVisitorslot; setFocusOn(QTreeWidgetItem *item, QString text)sofa::gui::qt::WindowVisitorprotected; statsWidgetsofa::gui::qt::WindowVisitor; typeOfChartssofa::gui::qt::WindowVisitorprotected; VECTOR enum valuesofa::gui::qt::WindowVisitor; visitorsT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:390,Modifiability,Inherit,Inheritance,390,"﻿. SOFA API: sofa::gui::qt::WindowVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::WindowVisitor Class Reference . #include <WindowVisitor.h>. Inheritance diagram for sofa::gui::qt::WindowVisitor:. [legend]. Public Attributes; QWidget * statsWidget;  . Protected Attributes; std::vector< dataTime > componentsTime;  ; std::vector< dataTime > visitorsTime;  ; std::vector< dataTime > componentsTimeTotal;  ; std::vector< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; QVisitorControlPanel * controlPanel;  ; ChartsWidget * chartsComponent;  ; ChartsWidget * chartsVisitor;  ; QComboBox * typeOfCharts;  . Static Protected Attributes; static QPixmap * icons [OTHER+1];  . Public Member Functions;  WindowVisitor (QWidget *parent);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void setCharts (std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV);  . Protected Member Functions; bool setFocusOn (QTreeWidgetItem *item, QString text);  . Signals; void WindowVisitorClosed (bool);  . Public Slots; void setCurrentCharts (int);  ; void rightClick (const QPoint &point);  ; void collapseNode ();  ; void expandNode ();  ; void focusOn (QString focus);  ; static componentType getComponentType (std::string name);  ; static QPixmap * getPixmap (componentType t);  ; void closeEvent (QCloseEvent *);  ; void clearGraph ();  . Attribute details. ◆ chartsComponent. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsComponent. protected . ◆ chartsVisitor. ChartsWidget* sofa::gui::qt::WindowVisito",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:1814,Usability,clear,clearGraph,1814,"tor< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; QVisitorControlPanel * controlPanel;  ; ChartsWidget * chartsComponent;  ; ChartsWidget * chartsVisitor;  ; QComboBox * typeOfCharts;  . Static Protected Attributes; static QPixmap * icons [OTHER+1];  . Public Member Functions;  WindowVisitor (QWidget *parent);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void setCharts (std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV);  . Protected Member Functions; bool setFocusOn (QTreeWidgetItem *item, QString text);  . Signals; void WindowVisitorClosed (bool);  . Public Slots; void setCurrentCharts (int);  ; void rightClick (const QPoint &point);  ; void collapseNode ();  ; void expandNode ();  ; void focusOn (QString focus);  ; static componentType getComponentType (std::string name);  ; static QPixmap * getPixmap (componentType t);  ; void closeEvent (QCloseEvent *);  ; void clearGraph ();  . Attribute details. ◆ chartsComponent. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsComponent. protected . ◆ chartsVisitor. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsVisitor. protected . ◆ componentsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:3099,Usability,clear,clearGraph,3099,componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected . ◆ visitorsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTime. protected . ◆ visitorsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeTotal. protected . Constructor details. ◆ WindowVisitor(). sofa::gui::qt::WindowVisitor::WindowVisitor ; (; QWidget * ; parent). Function details. ◆ clearGraph. void sofa::gui::qt::WindowVisitor::clearGraph ; (; ). inlineslot . ◆ closeEvent. void sofa::gui::qt::WindowVisitor::closeEvent ; (; QCloseEvent * ; ). inlineslot . ◆ collapseNode [1/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; ). slot . ◆ collapseNode() [2/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; QTreeWidgetItem * ; item). ◆ expandNode [1/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; ). slot . ◆ expandNode() [2/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; QTreeWidgetItem * ; item). ◆ focusOn. void sofa::gui::qt::WindowVisitor::focusOn ; (; QString ; focus). slot . ◆ getComponentType. static componentType sofa::gui::qt::WindowVisitor::getComponentType ; (; std::string ; name). inlinestaticslot . ◆ getPixmap. static QPixmap* sofa::gui::qt::WindowVisitor::getPixmap ; (; componentType ; t). inlinestaticslot . ◆ rightClick. void sofa::gui::qt::WindowVisitor::rightClick ; (; const QPoint & ; point). slot . ◆ setCharts(). void sofa::gui::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:3146,Usability,clear,clearGraph,3146,onentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected . ◆ visitorsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTime. protected . ◆ visitorsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeTotal. protected . Constructor details. ◆ WindowVisitor(). sofa::gui::qt::WindowVisitor::WindowVisitor ; (; QWidget * ; parent). Function details. ◆ clearGraph. void sofa::gui::qt::WindowVisitor::clearGraph ; (; ). inlineslot . ◆ closeEvent. void sofa::gui::qt::WindowVisitor::closeEvent ; (; QCloseEvent * ; ). inlineslot . ◆ collapseNode [1/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; ). slot . ◆ collapseNode() [2/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; QTreeWidgetItem * ; item). ◆ expandNode [1/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; ). slot . ◆ expandNode() [2/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; QTreeWidgetItem * ; item). ◆ focusOn. void sofa::gui::qt::WindowVisitor::focusOn ; (; QString ; focus). slot . ◆ getComponentType. static componentType sofa::gui::qt::WindowVisitor::getComponentType ; (; std::string ; name). inlinestaticslot . ◆ getPixmap. static QPixmap* sofa::gui::qt::WindowVisitor::getPixmap ; (; componentType ; t). inlinestaticslot . ◆ rightClick. void sofa::gui::qt::WindowVisitor::rightClick ; (; const QPoint & ; point). slot . ◆ setCharts(). void sofa::gui::qt::WindowVisitor::setCharts ; (; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1integer__id-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::integer_id< Name, Index, DefaultId > Member List . This is the complete list of members for sofa::helper::integer_id< Name, Index, DefaultId >, including all inherited members. getDefaultId()sofa::helper::integer_id< Name, Index, DefaultId >inlinestatic; getId() constsofa::helper::integer_id< Name, Index, DefaultId >inline; getName()sofa::helper::integer_id< Name, Index, DefaultId >inlinestatic; Id typedefsofa::helper::integer_id< Name, Index, DefaultId >; indexsofa::helper::integer_id< Name, Index, DefaultId >protected; integer_id()sofa::helper::integer_id< Name, Index, DefaultId >inline; integer_id(Index i)sofa::helper::integer_id< Name, Index, DefaultId >inlineexplicit; integer_id(const Id &i)sofa::helper::integer_id< Name, Index, DefaultId >inline; isValid() constsofa::helper::integer_id< Name, Index, DefaultId >inline; isValid(Index size) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator!=(const Id &a) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator!=(const Index &i) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator+(int_type i) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator++()sofa::helper::integer_id< Name, Index, DefaultId >inline; operator++(int)sofa::helper::integer_id< Name, Index, DefaultId >inline; operator+=(int_type i)sofa::helper::integer_id< Name, Index, DefaultId >inline; operator-(int_type i) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator-(const Id &i) constsofa::helper::integer_id< Name, Index, DefaultId >inline; operator--()sofa::helper::integer_id< Name, Index, DefaultId >inline; operator--(int)sofa::helper::integer_id< Name, Index, DefaultId >inline; operator-=(int_type i)sofa::helper::integer_id< Name, Index, DefaultId >inline; operator<(const Id &a) constsofa::helper::integer_id< Name, Index, DefaultId >inline; ope",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1integer__id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1integer__id-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::BaseFileAccess Member List . This is the complete list of members for sofa::helper::io::BaseFileAccess, including all inherited members. BaseFileAccess()sofa::helper::io::BaseFileAccessprotected; close()=0sofa::helper::io::BaseFileAccesspure virtual; Create()sofa::helper::io::BaseFileAccessstatic; open(const std::string &filename, std::ios_base::openmode openMode)=0sofa::helper::io::BaseFileAccesspure virtual; readAll()=0sofa::helper::io::BaseFileAccesspure virtual; SetCreator(BaseFileAccessCreator *baseFileAccessCreator)sofa::helper::io::BaseFileAccessstatic; SetCreator()sofa::helper::io::BaseFileAccessinlinestatic; SetDefaultCreator()sofa::helper::io::BaseFileAccessstatic; streambuf() const =0sofa::helper::io::BaseFileAccesspure virtual; write(const std::string &data)=0sofa::helper::io::BaseFileAccesspure virtual; ~BaseFileAccess()sofa::helper::io::BaseFileAccessvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html:338,Modifiability,Inherit,Inheritance,338,"﻿. SOFA API: sofa::helper::io::BaseFileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::BaseFileAccess Class Referenceabstract . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::BaseFileAccess:. [legend]. Public Member Functions; virtual ~BaseFileAccess ();  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode)=0;  ; virtual void close ()=0;  ; virtual std::streambuf * streambuf () const =0;  ; virtual std::string readAll ()=0;  ; virtual void write (const std::string &data)=0;  . Static Public Member Functions; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Protected Member Functions;  BaseFileAccess ();  . Constructor details. ◆ BaseFileAccess(). sofa::helper::io::BaseFileAccess::BaseFileAccess ; (; ). protected . ◆ ~BaseFileAccess(). sofa::helper::io::BaseFileAccess::~BaseFileAccess ; (; ). virtual . Function details. ◆ close(). virtual void sofa::helper::io::BaseFileAccess::close ; (; ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ Create(). BaseFileAccess * sofa::helper::io::BaseFileAccess::Create ; (; ). static . ◆ open(). virtual bool sofa::helper::io::BaseFileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ readAll(). virtual std::string sofa::helper::io::BaseFileAccess::readAll ; (; ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ SetCreator() [1/2]. template<class T > . void sofa::helper::io::BaseFileAccess::SetCreator. inlinestatic . ◆ SetCreator() [2/2]. void sofa::helper::io::BaseFileAccess::SetCreator ; (; BaseFileAccessCreator * ; baseFile",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::BaseFileAccessCreator Member List . This is the complete list of members for sofa::helper::io::BaseFileAccessCreator, including all inherited members. create() const =0sofa::helper::io::BaseFileAccessCreatorpure virtual; ~BaseFileAccessCreator()sofa::helper::io::BaseFileAccessCreatorinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html:288,Modifiability,Inherit,Inheritance,288,﻿. SOFA API: sofa::helper::io::BaseFileAccessCreator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::BaseFileAccessCreator Class Referenceabstract . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::BaseFileAccessCreator:. [legend]. Public Member Functions; virtual ~BaseFileAccessCreator ();  ; virtual BaseFileAccess * create () const =0;  . Constructor details. ◆ ~BaseFileAccessCreator(). virtual sofa::helper::io::BaseFileAccessCreator::~BaseFileAccessCreator ; (; ). inlinevirtual . Function details. ◆ create(). virtual BaseFileAccess* sofa::helper::io::BaseFileAccessCreator::create ; (; ); const. pure virtual . Implemented in sofa::helper::io::FileAccessCreator< T >. sofahelperioBaseFileAccessCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file-members.html:216,Modifiability,inherit,inherited,216,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::File Member List . This is the complete list of members for sofa::helper::io::File, including all inherited members. checkFileAccess() constsofa::helper::io::Fileprotected; close()sofa::helper::io::File; File()sofa::helper::io::File; File(const std::string &filename, std::ios_base::openmode openMode=std::ios_base::in|std::ios_base::binary)sofa::helper::io::File; open(const std::string &filename, std::ios_base::openmode openMode=std::ios_base::in|std::ios_base::binary)sofa::helper::io::File; readAll()sofa::helper::io::File; streambuf() constsofa::helper::io::File; ~File()sofa::helper::io::File. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::FileAccess Member List . This is the complete list of members for sofa::helper::io::FileAccess, including all inherited members. BaseFileAccess()sofa::helper::io::BaseFileAccessprotected; close() overridesofa::helper::io::FileAccessvirtual; Create()sofa::helper::io::BaseFileAccessstatic; FileAccess()sofa::helper::io::FileAccessprotected; FileAccessCreator< FileAccess > classsofa::helper::io::FileAccessfriend; open(const std::string &filename, std::ios_base::openmode openMode) overridesofa::helper::io::FileAccessvirtual; readAll() overridesofa::helper::io::FileAccessvirtual; SetCreator(BaseFileAccessCreator *baseFileAccessCreator)sofa::helper::io::BaseFileAccessstatic; SetCreator()sofa::helper::io::BaseFileAccessinlinestatic; SetDefaultCreator()sofa::helper::io::BaseFileAccessstatic; streambuf() const overridesofa::helper::io::FileAccessvirtual; write(const std::string &data) overridesofa::helper::io::FileAccessvirtual; ~BaseFileAccess()sofa::helper::io::BaseFileAccessvirtual; ~FileAccess() overridesofa::helper::io::FileAccess. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:295,Modifiability,Inherit,Inheritance,295,"﻿. SOFA API: sofa::helper::io::FileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:720,Modifiability,inherit,inherited,720,"﻿. SOFA API: sofa::helper::io::FileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:875,Modifiability,inherit,inherited,875,"﻿. SOFA API: sofa::helper::io::FileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:1009,Modifiability,Inherit,Inherited,1009,"ions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io::FileAccess::streambuf ; (; ); const. overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ write(). void sofa::helper::io::FileAccess::write",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:1060,Modifiability,inherit,inherited,1060,"ions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io::FileAccess::streambuf ; (; ); const. overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ write(). void sofa::helper::io::FileAccess::write",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::FileAccessCreator< T > Member List . This is the complete list of members for sofa::helper::io::FileAccessCreator< T >, including all inherited members. create() const overridesofa::helper::io::FileAccessCreator< T >inlinevirtual; ~BaseFileAccessCreator()sofa::helper::io::BaseFileAccessCreatorinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html:300,Modifiability,Inherit,Inheritance,300,﻿. SOFA API: sofa::helper::io::FileAccessCreator< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::FileAccessCreator< T > Class Template Reference . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccessCreator< T >:. [legend]. Public Member Functions; T * create () const override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccessCreator; virtual ~BaseFileAccessCreator ();  . Function details. ◆ create(). template<class T > . T* sofa::helper::io::FileAccessCreator< T >::create ; (; ); const. inlineoverridevirtual . Implements sofa::helper::io::BaseFileAccessCreator. sofahelperioFileAccessCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html:460,Modifiability,inherit,inherited,460,﻿. SOFA API: sofa::helper::io::FileAccessCreator< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::FileAccessCreator< T > Class Template Reference . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccessCreator< T >:. [legend]. Public Member Functions; T * create () const override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccessCreator; virtual ~BaseFileAccessCreator ();  . Function details. ◆ create(). template<class T > . T* sofa::helper::io::FileAccessCreator< T >::create ; (; ); const. inlineoverridevirtual . Implements sofa::helper::io::BaseFileAccessCreator. sofahelperioFileAccessCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::Image Member List . This is the complete list of members for sofa::helper::io::Image, including all inherited members. BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html:2406,Performance,load,load,2406,"age; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::helper::io::Image; Image(const Image &rhs)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned bpp)sofa::helper::io::Image; isLoaded() constsofa::helper::io::Imageinline; L enum valuesofa::helper::io::Image; LA enum valuesofa::helper::io::Image; load(std::string filename)sofa::helper::io::Imagevirtual; m_bLoadedsofa::helper::io::Imageprotected; operator=(const Image &rhs)sofa::helper::io::Image; R enum valuesofa::helper::io::Image; RG enum valuesofa::helper::io::Image; RGB enum valuesofa::helper::io::Image; RGBA enum valuesofa::helper::io::Image; save(std::string filename, int compression_level=-1)sofa::helper::io::Imagevirtual; strFromChannelFormatsofa::helper::io::Imagestatic; strFromDataTypesofa::helper::io::Imagestatic; strFromTextureTypesofa::helper::io::Imagestatic; TEXTURE_2D enum valuesofa::helper::io::Image; TEXTURE_3D enum valuesofa::helper::io::Image; TEXTURE_CUBE enum valuesofa::helper::io::Image; TEXTURE_INVALID enum valuesofa::helper::io::Image; TextureType enum namesofa::helper::io::Image; UCOMPRESSED enum valuesofa::helper::io::Image; UINT32 enum valuesofa::helper::io::Image; UNORM16 enum valuesofa::helper::io::Image; UNORM8 enum valuesofa::helper::io::Image; ~Image()sofa::helper::io::Imagevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html:364,Usability,clear,clear,364," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::help",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:325,Modifiability,Inherit,Inheritance,325,"﻿. SOFA API: sofa::helper::io::Image Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Image Class Reference . #include <Image.h>. Inheritance diagram for sofa::helper::io::Image:. [legend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:1994,Performance,load,load,1994,"gend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (std::string filename);  ; virtual bool save (std::string filename, int compression_level=-1);  . Static Public Member Functions; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:5814,Performance,load,load,5814," (; unsigned ; mipmap). ◆ getMipmapRangeSize(). unsigned sofa::helper::io::Image::getMipmapRangeSize ; (; unsigned ; firstMipmap, . unsigned ; mipmaps . ); const. ◆ getMipmapSize(). unsigned sofa::helper::io::Image::getMipmapSize ; (; unsigned ; mipmap); const. ◆ getPixelCount(). unsigned sofa::helper::io::Image::getPixelCount ; (; ); const. ◆ getPixels(). unsigned char * sofa::helper::io::Image::getPixels ; (; ). ◆ getTextureType(). Image::TextureType sofa::helper::io::Image::getTextureType ; (; ); const. ◆ getWidth(). unsigned sofa::helper::io::Image::getWidth ; (; unsigned ; mipmap = 0); const. ◆ init() [1/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; bpp . ). ◆ init() [2/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; depth, . unsigned ; mipmaps, . DataType ; dataType, . ChannelFormat ; channelFormat . ). ◆ isLoaded(). bool sofa::helper::io::Image::isLoaded ; (; ); const. inline . ◆ load(). bool sofa::helper::io::Image::load ; (; std::string ; filename). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. ◆ operator=(). Image & sofa::helper::io::Image::operator= ; (; const Image & ; rhs). ◆ save(). bool sofa::helper::io::Image::save ; (; std::string ; filename, . int ; compression_level = -1 . ). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. Enum details. ◆ ChannelFormat. enum sofa::helper::io::Image::ChannelFormat. EnumeratorL ; LA ; R ; RG ; RGB ; RGBA ; BGR ; BGRA ; COUNT_OF_CHANNEL_FORMATS . ◆ DataType. enum sofa::helper::io::Image::DataType. EnumeratorUNORM8 ; UNORM16 ; UINT32 ; HALF ; FLOAT ; UCOMPRESSED ; COUNT_OF_DATA_TYPES . ◆ TextureType. enum sofa::helper::io::Image::TextureType. EnumeratorTEXTURE_2D ; TEXTURE_3D ; TEXTURE_CUBE ; COUNT_OF_TEXTURE_TYPES ; TEXTURE_INVALID . sofahelperioImage; Generated on Mon Nov 11 2024 03:31:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:5852,Performance,load,load,5852,"etMipmapRangeSize(). unsigned sofa::helper::io::Image::getMipmapRangeSize ; (; unsigned ; firstMipmap, . unsigned ; mipmaps . ); const. ◆ getMipmapSize(). unsigned sofa::helper::io::Image::getMipmapSize ; (; unsigned ; mipmap); const. ◆ getPixelCount(). unsigned sofa::helper::io::Image::getPixelCount ; (; ); const. ◆ getPixels(). unsigned char * sofa::helper::io::Image::getPixels ; (; ). ◆ getTextureType(). Image::TextureType sofa::helper::io::Image::getTextureType ; (; ); const. ◆ getWidth(). unsigned sofa::helper::io::Image::getWidth ; (; unsigned ; mipmap = 0); const. ◆ init() [1/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; bpp . ). ◆ init() [2/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; depth, . unsigned ; mipmaps, . DataType ; dataType, . ChannelFormat ; channelFormat . ). ◆ isLoaded(). bool sofa::helper::io::Image::isLoaded ; (; ); const. inline . ◆ load(). bool sofa::helper::io::Image::load ; (; std::string ; filename). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. ◆ operator=(). Image & sofa::helper::io::Image::operator= ; (; const Image & ; rhs). ◆ save(). bool sofa::helper::io::Image::save ; (; std::string ; filename, . int ; compression_level = -1 . ). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. Enum details. ◆ ChannelFormat. enum sofa::helper::io::Image::ChannelFormat. EnumeratorL ; LA ; R ; RG ; RGB ; RGBA ; BGR ; BGRA ; COUNT_OF_CHANNEL_FORMATS . ◆ DataType. enum sofa::helper::io::Image::DataType. EnumeratorUNORM8 ; UNORM16 ; UINT32 ; HALF ; FLOAT ; UCOMPRESSED ; COUNT_OF_DATA_TYPES . ◆ TextureType. enum sofa::helper::io::Image::TextureType. EnumeratorTEXTURE_2D ; TEXTURE_3D ; TEXTURE_CUBE ; COUNT_OF_TEXTURE_TYPES ; TEXTURE_INVALID . sofahelperioImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:1749,Usability,clear,clear,1749,"gend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (std::string filename);  ; virtual bool save (std::string filename, int compression_level=-1);  . Static Public Member Functions; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:3178,Usability,clear,clear,3178,"mplate<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat. const char * sofa::helper::io::Image::strFromChannelFormat. static . Initial value:=; {; ""L"",; ""LA"",; ""R"",; ""RG"",; ""RGB"",; ""RGBA"",; ""BGR"",; ""BGRA"",; ; ""COUNT_OF_CHANNEL_FORMATS""; }. ◆ strFromDataType. const char * sofa::helper::io::Image::strFromDataType. static . Initial value:=; {; ""UNORM8"",; ""UNORM16"",; ""UINT32"",; ""HALF"",; ""FLOAT"",; ; ""UCOMPRESSED"",; ; ""COUNT_OF_DATA_TYPES""; }. ◆ strFromTextureType. const char * sofa::helper::io::Image::strFromTextureType. static . Initial value:=; {; ""TEXTURE_2D"",; ""TEXTURE_3D"",; ""TEXTURE_CUBE"",; ; ""TEXTURE_INVALID""; }. Constructor details. ◆ Image() [1/2]. sofa::helper::io::Image::Image ; (; ). ◆ ~Image(). sofa::helper::io::Image::~Image ; (; ). virtual . ◆ Image() [2/2]. sofa::helper::io::Image::Image ; (; const Image & ; rhs). Function details. ◆ clear(). void sofa::helper::io::Image::clear ; (; ). ◆ create(). template<class Object > . static Object* sofa::helper::io::Image::create ; (; Object * ; , . std::string ; arg = """" . ). inlinestatic . ◆ Create(). Image * sofa::helper::io::Image::Create ; (; std::string ; filename). static . ◆ get3DSliceMipmapPixels(). unsigned char * sofa::helper::io::Image::get3DSliceMipmapPixels ; (; unsigned ; slice, . unsigned ; mipmap . ). ◆ getBytesPerBlock(). unsigned sofa::helper::io::Image::getBytesPerBlock ; (; ); const. ◆ getBytesPerChannel(). unsigned sofa::helper::io::Image::getBytesPerChannel ; (; ); const. ◆ getBytesPerPixel(). unsigned sofa::helper::io::Image::getBytesPerPixel ; (; ); const. ◆ getChannelCount(). unsigned sofa::helper::io::Image::getChannelCount ; (; ); const. ◆ getChannelFormat(). Image::ChannelFormat sofa::helper::io::Image::getChannelFormat ; (; ); const. ◆ getCubeMipmapPixels(). unsigned char * sofa::helper::io::Image::getCubeMipmapPixels ; (; unsigned ; cubeside, . uns",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:3217,Usability,clear,clear,3217,"ic Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat. const char * sofa::helper::io::Image::strFromChannelFormat. static . Initial value:=; {; ""L"",; ""LA"",; ""R"",; ""RG"",; ""RGB"",; ""RGBA"",; ""BGR"",; ""BGRA"",; ; ""COUNT_OF_CHANNEL_FORMATS""; }. ◆ strFromDataType. const char * sofa::helper::io::Image::strFromDataType. static . Initial value:=; {; ""UNORM8"",; ""UNORM16"",; ""UINT32"",; ""HALF"",; ""FLOAT"",; ; ""UCOMPRESSED"",; ; ""COUNT_OF_DATA_TYPES""; }. ◆ strFromTextureType. const char * sofa::helper::io::Image::strFromTextureType. static . Initial value:=; {; ""TEXTURE_2D"",; ""TEXTURE_3D"",; ""TEXTURE_CUBE"",; ; ""TEXTURE_INVALID""; }. Constructor details. ◆ Image() [1/2]. sofa::helper::io::Image::Image ; (; ). ◆ ~Image(). sofa::helper::io::Image::~Image ; (; ). virtual . ◆ Image() [2/2]. sofa::helper::io::Image::Image ; (; const Image & ; rhs). Function details. ◆ clear(). void sofa::helper::io::Image::clear ; (; ). ◆ create(). template<class Object > . static Object* sofa::helper::io::Image::create ; (; Object * ; , . std::string ; arg = """" . ). inlinestatic . ◆ Create(). Image * sofa::helper::io::Image::Create ; (; std::string ; filename). static . ◆ get3DSliceMipmapPixels(). unsigned char * sofa::helper::io::Image::get3DSliceMipmapPixels ; (; unsigned ; slice, . unsigned ; mipmap . ). ◆ getBytesPerBlock(). unsigned sofa::helper::io::Image::getBytesPerBlock ; (; ); const. ◆ getBytesPerChannel(). unsigned sofa::helper::io::Image::getBytesPerChannel ; (; ); const. ◆ getBytesPerPixel(). unsigned sofa::helper::io::Image::getBytesPerPixel ; (; ); const. ◆ getChannelCount(). unsigned sofa::helper::io::Image::getChannelCount ; (; ); const. ◆ getChannelFormat(). Image::ChannelFormat sofa::helper::io::Image::getChannelFormat ; (; ); const. ◆ getCubeMipmapPixels(). unsigned char * sofa::helper::io::Image::getCubeMipmapPixels ; (; unsigned ; cubeside, . unsigned ; mipmap . ). ◆ getDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::ImageDDS Member List . This is the complete list of members for sofa::helper::io::ImageDDS, including all inherited members. BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; Create(std::string filename)sofa::helper::io::Imagestatic; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html:2527,Performance,load,load,2527,"stsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::helper::io::Image; Image(const Image &rhs)sofa::helper::io::Image; ImageDDS()sofa::helper::io::ImageDDSinline; ImageDDS(const std::string &filename)sofa::helper::io::ImageDDSinline; init(unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned bpp)sofa::helper::io::Image; isLoaded() constsofa::helper::io::Imageinline; L enum valuesofa::helper::io::Image; LA enum valuesofa::helper::io::Image; load(std::string filename) overridesofa::helper::io::ImageDDSvirtual; m_bLoadedsofa::helper::io::Imageprotected; operator=(const Image &rhs)sofa::helper::io::Image; R enum valuesofa::helper::io::Image; RG enum valuesofa::helper::io::Image; RGB enum valuesofa::helper::io::Image; RGBA enum valuesofa::helper::io::Image; save(std::string filename, int compression_level=-1) overridesofa::helper::io::ImageDDSvirtual; strFromChannelFormatsofa::helper::io::Imagestatic; strFromDataTypesofa::helper::io::Imagestatic; strFromTextureTypesofa::helper::io::Imagestatic; TEXTURE_2D enum valuesofa::helper::io::Image; TEXTURE_3D enum valuesofa::helper::io::Image; TEXTURE_CUBE enum valuesofa::helper::io::Image; TEXTURE_INVALID enum valuesofa::helper::io::Image; TextureType enum namesofa::helper::io::Image; UCOMPRESSED enum valuesofa::helper::io::Image; UINT32 enum valuesofa::helper::io::Image; UNORM16 enum valuesofa::helper::io::Image; UNORM8 enum valuesofa::helper::io::Image; ~Image()sofa::helper::io::Image",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html:370,Usability,clear,clear,370," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; Create(std::string filename)sofa::helper::io::Imagestatic; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:248,Modifiability,Inherit,Inheritance,248,"﻿. SOFA API: sofa::helper::io::ImageDDS Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromData",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:540,Modifiability,inherit,inherited,540," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:1885,Modifiability,Inherit,Inherited,1885," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:1930,Modifiability,inherit,inherited,1930," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:2193,Modifiability,inherit,inherited,2193," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:2293,Modifiability,inherit,inherited,2293," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:402,Performance,load,load,402," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:2685,Performance,load,load,2685," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:2726,Performance,load,load,2726," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:1642,Usability,clear,clear,1642," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::ImageRAW Member List . This is the complete list of members for sofa::helper::io::ImageRAW, including all inherited members. BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeader()sofa::helper::io::ImageRAWinline; getHeader() constsofa::helper::io::ImageRAWinline; getHeaderSize() constsofa::helper::io::ImageRAWinline; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html:2655,Performance,load,load,2655,"e; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::helper::io::Image; Image(const Image &rhs)sofa::helper::io::Image; ImageRAW()sofa::helper::io::ImageRAW; init(unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned bpp)sofa::helper::io::Image; initHeader(unsigned hsize)sofa::helper::io::ImageRAW; isLoaded() constsofa::helper::io::Imageinline; L enum valuesofa::helper::io::Image; LA enum valuesofa::helper::io::Image; load(std::string filename) overridesofa::helper::io::ImageRAWvirtual; m_bLoadedsofa::helper::io::Imageprotected; operator=(const Image &rhs)sofa::helper::io::Image; R enum valuesofa::helper::io::Image; RG enum valuesofa::helper::io::Image; RGB enum valuesofa::helper::io::Image; RGBA enum valuesofa::helper::io::Image; save(std::string filename, int compression_level=-1) overridesofa::helper::io::ImageRAWvirtual; strFromChannelFormatsofa::helper::io::Imagestatic; strFromDataTypesofa::helper::io::Imagestatic; strFromTextureTypesofa::helper::io::Imagestatic; TEXTURE_2D enum valuesofa::helper::io::Image; TEXTURE_3D enum valuesofa::helper::io::Image; TEXTURE_CUBE enum valuesofa::helper::io::Image; TEXTURE_INVALID enum valuesofa::helper::io::Image; TextureType enum namesofa::helper::io::Image; UCOMPRESSED enum valuesofa::helper::io::Image; UINT32 enum valuesofa::helper::io::Image; UNORM16 enum valuesofa::helper::io::Image; UNORM8 enum valuesofa::helper::io::Image; ~Image()sofa::helper::io::Image",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html:370,Usability,clear,clear,370," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeader()sofa::helper::io::ImageRAWinline; getHeader() constsofa::helper::io::ImageRAWinline; getHeaderSize() constsofa::helper::io::ImageRAWinline; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:248,Modifiability,Inherit,Inheritance,248,"﻿. SOFA API: sofa::helper::io::ImageRAW Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:674,Modifiability,inherit,inherited,674,"List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:2019,Modifiability,Inherit,Inherited,2019,"ned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:2064,Modifiability,inherit,inherited,2064,"ned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:2327,Modifiability,inherit,inherited,2327,"ned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:2427,Modifiability,inherit,inherited,2427,"ned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:536,Performance,load,load,536,"List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:3151,Performance,load,load,3151,"tPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageRAW::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageRAW; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:3192,Performance,load,load,3192,"tPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageRAW::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageRAW; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:1776,Usability,clear,clear,1776,"List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html:216,Modifiability,inherit,inherited,216,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::Mesh Member List . This is the complete list of members for sofa::helper::io::Mesh, including all inherited members. create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html:395,Performance,load,loader,395," create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html:2497,Performance,load,loaderTypesofa,2497,etQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsofa::helper::io::Meshinline; getTrianglesGroups() constsofa::helper::io::Meshinline; getVertices()sofa::helper::io::Meshinline; getVertices() constsofa::helper::io::Meshinline; groupssofa::helper::io::Meshprotected; HighOrderEdgePosition typedefsofa::helper::io::Mesh; HighOrderHexahedronPosition typedefsofa::helper::io::Mesh; HighOrderQuadPosition typedefsofa::helper::io::Mesh; HighOrderTetrahedronPosition typedefsofa::helper::io::Mesh; HighOrderTrianglePosition typedefsofa::helper::io::Mesh; loaderTypesofa::helper::io::Mesh; m_edgessofa::helper::io::Meshprotected; m_edgesGroupssofa::helper::io::Meshprotected; m_hexahedrasofa::helper::io::Meshprotected; m_hexahedraGroupssofa::helper::io::Meshprotected; m_highOrderEdgePositionssofa::helper::io::Meshprotected; m_highOrderQuadPositionssofa::helper::io::Meshprotected; m_highOrderTrianglePositionssofa::helper::io::Meshprotected; m_pentahedraGroupssofa::helper::io::Meshprotected; m_polygonssofa::helper::io::Meshprotected; m_polygonsGroupssofa::helper::io::Meshprotected; m_pyramidsGroupssofa::helper::io::Meshprotected; m_quadssofa::helper::io::Meshprotected; m_quadsGroupssofa::helper::io::Meshprotected; m_tetrahedrasofa::helper::io::Meshprotected; m_tetrahedraGroupssofa::helper::io::Meshprotected; m_trianglessofa::helper::io::Meshprotected; m_trianglesGroupssofa::helper::io::Meshprotected; m_verticessofa::helper::io::Meshprotected; materialsofa::helper::io::Meshprotected; Material typedefsofa::helper::io::Mesh; materialssofa::helper::io::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:315,Modifiability,Inherit,Inheritance,315,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:405,Performance,load,loaderType,405,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:545,Performance,load,loaded,545,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:632,Performance,load,loaded,632,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:707,Performance,load,loaded,707,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:805,Performance,load,loaded,805,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:925,Performance,load,loaded,925,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:1057,Performance,load,loaded,1057, SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:1177,Performance,load,loaded,1177,ublic Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; so,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:1269,Performance,load,loaded,1269,ist of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:1358,Performance,load,loaded,1358,ce diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string t,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:4740,Performance,load,loader,4740,"QuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTetrahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5091,Performance,load,loaderType,5091," PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5139,Performance,load,loaderType,5139,"Groups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . H",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5252,Performance,load,loaded,5252,"a::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5499,Performance,load,loaded,5499,"erial > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5802,Performance,load,loaded,5802,"te<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5975,Performance,load,loaded,5975, > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector<,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:6164,Performance,load,loaded,6164,pe. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedra,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:6433,Performance,load,loaded,6433, > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:6798,Performance,load,loaded,6798, the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . Groups of Triangles. . ◆ m_vertices. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::m_vertices. protected . ◆ material. Material sofa::helper::io::Mesh::material. protected . ◆ materials. std::vector<Material> sofa::helper::io::Mesh::materials. protected . ◆ normals. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::normals. protected . ◆ texCoords. s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:7049,Performance,load,loaded,7049,TrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . Groups of Triangles. . ◆ m_vertices. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::m_vertices. protected . ◆ material. Material sofa::helper::io::Mesh::material. protected . ◆ materials. std::vector<Material> sofa::helper::io::Mesh::materials. protected . ◆ normals. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::normals. protected . ◆ texCoords. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::texCoords. protected . ◆ textureName. std::string sofa::helper::io::Mesh::textureName. protected . Function details. ◆ Create() [1/2]. Mesh * sofa::helper::io::Mesh::Create ; (; const std::string,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:7309,Performance,load,loaded,7309,"ra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . Groups of Triangles. . ◆ m_vertices. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::m_vertices. protected . ◆ material. Material sofa::helper::io::Mesh::material. protected . ◆ materials. std::vector<Material> sofa::helper::io::Mesh::materials. protected . ◆ normals. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::normals. protected . ◆ texCoords. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::texCoords. protected . ◆ textureName. std::string sofa::helper::io::Mesh::textureName. protected . Function details. ◆ Create() [1/2]. Mesh * sofa::helper::io::Mesh::Create ; (; const std::string & ; filename). static . ◆ Create() [2/2]. Mesh * sofa::helper::io::Mesh::Create ; (; const std::string & ; loader, . const std::string & ; filename . ). static . ◆ create(). template<class Object > . static Object* sofa::helper::io::Mesh::create ; (; Object *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:8149,Performance,load,loader,8149,"lper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . Groups of Triangles. . ◆ m_vertices. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::m_vertices. protected . ◆ material. Material sofa::helper::io::Mesh::material. protected . ◆ materials. std::vector<Material> sofa::helper::io::Mesh::materials. protected . ◆ normals. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::normals. protected . ◆ texCoords. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::texCoords. protected . ◆ textureName. std::string sofa::helper::io::Mesh::textureName. protected . Function details. ◆ Create() [1/2]. Mesh * sofa::helper::io::Mesh::Create ; (; const std::string & ; filename). static . ◆ Create() [2/2]. Mesh * sofa::helper::io::Mesh::Create ; (; const std::string & ; loader, . const std::string & ; filename . ). static . ◆ create(). template<class Object > . static Object* sofa::helper::io::Mesh::create ; (; Object * ; , . std::string ; arg . ). inlinestatic . ◆ getEdges() [1/2]. sofa::type::vector< Edge >& sofa::helper::io::Mesh::getEdges ; (; ). inline . ◆ getEdges() [2/2]. const sofa::type::vector< Edge >& sofa::helper::io::Mesh::getEdges ; (; ); const. inline . ◆ getEdgesGroups(). const sofa::type::vector< PrimitiveGroup >& sofa::helper::io::Mesh::getEdgesGroups ; (; ); const. inline . ◆ getFacets() [1/2]. sofa::type::vector< type::vector < type::vector <PointID> > >& sofa::helper::io::Mesh::getFacets ; (; ). inline . ◆ getFacets() [2/2]. const sofa::type::vector< type::vector < type::vector <PointID> > >& sofa::helper::io::Mesh::getFacets ; (; ); const. inline . ◆ getGroups(). const std::vector<PrimitiveGroup>& sofa::helper::io::Mesh::getGroups ; (; ). inline . ◆ getHexahedra() [1/2]. sofa::type::vector< Hexahedron ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::MeshGmsh Member List . This is the complete list of members for sofa::helper::io::MeshGmsh, including all inherited members. addInGroup(type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid)sofa::helper::io::MeshGmshprotected; create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helpe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html:527,Performance,load,loader,527," addInGroup(type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid)sofa::helper::io::MeshGmshprotected; create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helpe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html:2683,Performance,load,loaderTypesofa,2683,tsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsofa::helper::io::Meshinline; getTrianglesGroups() constsofa::helper::io::Meshinline; getVertices()sofa::helper::io::Meshinline; getVertices() constsofa::helper::io::Meshinline; groupssofa::helper::io::Meshprotected; HighOrderEdgePosition typedefsofa::helper::io::Mesh; HighOrderHexahedronPosition typedefsofa::helper::io::Mesh; HighOrderQuadPosition typedefsofa::helper::io::Mesh; HighOrderTetrahedronPosition typedefsofa::helper::io::Mesh; HighOrderTrianglePosition typedefsofa::helper::io::Mesh; init(std::string filename)sofa::helper::io::MeshGmsh; loaderTypesofa::helper::io::Mesh; m_edgessofa::helper::io::Meshprotected; m_edgesGroupssofa::helper::io::Meshprotected; m_hexahedrasofa::helper::io::Meshprotected; m_hexahedraGroupssofa::helper::io::Meshprotected; m_highOrderEdgePositionssofa::helper::io::Meshprotected; m_highOrderQuadPositionssofa::helper::io::Meshprotected; m_highOrderTrianglePositionssofa::helper::io::Meshprotected; m_pentahedraGroupssofa::helper::io::Meshprotected; m_polygonssofa::helper::io::Meshprotected; m_polygonsGroupssofa::helper::io::Meshprotected; m_pyramidsGroupssofa::helper::io::Meshprotected; m_quadssofa::helper::io::Meshprotected; m_quadsGroupssofa::helper::io::Meshprotected; m_tetrahedrasofa::helper::io::Meshprotected; m_tetrahedraGroupssofa::helper::io::Meshprotected; m_trianglessofa::helper::io::Meshprotected; m_trianglesGroupssofa::helper::io::Meshprotected; m_verticessofa::helper::io::Meshprotected; Material typedefsofa::helper::io::Mesh; materialsofa::helper::io::Meshprotected; materialssofa::helper::io::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:278,Modifiability,Inherit,Inheritance,278,"﻿. SOFA API: sofa::helper::io::MeshGmsh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::MeshGmsh Class Reference . #include <MeshGmsh.h>. Inheritance diagram for sofa::helper::io::MeshGmsh:. [legend]. Public Member Functions;  MeshGmsh (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:472,Modifiability,inherit,inherited,472," Public Member Functions;  MeshGmsh (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3042,Modifiability,Inherit,Inherited,3042,"Group > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3080,Modifiability,inherit,inherited,3080,"Group > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3168,Modifiability,inherit,inherited,3168,"Group > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:5137,Modifiability,inherit,inherited,5137,"hedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string textureName;  ;  Static Public Member Functions inherited from sofa::helper::io::Mesh; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Constructor details. ◆ MeshGmsh(). sofa::helper::io::MeshGmsh::MeshGmsh ; (; const std::string & ; filename). inline . Function details. ◆ addInGroup(). void sofa::helper::io::MeshGmsh::addInGroup ; (; type::vector< sofa::type::PrimitiveGroup > & ; group, . int ; tag, . std::size_t ; eid . ). protected . ◆ init(). void sofa::helper::io::MeshGmsh::init ; (; std::string ; filename). ◆ normalizeGroup(). void sofa::helper::io::MeshGmsh::normalizeGroup ; (; type::vector< sofa::type::PrimitiveGroup > & ; group). protected . ◆ readGmsh(). bool sofa::helper::io::MeshGmsh::readGmsh ; (; std::ifstream & ; file, . const unsigned int ; gmshFormat . ). protected . sofahelperioMeshGmsh; Generated on Mon N",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3131,Performance,load,loaderType,3131,"Group > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3310,Performance,load,loaded,3310,"Group > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3397,Performance,load,loaded,3397,"tions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3472,Performance,load,loaded,3472,"hOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3570,Performance,load,loaded,3570,"& getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3690,Performance,load,loaded,3690,"l > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3822,Performance,load,loaded,3822," Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3942,Performance,load,loaded,3942,":type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:4034,Performance,load,loaded,4034,e::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:4123,Performance,load,loaded,4123, from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string t,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:5272,Performance,load,loader,5272,"hedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string textureName;  ;  Static Public Member Functions inherited from sofa::helper::io::Mesh; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Constructor details. ◆ MeshGmsh(). sofa::helper::io::MeshGmsh::MeshGmsh ; (; const std::string & ; filename). inline . Function details. ◆ addInGroup(). void sofa::helper::io::MeshGmsh::addInGroup ; (; type::vector< sofa::type::PrimitiveGroup > & ; group, . int ; tag, . std::size_t ; eid . ). protected . ◆ init(). void sofa::helper::io::MeshGmsh::init ; (; std::string ; filename). ◆ normalizeGroup(). void sofa::helper::io::MeshGmsh::normalizeGroup ; (; type::vector< sofa::type::PrimitiveGroup > & ; group). protected . ◆ readGmsh(). bool sofa::helper::io::MeshGmsh::readGmsh ; (; std::ifstream & ; file, . const unsigned int ; gmshFormat . ). protected . sofahelperioMeshGmsh; Generated on Mon N",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html:222,Modifiability,inherit,inherited,222,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::MeshOBJ Member List . This is the complete list of members for sofa::helper::io::MeshOBJ, including all inherited members. create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html:401,Performance,load,loader,401," create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html:2556,Performance,load,loaderTypesofa,2556,stsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsofa::helper::io::Meshinline; getTrianglesGroups() constsofa::helper::io::Meshinline; getVertices()sofa::helper::io::Meshinline; getVertices() constsofa::helper::io::Meshinline; groupssofa::helper::io::Meshprotected; HighOrderEdgePosition typedefsofa::helper::io::Mesh; HighOrderHexahedronPosition typedefsofa::helper::io::Mesh; HighOrderQuadPosition typedefsofa::helper::io::Mesh; HighOrderTetrahedronPosition typedefsofa::helper::io::Mesh; HighOrderTrianglePosition typedefsofa::helper::io::Mesh; init(std::string filename)sofa::helper::io::MeshOBJ; loaderTypesofa::helper::io::Mesh; m_edgessofa::helper::io::Meshprotected; m_edgesGroupssofa::helper::io::Meshprotected; m_hexahedrasofa::helper::io::Meshprotected; m_hexahedraGroupssofa::helper::io::Meshprotected; m_highOrderEdgePositionssofa::helper::io::Meshprotected; m_highOrderQuadPositionssofa::helper::io::Meshprotected; m_highOrderTrianglePositionssofa::helper::io::Meshprotected; m_pentahedraGroupssofa::helper::io::Meshprotected; m_polygonssofa::helper::io::Meshprotected; m_polygonsGroupssofa::helper::io::Meshprotected; m_pyramidsGroupssofa::helper::io::Meshprotected; m_quadssofa::helper::io::Meshprotected; m_quadsGroupssofa::helper::io::Meshprotected; m_tetrahedrasofa::helper::io::Meshprotected; m_tetrahedraGroupssofa::helper::io::Meshprotected; m_trianglessofa::helper::io::Meshprotected; m_trianglesGroupssofa::helper::io::Meshprotected; m_verticessofa::helper::io::Meshprotected; Material typedefsofa::helper::io::Mesh; materialsofa::helper::io::Meshprotected; materialssofa::helper::io::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:275,Modifiability,Inherit,Inheritance,275,"﻿. SOFA API: sofa::helper::io::MeshOBJ Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::MeshOBJ Class Reference . #include <MeshOBJ.h>. Inheritance diagram for sofa::helper::io::MeshOBJ:. [legend]. Public Member Functions;  MeshOBJ (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:467,Modifiability,inherit,inherited,467," Public Member Functions;  MeshOBJ (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:2899,Modifiability,Inherit,Inherited,2899,"ahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:2937,Modifiability,inherit,inherited,2937,"ahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3025,Modifiability,inherit,inherited,3025,"ahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:4994,Modifiability,inherit,inherited,4994,"er quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string textureName;  ;  Static Public Member Functions inherited from sofa::helper::io::Mesh; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Constructor details. ◆ MeshOBJ(). sofa::helper::io::MeshOBJ::MeshOBJ ; (; const std::string & ; filename). inline . Function details. ◆ init(). void sofa::helper::io::MeshOBJ::init ; (; std::string ; filename). ◆ readMTL(). void sofa::helper::io::MeshOBJ::readMTL ; (; const char * ; filename). protected . ◆ readOBJ(). void sofa::helper::io::MeshOBJ::readOBJ ; (; std::istream & ; file, . const std::string & ; filename . ). protected . sofahelperioMeshOBJ; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:2988,Performance,load,loaderType,2988,"ahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3167,Performance,load,loaded,3167,"ahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getHexahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPentahedraGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3254,Performance,load,loaded,3254,"::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3329,Performance,load,loaded,3329,"e::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3427,Performance,load,loaded,3427,":type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3547,Performance,load,loaded,3547,"tor< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3679,Performance,load,loaded,3679,"tor< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3799,Performance,load,loaded,3799," . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3891,Performance,load,loaded,3891,dMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3980,Performance,load,loaded,3980, from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string t,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:5129,Performance,load,loader,5129,"er quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string textureName;  ;  Static Public Member Functions inherited from sofa::helper::io::Mesh; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Constructor details. ◆ MeshOBJ(). sofa::helper::io::MeshOBJ::MeshOBJ ; (; const std::string & ; filename). inline . Function details. ◆ init(). void sofa::helper::io::MeshOBJ::init ; (; std::string ; filename). ◆ readMTL(). void sofa::helper::io::MeshOBJ::readMTL ; (; const char * ; filename). protected . ◆ readOBJ(). void sofa::helper::io::MeshOBJ::readOBJ ; (; std::istream & ; file, . const std::string & ; filename . ). protected . sofahelperioMeshOBJ; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::MeshTopologyLoader Member List . This is the complete list of members for sofa::helper::io::MeshTopologyLoader, including all inherited members. addCube(Index, Index, Index, Index, Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addLine(Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addPoint(SReal, SReal, SReal)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addQuad(Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addTetra(Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addTriangle(Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; Index typedefsofa::helper::io::MeshTopologyLoader; load(const char *filename)sofa::helper::io::MeshTopologyLoader; MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinline; setNbCubes(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbEdges(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbLines(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbPoints(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbQuads(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTetrahedra(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTriangles(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; ~MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html:836,Performance,load,load,836,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::MeshTopologyLoader Member List . This is the complete list of members for sofa::helper::io::MeshTopologyLoader, including all inherited members. addCube(Index, Index, Index, Index, Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addLine(Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addPoint(SReal, SReal, SReal)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addQuad(Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addTetra(Index, Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; addTriangle(Index, Index, Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; Index typedefsofa::helper::io::MeshTopologyLoader; load(const char *filename)sofa::helper::io::MeshTopologyLoader; MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinline; setNbCubes(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbEdges(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbLines(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbPoints(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbQuads(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTetrahedra(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTriangles(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; ~MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html:278,Modifiability,Inherit,Inheritance,278,"﻿. SOFA API: sofa::helper::io::MeshTopologyLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::MeshTopologyLoader Class Reference . #include <MeshTopologyLoader.h>. Inheritance diagram for sofa::helper::io::MeshTopologyLoader:. [legend]. Public Member Functions;  MeshTopologyLoader ();  ; virtual ~MeshTopologyLoader ();  ; bool load (const char *filename);  ; virtual void setNbPoints (Index);  ; virtual void setNbLines (Index);  ; virtual void setNbEdges (Index);  ; virtual void setNbTriangles (Index);  ; virtual void setNbQuads (Index);  ; virtual void setNbTetrahedra (Index);  ; virtual void setNbCubes (Index);  ; virtual void addPoint (SReal, SReal, SReal);  ; virtual void addLine (Index, Index);  ; virtual void addTriangle (Index, Index, Index);  ; virtual void addQuad (Index, Index, Index, Index);  ; virtual void addTetra (Index, Index, Index, Index);  ; virtual void addCube (Index, Index, Index, Index, Index, Index, Index, Index);  . Constructor details. ◆ MeshTopologyLoader(). sofa::helper::io::MeshTopologyLoader::MeshTopologyLoader ; (; ). inline . ◆ ~MeshTopologyLoader(). virtual sofa::helper::io::MeshTopologyLoader::~MeshTopologyLoader ; (; ). inlinevirtual . Function details. ◆ addCube(). virtual void sofa::helper::io::MeshTopologyLoader::addCube ; (; Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addLine(). virtual void sofa::helper::io::MeshTopologyLoader::addLine ; (; Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addPoint(). virtual void sofa::helper::io::MeshTopologyLoader::addPoint ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addQuad(). virtual void sofa::helper::i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html:443,Performance,load,load,443,"﻿. SOFA API: sofa::helper::io::MeshTopologyLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::MeshTopologyLoader Class Reference . #include <MeshTopologyLoader.h>. Inheritance diagram for sofa::helper::io::MeshTopologyLoader:. [legend]. Public Member Functions;  MeshTopologyLoader ();  ; virtual ~MeshTopologyLoader ();  ; bool load (const char *filename);  ; virtual void setNbPoints (Index);  ; virtual void setNbLines (Index);  ; virtual void setNbEdges (Index);  ; virtual void setNbTriangles (Index);  ; virtual void setNbQuads (Index);  ; virtual void setNbTetrahedra (Index);  ; virtual void setNbCubes (Index);  ; virtual void addPoint (SReal, SReal, SReal);  ; virtual void addLine (Index, Index);  ; virtual void addTriangle (Index, Index, Index);  ; virtual void addQuad (Index, Index, Index, Index);  ; virtual void addTetra (Index, Index, Index, Index);  ; virtual void addCube (Index, Index, Index, Index, Index, Index, Index, Index);  . Constructor details. ◆ MeshTopologyLoader(). sofa::helper::io::MeshTopologyLoader::MeshTopologyLoader ; (; ). inline . ◆ ~MeshTopologyLoader(). virtual sofa::helper::io::MeshTopologyLoader::~MeshTopologyLoader ; (; ). inlinevirtual . Function details. ◆ addCube(). virtual void sofa::helper::io::MeshTopologyLoader::addCube ; (; Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addLine(). virtual void sofa::helper::io::MeshTopologyLoader::addLine ; (; Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addPoint(). virtual void sofa::helper::io::MeshTopologyLoader::addPoint ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addQuad(). virtual void sofa::helper::i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html:2587,Performance,load,load,2587,"shTopologyLoader. ◆ addLine(). virtual void sofa::helper::io::MeshTopologyLoader::addLine ; (; Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addPoint(). virtual void sofa::helper::io::MeshTopologyLoader::addPoint ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addQuad(). virtual void sofa::helper::io::MeshTopologyLoader::addQuad ; (; Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addTetra(). virtual void sofa::helper::io::MeshTopologyLoader::addTetra ; (; Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addTriangle(). virtual void sofa::helper::io::MeshTopologyLoader::addTriangle ; (; Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ load(). bool sofa::helper::io::MeshTopologyLoader::load ; (; const char * ; filename). ◆ setNbCubes(). virtual void sofa::helper::io::MeshTopologyLoader::setNbCubes ; (; Index ; ). inlinevirtual . ◆ setNbEdges(). virtual void sofa::helper::io::MeshTopologyLoader::setNbEdges ; (; Index ; ). inlinevirtual . ◆ setNbLines(). virtual void sofa::helper::io::MeshTopologyLoader::setNbLines ; (; Index ; ). inlinevirtual . ◆ setNbPoints(). virtual void sofa::helper::io::MeshTopologyLoader::setNbPoints ; (; Index ; ). inlinevirtual . ◆ setNbQuads(). virtual void sofa::helper::io::MeshTopologyLoader::setNbQuads ; (; Index ; ). inlinevirtual . ◆ setNbTetrahedra(). virtual void sofa::helper::io::MeshTopologyLoader::setNbTetrahedra ; (; Index ; ). inlinevirtual . ◆ setNbTriangles(). virtual void sofa::helper::io::MeshTopologyLoader::setNbTriangles ; (; Index ; ). inlinevirtual . sofahelperioMeshTopologyLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html:2638,Performance,load,load,2638,"shTopologyLoader. ◆ addLine(). virtual void sofa::helper::io::MeshTopologyLoader::addLine ; (; Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addPoint(). virtual void sofa::helper::io::MeshTopologyLoader::addPoint ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addQuad(). virtual void sofa::helper::io::MeshTopologyLoader::addQuad ; (; Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addTetra(). virtual void sofa::helper::io::MeshTopologyLoader::addTetra ; (; Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addTriangle(). virtual void sofa::helper::io::MeshTopologyLoader::addTriangle ; (; Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ load(). bool sofa::helper::io::MeshTopologyLoader::load ; (; const char * ; filename). ◆ setNbCubes(). virtual void sofa::helper::io::MeshTopologyLoader::setNbCubes ; (; Index ; ). inlinevirtual . ◆ setNbEdges(). virtual void sofa::helper::io::MeshTopologyLoader::setNbEdges ; (; Index ; ). inlinevirtual . ◆ setNbLines(). virtual void sofa::helper::io::MeshTopologyLoader::setNbLines ; (; Index ; ). inlinevirtual . ◆ setNbPoints(). virtual void sofa::helper::io::MeshTopologyLoader::setNbPoints ; (; Index ; ). inlinevirtual . ◆ setNbQuads(). virtual void sofa::helper::io::MeshTopologyLoader::setNbQuads ; (; Index ; ). inlinevirtual . ◆ setNbTetrahedra(). virtual void sofa::helper::io::MeshTopologyLoader::setNbTetrahedra ; (; Index ; ). inlinevirtual . ◆ setNbTriangles(). virtual void sofa::helper::io::MeshTopologyLoader::setNbTriangles ; (; Index ; ). inlinevirtual . sofahelperioMeshTopologyLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html:232,Modifiability,inherit,inherited,232,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::SphereLoader Member List . This is the complete list of members for sofa::helper::io::SphereLoader, including all inherited members. Load(const std::string &filename, SphereLoaderDataHook &data)sofa::helper::io::SphereLoaderstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html:251,Performance,Load,Load,251,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::SphereLoader Member List . This is the complete list of members for sofa::helper::io::SphereLoader, including all inherited members. Load(const std::string &filename, SphereLoaderDataHook &data)sofa::helper::io::SphereLoaderstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html:311,Performance,Load,Load,311,"﻿. SOFA API: sofa::helper::io::SphereLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::SphereLoader Class Reference . #include <SphereLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, SphereLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::SphereLoader::Load ; (; const std::string & ; filename, . SphereLoaderDataHook & ; data . ). static . sofahelperioSphereLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html:398,Performance,Load,Load,398,"﻿. SOFA API: sofa::helper::io::SphereLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::SphereLoader Class Reference . #include <SphereLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, SphereLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::SphereLoader::Load ; (; const std::string & ; filename, . SphereLoaderDataHook & ; data . ). static . sofahelperioSphereLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html:443,Performance,Load,Load,443,"﻿. SOFA API: sofa::helper::io::SphereLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::SphereLoader Class Reference . #include <SphereLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, SphereLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::SphereLoader::Load ; (; const std::string & ; filename, . SphereLoaderDataHook & ; data . ). static . sofahelperioSphereLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::SphereLoaderDataHook Member List . This is the complete list of members for sofa::helper::io::SphereLoaderDataHook, including all inherited members. addSphere(const SReal, const SReal, const SReal, const SReal)sofa::helper::io::SphereLoaderDataHookinlinevirtual; finalizeLoading(const bool isOk)sofa::helper::io::SphereLoaderDataHookinlinevirtual; setNumSpheres(const int n)sofa::helper::io::SphereLoaderDataHookinlinevirtual; ~SphereLoaderDataHook()sofa::helper::io::SphereLoaderDataHookinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:276,Modifiability,Inherit,Inherit,276,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:343,Modifiability,Inherit,Inheritance,343,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:440,Modifiability,Inherit,Inherit,440,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:568,Modifiability,Inherit,Inherit,568,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:298,Performance,load,load,298,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:462,Performance,load,load,462,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:873,Performance,load,loading,873,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:987,Performance,load,loading,987,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1122,Performance,Load,Loader,1122,"framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Paramet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1176,Performance,load,loading,1176,"framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Paramet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1540,Performance,Load,Loader,1540,"d to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1594,Performance,load,loading,1594,"d to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1764,Performance,Load,Loader,1764,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:1936,Performance,load,loading,1936,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2003,Performance,load,loading,2003,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2080,Performance,load,loading,2080,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2150,Performance,load,loading,2150,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2195,Performance,load,loaded,2195,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2435,Performance,load,loading,2435,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:2163,Safety,detect,detected,2163,"verride the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . ◆ setNumSpheres(). virtual void sofa::helper::io::SphereLoaderDataHook::setNumSpheres ; (; const int ; n). inlinevirtual . Called by the XspLoader to specify before loading the number of spheres. ; Parameters. nnumber of sphere. . sofahelperioSphereLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::STBImage Member List . This is the complete list of members for sofa::helper::io::STBImage, including all inherited members. BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html:2412,Performance,load,load,2412,"e() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::helper::io::Image; Image(const Image &rhs)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat)sofa::helper::io::Image; init(unsigned width, unsigned height, unsigned bpp)sofa::helper::io::Image; isLoaded() constsofa::helper::io::Imageinline; L enum valuesofa::helper::io::Image; LA enum valuesofa::helper::io::Image; load(std::string filename) overridesofa::helper::io::STBImagevirtual; m_bLoadedsofa::helper::io::Imageprotected; operator=(const Image &rhs)sofa::helper::io::Image; R enum valuesofa::helper::io::Image; RG enum valuesofa::helper::io::Image; RGB enum valuesofa::helper::io::Image; RGBA enum valuesofa::helper::io::Image; save(std::string filename, int compression_level=-1) overridesofa::helper::io::STBImagevirtual; setSTBCreators()sofa::helper::io::STBImagestatic; STBImage()=defaultsofa::helper::io::STBImage; STBImage(const std::string &filename)sofa::helper::io::STBImageinlineexplicit; strFromChannelFormatsofa::helper::io::Imagestatic; strFromDataTypesofa::helper::io::Imagestatic; strFromTextureTypesofa::helper::io::Imagestatic; TEXTURE_2D enum valuesofa::helper::io::Image; TEXTURE_3D enum valuesofa::helper::io::Image; TEXTURE_CUBE enum valuesofa::helper::io::Image; TEXTURE_INVALID enum valuesofa::helper::io::Image; TextureType enum namesofa::helper::io::Image; UCOMPRESSED enum valuesofa::he",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html:370,Usability,clear,clear,370," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:282,Modifiability,Inherit,Inheritance,282,"﻿. SOFA API: sofa::helper::io::STBImage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Memb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:582,Modifiability,inherit,inherited,582,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2014,Modifiability,inherit,inherited,2014,"ount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2198,Modifiability,Inherit,Inherited,2198," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2243,Modifiability,inherit,inherited,2243," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2506,Modifiability,inherit,inherited,2506," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:444,Performance,load,load,444,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2802,Performance,load,load,2802," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2843,Performance,load,load,2843," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:1684,Usability,clear,clear,1684,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image_creators-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::STBImageCreators Member List . This is the complete list of members for sofa::helper::io::STBImageCreators, including all inherited members. STBImageCreators()sofa::helper::io::STBImageCreators; stbSupportedExtensionssofa::helper::io::STBImageCreatorsinlinestatic; stbWriteSupportedExtensionssofa::helper::io::STBImageCreatorsinlinestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image_creators-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image_creators-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::TriangleLoader Member List . This is the complete list of members for sofa::helper::io::TriangleLoader, including all inherited members. addTriangle(int, int, int)sofa::helper::io::TriangleLoaderinlinevirtual; addVertices(SReal, SReal, SReal)sofa::helper::io::TriangleLoaderinlinevirtual; load(const char *filename)sofa::helper::io::TriangleLoader; ~TriangleLoader()sofa::helper::io::TriangleLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html:407,Performance,load,load,407,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::TriangleLoader Member List . This is the complete list of members for sofa::helper::io::TriangleLoader, including all inherited members. addTriangle(int, int, int)sofa::helper::io::TriangleLoaderinlinevirtual; addVertices(SReal, SReal, SReal)sofa::helper::io::TriangleLoaderinlinevirtual; load(const char *filename)sofa::helper::io::TriangleLoader; ~TriangleLoader()sofa::helper::io::TriangleLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html:327,Performance,load,load,327,"﻿. SOFA API: sofa::helper::io::TriangleLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::TriangleLoader Class Reference . #include <TriangleLoader.h>. Public Member Functions; virtual ~TriangleLoader ();  ; bool load (const char *filename);  ; virtual void addVertices (SReal, SReal, SReal);  ; virtual void addTriangle (int, int, int);  . Constructor details. ◆ ~TriangleLoader(). virtual sofa::helper::io::TriangleLoader::~TriangleLoader ; (; ). inlinevirtual . Function details. ◆ addTriangle(). virtual void sofa::helper::io::TriangleLoader::addTriangle ; (; int ; , . int ; , . int ;  . ). inlinevirtual . ◆ addVertices(). virtual void sofa::helper::io::TriangleLoader::addVertices ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . ◆ load(). bool sofa::helper::io::TriangleLoader::load ; (; const char * ; filename). sofahelperioTriangleLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html:863,Performance,load,load,863,"﻿. SOFA API: sofa::helper::io::TriangleLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::TriangleLoader Class Reference . #include <TriangleLoader.h>. Public Member Functions; virtual ~TriangleLoader ();  ; bool load (const char *filename);  ; virtual void addVertices (SReal, SReal, SReal);  ; virtual void addTriangle (int, int, int);  . Constructor details. ◆ ~TriangleLoader(). virtual sofa::helper::io::TriangleLoader::~TriangleLoader ; (; ). inlinevirtual . Function details. ◆ addTriangle(). virtual void sofa::helper::io::TriangleLoader::addTriangle ; (; int ; , . int ; , . int ;  . ). inlinevirtual . ◆ addVertices(). virtual void sofa::helper::io::TriangleLoader::addVertices ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . ◆ load(). bool sofa::helper::io::TriangleLoader::load ; (; const char * ; filename). sofahelperioTriangleLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html:910,Performance,load,load,910,"﻿. SOFA API: sofa::helper::io::TriangleLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::TriangleLoader Class Reference . #include <TriangleLoader.h>. Public Member Functions; virtual ~TriangleLoader ();  ; bool load (const char *filename);  ; virtual void addVertices (SReal, SReal, SReal);  ; virtual void addTriangle (int, int, int);  . Constructor details. ◆ ~TriangleLoader(). virtual sofa::helper::io::TriangleLoader::~TriangleLoader ; (; ). inlinevirtual . Function details. ◆ addTriangle(). virtual void sofa::helper::io::TriangleLoader::addTriangle ; (; int ; , . int ; , . int ;  . ). inlinevirtual . ◆ addVertices(). virtual void sofa::helper::io::TriangleLoader::addVertices ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . ◆ load(). bool sofa::helper::io::TriangleLoader::load ; (; const char * ; filename). sofahelperioTriangleLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_triangle_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::XspLoader Member List . This is the complete list of members for sofa::helper::io::XspLoader, including all inherited members. Load(const std::string &filename, XspLoaderDataHook &data)sofa::helper::io::XspLoaderstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html:245,Performance,Load,Load,245,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::XspLoader Member List . This is the complete list of members for sofa::helper::io::XspLoader, including all inherited members. Load(const std::string &filename, XspLoaderDataHook &data)sofa::helper::io::XspLoaderstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html:302,Performance,Load,Load,302,"﻿. SOFA API: sofa::helper::io::XspLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::XspLoader Class Reference . #include <XspLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, XspLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::XspLoader::Load ; (; const std::string & ; filename, . XspLoaderDataHook & ; data . ). static . sofahelperioXspLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html:386,Performance,Load,Load,386,"﻿. SOFA API: sofa::helper::io::XspLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::XspLoader Class Reference . #include <XspLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, XspLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::XspLoader::Load ; (; const std::string & ; filename, . XspLoaderDataHook & ; data . ). static . sofahelperioXspLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html:428,Performance,Load,Load,428,"﻿. SOFA API: sofa::helper::io::XspLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::io::XspLoader Class Reference . #include <XspLoader.h>. Static Public Member Functions; static bool Load (const std::string &filename, XspLoaderDataHook &data);  . Function details. ◆ Load(). bool sofa::helper::io::XspLoader::Load ; (; const std::string & ; filename, . XspLoaderDataHook & ; data . ). static . sofahelperioXspLoader; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::XspLoaderDataHook Member List . This is the complete list of members for sofa::helper::io::XspLoaderDataHook, including all inherited members. addMass(SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool)sofa::helper::io::XspLoaderDataHookinlinevirtual; addSpring(size_t, size_t, SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; addVectorSpring(size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; finalizeLoading(bool isOk)sofa::helper::io::XspLoaderDataHookinlinevirtual; setGravity(SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumMasses(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumSprings(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setViscosity(SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; ~XspLoaderDataHook()sofa::helper::io::XspLoaderDataHookvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:267,Modifiability,Inherit,Inherit,267,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:326,Modifiability,Inherit,Inheritance,326,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:420,Modifiability,Inherit,Inherit,420,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:540,Modifiability,Inherit,Inherit,540,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:1792,Modifiability,extend,extended,1792," format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; , . bool ;  . ). inlinevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SRea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3188,Modifiability,extend,extended,3188,"linevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:289,Performance,load,load,289,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:442,Performance,load,load,442,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:971,Performance,load,loading,971,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:1079,Performance,load,loading,1079,"ass Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataH",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:1201,Performance,load,loading,1201,"f all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; ,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:2497,Performance,Load,Loader,2497,"SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; , . bool ;  . ). inlinevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:2569,Performance,Load,Loader,2569,"SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; , . bool ;  . ). inlinevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:2898,Performance,Load,Loader,2898,"o::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; , . bool ;  . ). inlinevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3354,Performance,Load,Loader,3354,"mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3517,Performance,load,loading,3517,"a::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3584,Performance,load,loading,3584,">::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3661,Performance,load,loading,3661,"g(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3731,Performance,load,loading,3731," ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3776,Performance,load,loaded,3776," ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:4328,Performance,load,loading,4328,"size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). virtual void sofa::helper::io::XspLoaderDataHook::setViscosity ; (; SReal ; ). inlinevirtual . Called by the XspLoader to specify the viscosity. ; Parameters. gx,gy,gzthe three component of the gravity. . sofahelperioXspLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:4617,Performance,load,loading,4617,"size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). virtual void sofa::helper::io::XspLoaderDataHook::setViscosity ; (; SReal ; ). inlinevirtual . Called by the XspLoader to specify the viscosity. ; Parameters. gx,gy,gzthe three component of the gravity. . sofahelperioXspLoaderDataHook; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3744,Safety,detect,detected,3744," ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::kdTree< Coord > Member List . This is the complete list of members for sofa::helper::kdTree< Coord >, including all inherited members. build(const VecCoord &positions)sofa::helper::kdTree< Coord >; build(const VecCoord &positions, const type::vector< unsigned int > &ROI)sofa::helper::kdTree< Coord >; build(UIlist &list, unsigned char direction, const VecCoord &positions)sofa::helper::kdTree< Coord >protected; closest(distanceSet &cl, const Coord &x, const unsigned int &currentnode, const VecCoord &positions, unsigned N) constsofa::helper::kdTree< Coord >protected; closest(distanceToPoint &cl, const Coord &x, const unsigned int &currentnode, const VecCoord &positions) constsofa::helper::kdTree< Coord >protected; dim enum valuesofa::helper::kdTree< Coord >; distanceSet typedefsofa::helper::kdTree< Coord >; distanceSetIt typedefsofa::helper::kdTree< Coord >; distanceToPoint typedefsofa::helper::kdTree< Coord >; firstNodesofa::helper::kdTree< Coord >protected; getClosest(const Coord &x, const VecCoord &positions) constsofa::helper::kdTree< Coord >; getNClosest(distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) constsofa::helper::kdTree< Coord >; getNClosestCached(distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) constsofa::helper::kdTree< Coord >; isEmpty() constsofa::helper::kdTree< Coord >inline; operator<<(std::ostream &os, const kdTree< Coord > &)sofa::helper::kdTree< Coord >friend; operator>>(std::istream &is, kdTree< Coord > &)sofa::helper::kdTree< Coord >friend; print(const unsigned int index)sofa::helper::kdTree< Coord >protected; Real typedefsofa::helper::kdTree< Coord >; treesofa::helper::kdTree< Coord >protected; UIlist typedefsofa::helper::kdTree< Coord >; VecCoord typedefsofa::helper::kdTree< Coord ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:781,Deployability,update,updateCachedDistances,781,"﻿. SOFA API: sofa::helper::kdTree< Coord > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::kdTree< Coord > Class Template Reference . #include <kdTree.h>; Detailed Description; template<class Coord>; class sofa::helper::kdTree< Coord >; This class implements classical kd tree for nearest neighbors search; the tree is rebuild from points by calling build(p); N nearest points from point x (in terms of euclidean distance) are retrieved with getNClosest(distance/index_List , x , N); Caching may be used to speed up retrieval: if dx< (d(n)-d(0))/2, then the closest point is in the n-1 cached points (updateCachedDistances is used to update the n-1 distances) see for instance: [zhang92] report and [simon96] thesis for more details. AuthorBenjamin Gilles . Classes; struct  TREENODE;  . Protected Attributes; type::vector< TREENODE > tree;  ; unsigned int firstNode;  . Public Member Functions; bool isEmpty () const;  ; void build (const VecCoord &positions);  update tree (to be used whenever positions have changed) More...;  ; void build (const VecCoord &positions, const type::vector< unsigned int > &ROI);  update tree based on positions subset (to be used whenever points p have changed) More...;  ; void getNClosest (distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) const;  get an ordered set of n distance/index pairs between positions and x More...;  ; unsigned int getClosest (const Coord &x, const VecCoord &positions) const;  get the index of the closest point between positions and x More...;  ; bool getNClosestCached (distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) const;  use distance caching to accelerate closest point computation when positions ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:814,Deployability,update,update,814,"﻿. SOFA API: sofa::helper::kdTree< Coord > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::kdTree< Coord > Class Template Reference . #include <kdTree.h>; Detailed Description; template<class Coord>; class sofa::helper::kdTree< Coord >; This class implements classical kd tree for nearest neighbors search; the tree is rebuild from points by calling build(p); N nearest points from point x (in terms of euclidean distance) are retrieved with getNClosest(distance/index_List , x , N); Caching may be used to speed up retrieval: if dx< (d(n)-d(0))/2, then the closest point is in the n-1 cached points (updateCachedDistances is used to update the n-1 distances) see for instance: [zhang92] report and [simon96] thesis for more details. AuthorBenjamin Gilles . Classes; struct  TREENODE;  . Protected Attributes; type::vector< TREENODE > tree;  ; unsigned int firstNode;  . Public Member Functions; bool isEmpty () const;  ; void build (const VecCoord &positions);  update tree (to be used whenever positions have changed) More...;  ; void build (const VecCoord &positions, const type::vector< unsigned int > &ROI);  update tree based on positions subset (to be used whenever points p have changed) More...;  ; void getNClosest (distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) const;  get an ordered set of n distance/index pairs between positions and x More...;  ; unsigned int getClosest (const Coord &x, const VecCoord &positions) const;  get the index of the closest point between positions and x More...;  ; bool getNClosestCached (distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) const;  use distance caching to accelerate closest point computation when positions ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:1143,Deployability,update,update,1143,"sics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::kdTree< Coord > Class Template Reference . #include <kdTree.h>; Detailed Description; template<class Coord>; class sofa::helper::kdTree< Coord >; This class implements classical kd tree for nearest neighbors search; the tree is rebuild from points by calling build(p); N nearest points from point x (in terms of euclidean distance) are retrieved with getNClosest(distance/index_List , x , N); Caching may be used to speed up retrieval: if dx< (d(n)-d(0))/2, then the closest point is in the n-1 cached points (updateCachedDistances is used to update the n-1 distances) see for instance: [zhang92] report and [simon96] thesis for more details. AuthorBenjamin Gilles . Classes; struct  TREENODE;  . Protected Attributes; type::vector< TREENODE > tree;  ; unsigned int firstNode;  . Public Member Functions; bool isEmpty () const;  ; void build (const VecCoord &positions);  update tree (to be used whenever positions have changed) More...;  ; void build (const VecCoord &positions, const type::vector< unsigned int > &ROI);  update tree based on positions subset (to be used whenever points p have changed) More...;  ; void getNClosest (distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) const;  get an ordered set of n distance/index pairs between positions and x More...;  ; unsigned int getClosest (const Coord &x, const VecCoord &positions) const;  get the index of the closest point between positions and x More...;  ; bool getNClosestCached (distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) const;  use distance caching to accelerate closest point computation when positions are fixed (see simon96 thesis) More...;  . Protected Member Functions; void print (const unsigned int index);  ; unsigned int b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:1294,Deployability,update,update,1294,"emplate Reference . #include <kdTree.h>; Detailed Description; template<class Coord>; class sofa::helper::kdTree< Coord >; This class implements classical kd tree for nearest neighbors search; the tree is rebuild from points by calling build(p); N nearest points from point x (in terms of euclidean distance) are retrieved with getNClosest(distance/index_List , x , N); Caching may be used to speed up retrieval: if dx< (d(n)-d(0))/2, then the closest point is in the n-1 cached points (updateCachedDistances is used to update the n-1 distances) see for instance: [zhang92] report and [simon96] thesis for more details. AuthorBenjamin Gilles . Classes; struct  TREENODE;  . Protected Attributes; type::vector< TREENODE > tree;  ; unsigned int firstNode;  . Public Member Functions; bool isEmpty () const;  ; void build (const VecCoord &positions);  update tree (to be used whenever positions have changed) More...;  ; void build (const VecCoord &positions, const type::vector< unsigned int > &ROI);  update tree based on positions subset (to be used whenever points p have changed) More...;  ; void getNClosest (distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) const;  get an ordered set of n distance/index pairs between positions and x More...;  ; unsigned int getClosest (const Coord &x, const VecCoord &positions) const;  get the index of the closest point between positions and x More...;  ; bool getNClosestCached (distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) const;  use distance caching to accelerate closest point computation when positions are fixed (see simon96 thesis) More...;  . Protected Member Functions; void print (const unsigned int index);  ; unsigned int build (UIlist &list, unsigned char direction, const VecCoord &positions);  ; void closest (distanceSet &cl, const Coord &x, const unsigned int &currentnode, const VecC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:2992,Deployability,update,update,2992,"n96 thesis) More...;  . Protected Member Functions; void print (const unsigned int index);  ; unsigned int build (UIlist &list, unsigned char direction, const VecCoord &positions);  ; void closest (distanceSet &cl, const Coord &x, const unsigned int &currentnode, const VecCoord &positions, unsigned N) const;  ; void closest (distanceToPoint &cl, const Coord &x, const unsigned int &currentnode, const VecCoord &positions) const;  . Friends; To be Data-zable; std::ostream & operator<< (std::ostream &os, const kdTree< Coord > &);  ; std::istream & operator>> (std::istream &is, kdTree< Coord > &);  . Attribute details. ◆ firstNode. template<class Coord > . unsigned int sofa::helper::kdTree< Coord >::firstNode. protected . ◆ tree. template<class Coord > . type::vector< TREENODE > sofa::helper::kdTree< Coord >::tree. protected . Function details. ◆ build() [1/3]. template<class Coord > . void sofa::helper::kdTree< Coord >::build ; (; const VecCoord & ; positions). update tree (to be used whenever positions have changed) . ◆ build() [2/3]. template<class Coord > . void sofa::helper::kdTree< Coord >::build ; (; const VecCoord & ; positions, . const type::vector< unsigned int > & ; ROI . ). update tree based on positions subset (to be used whenever points p have changed) . ◆ build() [3/3]. template<class Coord > . unsigned int sofa::helper::kdTree< Coord >::build ; (; UIlist & ; list, . unsigned char ; direction, . const VecCoord & ; positions . ). protected . ◆ closest() [1/2]. template<class Coord > . void sofa::helper::kdTree< Coord >::closest ; (; distanceSet & ; cl, . const Coord & ; x, . const unsigned int & ; currentnode, . const VecCoord & ; positions, . unsigned ; N . ); const. protected . ◆ closest() [2/2]. template<class Coord > . void sofa::helper::kdTree< Coord >::closest ; (; distanceToPoint & ; cl, . const Coord & ; x, . const unsigned int & ; currentnode, . const VecCoord & ; positions . ); const. protected . ◆ getClosest(). template<class Coord > . unsigned in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:3220,Deployability,update,update,3220,"gned int &currentnode, const VecCoord &positions, unsigned N) const;  ; void closest (distanceToPoint &cl, const Coord &x, const unsigned int &currentnode, const VecCoord &positions) const;  . Friends; To be Data-zable; std::ostream & operator<< (std::ostream &os, const kdTree< Coord > &);  ; std::istream & operator>> (std::istream &is, kdTree< Coord > &);  . Attribute details. ◆ firstNode. template<class Coord > . unsigned int sofa::helper::kdTree< Coord >::firstNode. protected . ◆ tree. template<class Coord > . type::vector< TREENODE > sofa::helper::kdTree< Coord >::tree. protected . Function details. ◆ build() [1/3]. template<class Coord > . void sofa::helper::kdTree< Coord >::build ; (; const VecCoord & ; positions). update tree (to be used whenever positions have changed) . ◆ build() [2/3]. template<class Coord > . void sofa::helper::kdTree< Coord >::build ; (; const VecCoord & ; positions, . const type::vector< unsigned int > & ; ROI . ). update tree based on positions subset (to be used whenever points p have changed) . ◆ build() [3/3]. template<class Coord > . unsigned int sofa::helper::kdTree< Coord >::build ; (; UIlist & ; list, . unsigned char ; direction, . const VecCoord & ; positions . ). protected . ◆ closest() [1/2]. template<class Coord > . void sofa::helper::kdTree< Coord >::closest ; (; distanceSet & ; cl, . const Coord & ; x, . const unsigned int & ; currentnode, . const VecCoord & ; positions, . unsigned ; N . ); const. protected . ◆ closest() [2/2]. template<class Coord > . void sofa::helper::kdTree< Coord >::closest ; (; distanceToPoint & ; cl, . const Coord & ; x, . const unsigned int & ; currentnode, . const VecCoord & ; positions . ); const. protected . ◆ getClosest(). template<class Coord > . unsigned int sofa::helper::kdTree< Coord >::getClosest ; (; const Coord & ; x, . const VecCoord & ; positions . ); const. get the index of the closest point between positions and x . ◆ getNClosest(). template<class Coord > . void sofa::helper::kdTree<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html:766,Performance,cache,cached,766,"﻿. SOFA API: sofa::helper::kdTree< Coord > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::kdTree< Coord > Class Template Reference . #include <kdTree.h>; Detailed Description; template<class Coord>; class sofa::helper::kdTree< Coord >; This class implements classical kd tree for nearest neighbors search; the tree is rebuild from points by calling build(p); N nearest points from point x (in terms of euclidean distance) are retrieved with getNClosest(distance/index_List , x , N); Caching may be used to speed up retrieval: if dx< (d(n)-d(0))/2, then the closest point is in the n-1 cached points (updateCachedDistances is used to update the n-1 distances) see for instance: [zhang92] report and [simon96] thesis for more details. AuthorBenjamin Gilles . Classes; struct  TREENODE;  . Protected Attributes; type::vector< TREENODE > tree;  ; unsigned int firstNode;  . Public Member Functions; bool isEmpty () const;  ; void build (const VecCoord &positions);  update tree (to be used whenever positions have changed) More...;  ; void build (const VecCoord &positions, const type::vector< unsigned int > &ROI);  update tree based on positions subset (to be used whenever points p have changed) More...;  ; void getNClosest (distanceSet &cl, const Coord &x, const VecCoord &positions, const unsigned int n) const;  get an ordered set of n distance/index pairs between positions and x More...;  ; unsigned int getClosest (const Coord &x, const VecCoord &positions) const;  get the index of the closest point between positions and x More...;  ; bool getNClosestCached (distanceSet &cl, distanceToPoint &cacheThresh_max, distanceToPoint &cacheThresh_min, Coord &previous_x, const Coord &x, const VecCoord &positions, const unsigned int n) const;  use distance caching to accelerate closest point computation when positions ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1kd_tree.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::ComponentChange Member List . This is the complete list of members for sofa::helper::lifecycle::ComponentChange, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html:304,Modifiability,Inherit,Inheritance,304,﻿. SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::lifecycle::ComponentChange Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::ComponentChange:. [legend]. Public Attributes; std::string m_message;  ; std::string m_changeVersion;  . Public Member Functions;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Attribute details. ◆ m_changeVersion. std::string sofa::helper::lifecycle::ComponentChange::m_changeVersion. ◆ m_message. std::string sofa::helper::lifecycle::ComponentChange::m_message. Constructor details. ◆ ComponentChange() [1/2]. sofa::helper::lifecycle::ComponentChange::ComponentChange ; (; ). default . ◆ ComponentChange() [2/2]. sofa::helper::lifecycle::ComponentChange::ComponentChange ; (; const std::string & ; sinceVersion). inlineexplicit . ◆ ~ComponentChange(). virtual sofa::helper::lifecycle::ComponentChange::~ComponentChange ; (; ). virtualdefault . Function details. ◆ getMessage(). const std::string& sofa::helper::lifecycle::ComponentChange::getMessage ; (; ); const. inline . ◆ getVersion(). const std::string& sofa::helper::lifecycle::ComponentChange::getVersion ; (; ); const. inline . sofahelperlifecycleComponentChange; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Dealiased Member List . This is the complete list of members for sofa::helper::lifecycle::Dealiased, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; Dealiased(const std::string &sinceVersion, const std::string &originalName)sofa::helper::lifecycle::Dealiasedinline; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getOriginalName() constsofa::helper::lifecycle::Dealiasedinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html:271,Modifiability,Inherit,Inheritance,271,"﻿. SOFA API: sofa::helper::lifecycle::Dealiased Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Dealiased Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Dealiased:. [legend]. Public Member Functions;  Dealiased (const std::string &sinceVersion, const std::string &originalName);  ; const std::string & getOriginalName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Dealiased(). sofa::helper::lifecycle::Dealiased::Dealiased ; (; const std::string & ; sinceVersion, . const std::string & ; originalName . ). inline . Function details. ◆ getOriginalName(). const std::string& sofa::helper::lifecycle::Dealiased::getOriginalName ; (; ); const. inline . sofahelperlifecycleDealiased; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html:523,Modifiability,inherit,inherited,523,"﻿. SOFA API: sofa::helper::lifecycle::Dealiased Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Dealiased Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Dealiased:. [legend]. Public Member Functions;  Dealiased (const std::string &sinceVersion, const std::string &originalName);  ; const std::string & getOriginalName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Dealiased(). sofa::helper::lifecycle::Dealiased::Dealiased ; (; const std::string & ; sinceVersion, . const std::string & ; originalName . ). inline . Function details. ◆ getOriginalName(). const std::string& sofa::helper::lifecycle::Dealiased::getOriginalName ; (; ); const. inline . sofahelperlifecycleDealiased; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html:806,Modifiability,Inherit,Inherited,806,"﻿. SOFA API: sofa::helper::lifecycle::Dealiased Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Dealiased Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Dealiased:. [legend]. Public Member Functions;  Dealiased (const std::string &sinceVersion, const std::string &originalName);  ; const std::string & getOriginalName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Dealiased(). sofa::helper::lifecycle::Dealiased::Dealiased ; (; const std::string & ; sinceVersion, . const std::string & ; originalName . ). inline . Function details. ◆ getOriginalName(). const std::string& sofa::helper::lifecycle::Dealiased::getOriginalName ; (; ); const. inline . sofahelperlifecycleDealiased; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html:844,Modifiability,inherit,inherited,844,"﻿. SOFA API: sofa::helper::lifecycle::Dealiased Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Dealiased Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Dealiased:. [legend]. Public Member Functions;  Dealiased (const std::string &sinceVersion, const std::string &originalName);  ; const std::string & getOriginalName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Dealiased(). sofa::helper::lifecycle::Dealiased::Dealiased ; (; const std::string & ; sinceVersion, . const std::string & ; originalName . ). inline . Function details. ◆ getOriginalName(). const std::string& sofa::helper::lifecycle::Dealiased::getOriginalName ; (; ); const. inline . sofahelperlifecycleDealiased; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Deprecated Member List . This is the complete list of members for sofa::helper::lifecycle::Deprecated, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; Deprecated(const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"")sofa::helper::lifecycle::Deprecatedinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html:273,Modifiability,Inherit,Inheritance,273,"﻿. SOFA API: sofa::helper::lifecycle::Deprecated Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Deprecated Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Deprecated:. [legend]. Public Member Functions;  Deprecated (const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"");  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Deprecated(). sofa::helper::lifecycle::Deprecated::Deprecated ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; instruction = ""\b"" . ). inlineexplicit . sofahelperlifecycleDeprecated; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html:515,Modifiability,inherit,inherited,515,"﻿. SOFA API: sofa::helper::lifecycle::Deprecated Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Deprecated Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Deprecated:. [legend]. Public Member Functions;  Deprecated (const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"");  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Deprecated(). sofa::helper::lifecycle::Deprecated::Deprecated ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; instruction = ""\b"" . ). inlineexplicit . sofahelperlifecycleDeprecated; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html:798,Modifiability,Inherit,Inherited,798,"﻿. SOFA API: sofa::helper::lifecycle::Deprecated Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Deprecated Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Deprecated:. [legend]. Public Member Functions;  Deprecated (const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"");  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Deprecated(). sofa::helper::lifecycle::Deprecated::Deprecated ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; instruction = ""\b"" . ). inlineexplicit . sofahelperlifecycleDeprecated; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html:836,Modifiability,inherit,inherited,836,"﻿. SOFA API: sofa::helper::lifecycle::Deprecated Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Deprecated Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Deprecated:. [legend]. Public Member Functions;  Deprecated (const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"");  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Deprecated(). sofa::helper::lifecycle::Deprecated::Deprecated ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; instruction = ""\b"" . ). inlineexplicit . sofahelperlifecycleDeprecated; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved-members.html:232,Modifiability,inherit,inherited,232,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Moved Member List . This is the complete list of members for sofa::helper::lifecycle::Moved, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Moved(const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin)sofa::helper::lifecycle::Movedinline; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html:263,Modifiability,Inherit,Inheritance,263,"﻿. SOFA API: sofa::helper::lifecycle::Moved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Moved Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Moved:. [legend]. Public Member Functions;  Moved (const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Moved(). sofa::helper::lifecycle::Moved::Moved ; (; const std::string & ; sinceVersion, . const std::string & ; fromPlugin, . const std::string & ; toPlugin . ). inline . sofahelperlifecycleMoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html:485,Modifiability,inherit,inherited,485,"﻿. SOFA API: sofa::helper::lifecycle::Moved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Moved Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Moved:. [legend]. Public Member Functions;  Moved (const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Moved(). sofa::helper::lifecycle::Moved::Moved ; (; const std::string & ; sinceVersion, . const std::string & ; fromPlugin, . const std::string & ; toPlugin . ). inline . sofahelperlifecycleMoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html:768,Modifiability,Inherit,Inherited,768,"﻿. SOFA API: sofa::helper::lifecycle::Moved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Moved Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Moved:. [legend]. Public Member Functions;  Moved (const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Moved(). sofa::helper::lifecycle::Moved::Moved ; (; const std::string & ; sinceVersion, . const std::string & ; fromPlugin, . const std::string & ; toPlugin . ). inline . sofahelperlifecycleMoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html:806,Modifiability,inherit,inherited,806,"﻿. SOFA API: sofa::helper::lifecycle::Moved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Moved Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Moved:. [legend]. Public Member Functions;  Moved (const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Moved(). sofa::helper::lifecycle::Moved::Moved ; (; const std::string & ; sinceVersion, . const std::string & ; fromPlugin, . const std::string & ; toPlugin . ). inline . sofahelperlifecycleMoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:125,Modifiability,Plugin,Pluginized,125,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:216,Modifiability,Plugin,Pluginized,216,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:672,Modifiability,Plugin,Pluginized,672,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:735,Modifiability,plugin,plugin,735,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html:767,Modifiability,Plugin,Pluginizedinlineexplicit,767,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Pluginized Member List . This is the complete list of members for sofa::helper::lifecycle::Pluginized, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Pluginized(const std::string &sinceVersion, const std::string &plugin)sofa::helper::lifecycle::Pluginizedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:38,Modifiability,Plugin,Pluginized,38,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:214,Modifiability,Plugin,Pluginized,214,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:273,Modifiability,Inherit,Inheritance,273,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:322,Modifiability,Plugin,Pluginized,322,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:371,Modifiability,Plugin,Pluginized,371,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:435,Modifiability,plugin,plugin,435,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:472,Modifiability,inherit,inherited,472,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:755,Modifiability,Inherit,Inherited,755,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:793,Modifiability,inherit,inherited,793,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:931,Modifiability,Plugin,Pluginized,931,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:970,Modifiability,Plugin,Pluginized,970,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:982,Modifiability,Plugin,Pluginized,982,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:1058,Modifiability,plugin,plugin,1058,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Removed Member List . This is the complete list of members for sofa::helper::lifecycle::Removed, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Removed(const std::string &sinceVersion, const std::string &atVersion)sofa::helper::lifecycle::Removedinlineexplicit; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html:267,Modifiability,Inherit,Inheritance,267,"﻿. SOFA API: sofa::helper::lifecycle::Removed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Removed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Removed:. [legend]. Public Member Functions;  Removed (const std::string &sinceVersion, const std::string &atVersion);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Removed(). sofa::helper::lifecycle::Removed::Removed ; (; const std::string & ; sinceVersion, . const std::string & ; atVersion . ). inlineexplicit . sofahelperlifecycleRemoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html:463,Modifiability,inherit,inherited,463,"﻿. SOFA API: sofa::helper::lifecycle::Removed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Removed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Removed:. [legend]. Public Member Functions;  Removed (const std::string &sinceVersion, const std::string &atVersion);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Removed(). sofa::helper::lifecycle::Removed::Removed ; (; const std::string & ; sinceVersion, . const std::string & ; atVersion . ). inlineexplicit . sofahelperlifecycleRemoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html:746,Modifiability,Inherit,Inherited,746,"﻿. SOFA API: sofa::helper::lifecycle::Removed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Removed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Removed:. [legend]. Public Member Functions;  Removed (const std::string &sinceVersion, const std::string &atVersion);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Removed(). sofa::helper::lifecycle::Removed::Removed ; (; const std::string & ; sinceVersion, . const std::string & ; atVersion . ). inlineexplicit . sofahelperlifecycleRemoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html:784,Modifiability,inherit,inherited,784,"﻿. SOFA API: sofa::helper::lifecycle::Removed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Removed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Removed:. [legend]. Public Member Functions;  Removed (const std::string &sinceVersion, const std::string &atVersion);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Removed(). sofa::helper::lifecycle::Removed::Removed ; (; const std::string & ; sinceVersion, . const std::string & ; atVersion . ). inlineexplicit . sofahelperlifecycleRemoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::lifecycle::Renamed Member List . This is the complete list of members for sofa::helper::lifecycle::Renamed, including all inherited members. ComponentChange()=defaultsofa::helper::lifecycle::ComponentChange; ComponentChange(const std::string &sinceVersion)sofa::helper::lifecycle::ComponentChangeinlineexplicit; getMessage() constsofa::helper::lifecycle::ComponentChangeinline; getNewName() constsofa::helper::lifecycle::Renamedinline; getVersion() constsofa::helper::lifecycle::ComponentChangeinline; m_changeVersionsofa::helper::lifecycle::ComponentChange; m_messagesofa::helper::lifecycle::ComponentChange; Renamed(const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName)sofa::helper::lifecycle::Renamedinline; ~ComponentChange()=defaultsofa::helper::lifecycle::ComponentChangevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html:267,Modifiability,Inherit,Inheritance,267,"﻿. SOFA API: sofa::helper::lifecycle::Renamed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Renamed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Renamed:. [legend]. Public Member Functions;  Renamed (const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName);  ; const std::string & getNewName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Renamed(). sofa::helper::lifecycle::Renamed::Renamed ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; newName . ). inline . Function details. ◆ getNewName(). const std::string& sofa::helper::lifecycle::Renamed::getNewName ; (; ); const. inline . sofahelperlifecycleRenamed; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html:538,Modifiability,inherit,inherited,538,"﻿. SOFA API: sofa::helper::lifecycle::Renamed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Renamed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Renamed:. [legend]. Public Member Functions;  Renamed (const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName);  ; const std::string & getNewName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Renamed(). sofa::helper::lifecycle::Renamed::Renamed ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; newName . ). inline . Function details. ◆ getNewName(). const std::string& sofa::helper::lifecycle::Renamed::getNewName ; (; ); const. inline . sofahelperlifecycleRenamed; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html:821,Modifiability,Inherit,Inherited,821,"﻿. SOFA API: sofa::helper::lifecycle::Renamed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Renamed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Renamed:. [legend]. Public Member Functions;  Renamed (const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName);  ; const std::string & getNewName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Renamed(). sofa::helper::lifecycle::Renamed::Renamed ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; newName . ). inline . Function details. ◆ getNewName(). const std::string& sofa::helper::lifecycle::Renamed::getNewName ; (; ); const. inline . sofahelperlifecycleRenamed; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html:859,Modifiability,inherit,inherited,859,"﻿. SOFA API: sofa::helper::lifecycle::Renamed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Renamed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Renamed:. [legend]. Public Member Functions;  Renamed (const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName);  ; const std::string & getNewName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Renamed(). sofa::helper::lifecycle::Renamed::Renamed ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; newName . ). inline . Function details. ◆ getNewName(). const std::string& sofa::helper::lifecycle::Renamed::getNewName ; (; ); const. inline . sofahelperlifecycleRenamed; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:449,Integrability,Message,Message,449,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:554,Integrability,Message,Message,554,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:842,Integrability,Message,MessageHandler,842,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:881,Integrability,Message,MessageHandlerinlinevirtual,881,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:239,Testability,log,logging,239,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:367,Testability,log,logging,367,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:489,Testability,log,logging,489,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:588,Testability,log,logging,588,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:673,Testability,log,logging,673,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:778,Testability,log,logging,778,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:872,Testability,log,logging,872,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:391,Integrability,message,messages,391,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:591,Integrability,message,messages,591,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:628,Integrability,Message,MessageHandler,628,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:669,Integrability,Message,MessageDispatcher,669,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:731,Integrability,message,messages,731,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:760,Integrability,Message,MessageDispatcher,760,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:802,Integrability,Message,Message,802,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:867,Integrability,Message,Message,867,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1178,Integrability,Message,Message,1178,-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehan,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1223,Integrability,Message,Message,1223,-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehan,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1261,Integrability,Message,MessageHandler,1261,-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehan,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1352,Integrability,Message,MessageHandler,1352,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1377,Integrability,Message,MessageHandler,1377,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1846,Integrability,Message,Message,1846,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1980,Integrability,Message,Message,1980,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:2029,Integrability,Message,MessageHandler,2029,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:2081,Integrability,Message,MessageHandler,2081,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:420,Modifiability,Inherit,Inheritance,420,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1246,Modifiability,Inherit,Inherited,1246,-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehan,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1314,Modifiability,inherit,inherited,1314,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:2014,Modifiability,Inherit,Inherited,2014,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:237,Testability,log,logging,237,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:458,Testability,log,logging,458,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1343,Testability,log,logging,1343,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1462,Testability,log,logging,1462,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1593,Testability,log,logging,1593,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1759,Testability,log,logging,1759,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:1910,Testability,log,logging,1910,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:2072,Testability,log,logging,2072,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:2127,Testability,log,logging,2127,essageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::reset ; (; void ; ). sofahelperloggingcountingmessagehandlerCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:456,Integrability,Message,Message,456,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:318,Modifiability,inherit,inherited,318,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:243,Testability,log,logging,243,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:364,Testability,log,logging,364,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:490,Testability,log,logging,490,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:578,Testability,log,logging,578,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:856,Integrability,Message,Message,856,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:1201,Integrability,Message,Message,1201,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:248,Testability,log,logging,248,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:930,Testability,log,logging,930,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:978,Testability,log,logging,978,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:1110,Testability,log,logging,1110,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:1265,Testability,log,logging,1265,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:673,Integrability,Message,Message,673,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:954,Integrability,Message,MessageHandler,954,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:993,Integrability,Message,MessageHandlerinlinevirtual,993,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:123,Testability,log,loggingmessagehandler,123,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:146,Testability,Log,LoggingMessageHandler,146,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:237,Testability,log,logging,237,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:246,Testability,log,loggingmessagehandler,246,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:269,Testability,Log,LoggingMessageHandler,269,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:349,Testability,log,logging,349,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:358,Testability,log,loggingmessagehandler,358,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:381,Testability,Log,LoggingMessageHandler,381,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:430,Testability,log,logging,430,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:439,Testability,log,loggingmessagehandler,439,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:462,Testability,Log,LoggingMessageHandler,462,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:518,Testability,log,logging,518,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:527,Testability,log,loggingmessagehandler,527,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:550,Testability,Log,LoggingMessageHandler,550,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:573,Testability,Log,LoggingMessageHandler,573,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:610,Testability,log,logging,610,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:619,Testability,log,loggingmessagehandler,619,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:642,Testability,Log,LoggingMessageHandler,642,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:707,Testability,log,logging,707,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:716,Testability,log,loggingmessagehandler,716,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:739,Testability,Log,LoggingMessageHandlervirtual,739,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:790,Testability,log,logging,790,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:799,Testability,log,loggingmessagehandler,799,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:822,Testability,Log,LoggingMessageHandler,822,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:846,Testability,Log,LoggingMessageHandler,846,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:892,Testability,log,logging,892,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:901,Testability,log,loggingmessagehandler,901,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:924,Testability,Log,LoggingMessageHandlerinline,924,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:984,Testability,log,logging,984,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:395,Integrability,message,messages,395,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:605,Integrability,message,messages,605,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:645,Integrability,Message,MessageHandler,645,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:686,Integrability,Message,MessageDispatcher,686,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:746,Integrability,message,messages,746,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:775,Integrability,Message,MessageDispatcher,775,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:874,Integrability,message,messages,874,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:995,Integrability,Message,Message,995,gmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1439,Integrability,Message,Message,1439, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1490,Integrability,Message,Message,1490, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1528,Integrability,Message,MessageHandler,1528, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1619,Integrability,Message,MessageHandler,1619,sages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1644,Integrability,Message,MessageHandler,1644,sages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2225,Integrability,Message,Message,2225,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2433,Integrability,Message,Message,2433,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2482,Integrability,Message,MessageHandler,2482,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2534,Integrability,Message,MessageHandler,2534,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:427,Modifiability,Inherit,Inheritance,427,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1513,Modifiability,Inherit,Inherited,1513, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1581,Modifiability,inherit,inherited,1581,sages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2467,Modifiability,Inherit,Inherited,2467,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:36,Testability,log,loggingmessagehandler,36,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:59,Testability,Log,LoggingMessageHandler,59,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:235,Testability,log,logging,235,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:244,Testability,log,loggingmessagehandler,244,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:267,Testability,Log,LoggingMessageHandler,267,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:317,Testability,Log,LoggingMessageHandler,317,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:347,Testability,Log,LoggingMessageHandler,347,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:465,Testability,log,logging,465,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:474,Testability,log,loggingmessagehandler,474,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:497,Testability,Log,LoggingMessageHandler,497,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:557,Testability,Log,LoggingMessageHandler,557,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1003,Testability,log,logging,1003,gmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1290,Testability,Log,LoggingMessageHandler,1290, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1321,Testability,Log,LoggingMessageHandler,1321, in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::Loggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1610,Testability,log,logging,1610,sages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1689,Testability,Log,LoggingMessageHandler,1689,cher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggin,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1728,Testability,log,logging,1728, through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1737,Testability,log,loggingmessagehandler,1737, through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1760,Testability,Log,LoggingMessageHandler,1760, through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1783,Testability,Log,LoggingMessageHandler,1783, through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1816,Testability,Log,LoggingMessageHandler,1816,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1855,Testability,log,logging,1855,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1864,Testability,log,loggingmessagehandler,1864,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1887,Testability,Log,LoggingMessageHandler,1887,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1911,Testability,Log,LoggingMessageHandler,1911,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2011,Testability,log,logging,2011,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2020,Testability,log,loggingmessagehandler,2020,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2043,Testability,Log,LoggingMessageHandler,2043,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2120,Testability,log,logging,2120,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2129,Testability,log,loggingmessagehandler,2129,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2152,Testability,Log,LoggingMessageHandler,2152,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2251,Testability,log,logging,2251,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2260,Testability,log,loggingmessagehandler,2260,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2283,Testability,Log,LoggingMessageHandler,2283,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2365,Testability,log,logging,2365,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2374,Testability,log,loggingmessagehandler,2374,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2397,Testability,Log,LoggingMessageHandler,2397,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2525,Testability,log,logging,2525,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2580,Testability,log,logging,2580,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2589,Testability,log,loggingmessagehandler,2589,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:2612,Testability,Log,LoggingMessageHandler,2612,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:897,Usability,clear,clear,897,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:123,Testability,log,loggingmessagehandler,123,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:146,Testability,Log,LogMessage,146,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:226,Testability,log,logging,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:235,Testability,log,loggingmessagehandler,235,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:258,Testability,Log,LogMessage,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:324,Testability,log,logging,324,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:333,Testability,log,loggingmessagehandler,333,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:356,Testability,Log,LogMessageinline,356,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:393,Testability,log,logging,393,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:402,Testability,log,loggingmessagehandler,402,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:425,Testability,Log,LogMessageinline,425,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:443,Testability,Log,LogMessage,443,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:469,Testability,log,logging,469,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:478,Testability,log,loggingmessagehandler,478,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:501,Testability,Log,LogMessageinline,501,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:539,Testability,log,logging,539,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:548,Testability,log,loggingmessagehandler,548,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:571,Testability,Log,LogMessageinline,571,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:590,Testability,Log,LogMessage,590,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:616,Testability,log,logging,616,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:625,Testability,log,loggingmessagehandler,625,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:648,Testability,Log,LogMessageinline,648,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:398,Integrability,Message,Message,398,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:450,Integrability,Message,Message,450,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:774,Integrability,Message,Message,774,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:901,Integrability,Message,Message,901,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:36,Testability,log,loggingmessagehandler,36,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:59,Testability,Log,LogMessage,59,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:224,Testability,log,logging,224,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:233,Testability,log,loggingmessagehandler,233,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:256,Testability,Log,LogMessage,256,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:295,Testability,Log,LoggingMessageHandler,295,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:347,Testability,Log,LogMessage,347,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:367,Testability,Log,LogMessage,367,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:529,Testability,Log,LogMessage,529,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:557,Testability,log,logging,557,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:566,Testability,log,loggingmessagehandler,566,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:589,Testability,Log,LogMessage,589,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:601,Testability,Log,LogMessage,601,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:632,Testability,Log,LogMessage,632,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:660,Testability,log,logging,660,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:669,Testability,log,loggingmessagehandler,669,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:692,Testability,Log,LogMessage,692,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:705,Testability,Log,LogMessage,705,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:813,Testability,log,logging,813,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:822,Testability,log,loggingmessagehandler,822,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:845,Testability,Log,LogMessage,845,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:940,Testability,log,logging,940,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:949,Testability,log,loggingmessagehandler,949,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:972,Testability,Log,LogMessage,972,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:1036,Testability,log,logging,1036,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:1045,Testability,log,loggingmessagehandler,1045,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:1068,Testability,Log,LogMessage,1068,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:314,Modifiability,inherit,inherited,314,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:123,Testability,log,loggingmessagehandler,123,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:241,Testability,log,logging,241,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:250,Testability,log,loggingmessagehandler,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:357,Testability,log,logging,357,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:366,Testability,log,loggingmessagehandler,366,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:448,Testability,log,logging,448,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:457,Testability,log,loggingmessagehandler,457,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:540,Testability,log,logging,540,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:549,Testability,log,loggingmessagehandler,549,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:632,Testability,log,logging,632,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:641,Testability,log,loggingmessagehandler,641,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:868,Integrability,Message,Message,868,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1335,Integrability,Message,Message,1335,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:36,Testability,log,loggingmessagehandler,36,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:246,Testability,log,logging,246,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:255,Testability,log,loggingmessagehandler,255,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:332,Testability,Log,LoggingMessageHandler,332,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:742,Testability,Log,LoggingMessageHandler,742,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:952,Testability,log,logging,952,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:961,Testability,log,loggingmessagehandler,961,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1074,Testability,log,logging,1074,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1083,Testability,log,loggingmessagehandler,1083,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1178,Testability,Log,LoggingMessageHandler,1178,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1216,Testability,log,logging,1216,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1225,Testability,log,loggingmessagehandler,1225,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1361,Testability,log,logging,1361,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:1370,Testability,log,loggingmessagehandler,1370,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html:362,Modifiability,inherit,inherited,362,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html:265,Testability,log,logging,265,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html:408,Testability,log,logging,408,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; More...; Detailed Description; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; See alsoPerComponentLoggingMessageHandler . Static Public Member Functions; static PerComponentLoggingMessageHandler & getInstance ();  . Function details. ◆ getInstance(). PerComponentLoggingMessageHandler & sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler::getInstance ; (; ). static . sofahelperloggingpercomponentloggingmessagehandlerMainPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html:270,Testability,log,logging,270,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; More...; Detailed Description; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; See alsoPerComponentLoggingMessageHandler . Static Public Member Functions; static PerComponentLoggingMessageHandler & getInstance ();  . Function details. ◆ getInstance(). PerComponentLoggingMessageHandler & sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler::getInstance ; (; ). static . sofahelperloggingpercomponentloggingmessagehandlerMainPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html:1022,Testability,log,logging,1022,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; More...; Detailed Description; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; See alsoPerComponentLoggingMessageHandler . Static Public Member Functions; static PerComponentLoggingMessageHandler & getInstance ();  . Function details. ◆ getInstance(). PerComponentLoggingMessageHandler & sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler::getInstance ; (; ). static . sofahelperloggingpercomponentloggingmessagehandlerMainPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:509,Integrability,Message,Message,509,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:630,Integrability,Message,MessageHandler,630,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:669,Integrability,Message,MessageHandlerinlinevirtual,669,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:354,Modifiability,inherit,inherited,354,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:261,Testability,log,logging,261,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:422,Testability,log,logging,422,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:543,Testability,log,logging,543,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:660,Testability,log,logging,660,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:757,Testability,log,logging,757,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:407,Integrability,Rout,RoutingMessageHandler,407,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:455,Integrability,message,messages,455,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:641,Integrability,Rout,RoutingMessageHandler,641,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:689,Integrability,message,messages,689,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:729,Integrability,Message,MessageHandler,729,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:770,Integrability,Message,MessageDispatcher,770,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:830,Integrability,message,messages,830,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:859,Integrability,Message,MessageDispatcher,859,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1135,Integrability,Message,Message,1135,ageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API b,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1173,Integrability,Message,MessageHandler,1173,ageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API b,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1264,Integrability,Message,MessageHandler,1264,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1289,Integrability,Message,MessageHandler,1289,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1841,Integrability,Message,Message,1841,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1890,Integrability,Message,MessageHandler,1890,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1942,Integrability,Message,MessageHandler,1942,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:487,Modifiability,Inherit,Inheritance,487,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1158,Modifiability,Inherit,Inherited,1158,ageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API b,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1226,Modifiability,inherit,inherited,1226,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1875,Modifiability,Inherit,Inherited,1875,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:259,Testability,log,logging,259,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:525,Testability,log,logging,525,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1255,Testability,log,logging,1255,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1385,Testability,log,logging,1385,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1560,Testability,log,logging,1560,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1749,Testability,log,logging,1749,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1933,Testability,log,logging,1933,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:123,Integrability,rout,routingmessagehandler,123,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:250,Integrability,rout,routingmessagehandler,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:369,Integrability,rout,routingmessagehandler,369,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:466,Integrability,rout,routingmessagehandler,466,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:549,Integrability,Message,MessageHandler,549,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:596,Integrability,rout,routingmessagehandler,596,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:314,Modifiability,inherit,inherited,314,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:241,Testability,log,logging,241,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:360,Testability,log,logging,360,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:457,Testability,log,logging,457,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:587,Testability,log,logging,587,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:36,Integrability,rout,routingmessagehandler,36,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:255,Integrability,rout,routingmessagehandler,255,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:332,Integrability,Rout,RoutingMessageHandler,332,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:418,Integrability,Rout,RoutingMessageHandler,418,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:468,Integrability,Rout,RoutingMessageHandler,468,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:588,Integrability,Rout,RoutingMessageHandler,588,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:638,Integrability,Rout,RoutingMessageHandler,638,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:738,Integrability,Rout,RoutingMessageHandler,738,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:821,Integrability,Message,MessageHandler,821,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:856,Integrability,message,message,856,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:891,Integrability,rout,routed,891,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:998,Integrability,Rout,RoutingMessageHandler,998,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1045,Integrability,rout,routingmessagehandler,1045,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1174,Integrability,rout,routingmessagehandler,1174,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1302,Integrability,rout,routingmessagehandler,1302,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1395,Integrability,Message,MessageHandler,1395,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1444,Integrability,message,message,1444,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1479,Integrability,rout,routed,1479,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:246,Testability,log,logging,246,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1036,Testability,log,logging,1036,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1165,Testability,log,logging,1165,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:1293,Testability,log,logging,1293,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:123,Integrability,rout,routingmessagehandler,123,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:146,Integrability,Rout,RoutingMessageHandler,146,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:246,Integrability,rout,routingmessagehandler,246,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:269,Integrability,Rout,RoutingMessageHandler,269,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:333,Integrability,Message,Message,333,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:376,Integrability,rout,routingmessagehandler,376,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:399,Integrability,Rout,RoutingMessageHandlervirtual,399,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:470,Integrability,rout,routingmessagehandler,470,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:493,Integrability,Rout,RoutingMessageHandler,493,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:516,Integrability,Rout,RoutingMessageHandler,516,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:562,Integrability,rout,routingmessagehandler,562,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:585,Integrability,Rout,RoutingMessageHandler,585,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:635,Integrability,Message,MessageHandler,635,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:682,Integrability,rout,routingmessagehandler,682,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:705,Integrability,Rout,RoutingMessageHandler,705,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:729,Integrability,Message,MessageHandler,729,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:768,Integrability,Message,MessageHandlerinlinevirtual,768,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:798,Integrability,Rout,RoutingMessageHandler,798,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:853,Integrability,rout,routingmessagehandler,853,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:876,Integrability,Rout,RoutingMessageHandlerinline,876,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:237,Testability,log,logging,237,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:367,Testability,log,logging,367,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:461,Testability,log,logging,461,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:553,Testability,log,logging,553,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:673,Testability,log,logging,673,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:759,Testability,log,logging,759,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:844,Testability,log,logging,844,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:36,Integrability,rout,routingmessagehandler,36,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:59,Integrability,Rout,RoutingMessageHandler,59,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:244,Integrability,rout,routingmessagehandler,244,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:267,Integrability,Rout,RoutingMessageHandler,267,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:317,Integrability,Rout,RoutingMessageHandler,317,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:347,Integrability,Rout,RoutingMessageHandler,347,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:395,Integrability,message,messages,395,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:474,Integrability,rout,routingmessagehandler,474,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:497,Integrability,Rout,RoutingMessageHandler,497,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:557,Integrability,Rout,RoutingMessageHandler,557,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:605,Integrability,message,messages,605,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:645,Integrability,Message,MessageHandler,645,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:681,Integrability,rout,routing,681,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:834,Integrability,Rout,RoutingMessageHandler,834,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:865,Integrability,Rout,RoutingMessageHandler,865,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:936,Integrability,Message,MessageHandler,936,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:971,Integrability,message,message,971,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1006,Integrability,rout,routed,1006,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1157,Integrability,Message,Message,1157,"blic Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1195,Integrability,Message,MessageHandler,1195,"blic Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1286,Integrability,Message,MessageHandler,1286,"essageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1311,Integrability,Message,MessageHandler,1311,"essageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1356,Integrability,Rout,RoutingMessageHandler,1356,"er class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1404,Integrability,rout,routingmessagehandler,1404,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1427,Integrability,Rout,RoutingMessageHandler,1427,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1450,Integrability,Rout,RoutingMessageHandler,1450,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1483,Integrability,Rout,RoutingMessageHandler,1483,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1531,Integrability,rout,routingmessagehandler,1531,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1554,Integrability,Rout,RoutingMessageHandler,1554,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1578,Integrability,Rout,RoutingMessageHandler,1578,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1684,Integrability,rout,routingmessagehandler,1684,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1707,Integrability,Rout,RoutingMessageHandler,1707,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1743,Integrability,Message,Message,1743,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1792,Integrability,Message,MessageHandler,1792,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1844,Integrability,Message,MessageHandler,1844,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1910,Integrability,rout,routingmessagehandler,1910,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1933,Integrability,Rout,RoutingMessageHandler,1933,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2089,Integrability,rout,routingmessagehandler,2089,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2112,Integrability,Rout,RoutingMessageHandler,2112,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2173,Integrability,Message,MessageHandler,2173,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2213,Integrability,message,message,2213,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2248,Integrability,rout,routed,2248,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:427,Modifiability,Inherit,Inheritance,427,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1180,Modifiability,Inherit,Inherited,1180,"blic Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1248,Modifiability,inherit,inherited,1248,"essageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1777,Modifiability,Inherit,Inherited,1777,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:235,Testability,log,logging,235,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:465,Testability,log,logging,465,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1277,Testability,log,logging,1277,"essageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1395,Testability,log,logging,1395,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1522,Testability,log,logging,1522,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1675,Testability,log,logging,1675,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1835,Testability,log,logging,1835,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1901,Testability,log,logging,1901,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:2080,Testability,log,logging,2080,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:283,Integrability,Message,Message,283,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:355,Integrability,Message,MessageHandler,355,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:394,Integrability,Message,MessageHandlerinlinevirtual,394,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:212,Testability,log,logging,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:317,Testability,log,logging,317,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html:385,Testability,log,logging,385,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ClangMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ClangMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:409,Integrability,Message,Message,409,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:497,Integrability,Message,MessageHandler,497,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:522,Integrability,Message,MessageHandler,522,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:637,Integrability,Message,Message,637,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:705,Integrability,Message,MessageHandler,705,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:291,Modifiability,Inherit,Inheritance,291,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:459,Modifiability,inherit,inherited,459,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:210,Testability,log,logging,210,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:329,Testability,log,logging,329,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:488,Testability,log,logging,488,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:594,Testability,log,logging,594,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:696,Testability,log,logging,696,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:309,Integrability,Message,Message,309,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:596,Integrability,Message,MessageFormatter,596,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:637,Integrability,Message,MessageFormatterinlineprotected,637,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:748,Integrability,Message,MessageFormatterprotectedvirtual,748,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html:219,Testability,log,logging,219,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ClangStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::ClangStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::ClangStyleMessageFormattervirtual; getInstance()sofa::helper::logging::ClangStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) const overridesofa::helper::logging::ClangStyleMessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter-members.html
