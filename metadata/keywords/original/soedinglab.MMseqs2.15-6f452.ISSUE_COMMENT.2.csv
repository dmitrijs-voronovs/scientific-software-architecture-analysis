id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:280,Performance,cache,cache,280,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:286,Performance,load,load,286,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:253,Testability,benchmark,benchmark,253,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:998,Usability,simpl,simple,998,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849696337:174,Usability,simpl,simple,174,"You should read the SLURM documentation for the difference between `--ntasks` and `--cpus-per-task`. Generally you should only run 1 task per MPI node (or just 1 task in the simple case). And the set `--cpus-per-task` to the number of cores the node has. If you run more than 1 task per machine, MMseqs2 and SLURM will interact badly. The parallelization approach we use is called a Hybrid OpenMP/MPI approach.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849696337
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638:67,Availability,mainten,maintenance,67,"Thanks for your detailed response, right now our cluster is under; maintenance so I'll make sure to try what you say and close this issue if; the problem is solved.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638
https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129:123,Availability,down,down,123,"We have the `filterresult` module since recently, which implements the HHblits alignment filtering algorithm, for slimming down MSAs by pairwise alignments. Here you want the `--diff` parameter to keep only the N most diverse sequences. However you should stick to the non `easy-` modules to use this.; E.g. something like:. ```; mmseqs createdb FILE db; mmseqs cluster db clu tmp ...; mmseqs filterresult db db clu clu_filt --diff 100; mmseqs createseqfiledb db clu_filt fasDB; mmseqs apply fasDB mafftDB -- mafft ...; ```. (This is assuming you are clustering proteins, not quite sure if `filterresult` works for nucleotide sequences).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129
https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198:82,Availability,fault,fault,82,"Thanks for your reply,; I have tried the following commands but got ""Segmentation fault"" right away whenn launching filterresult.; Any idea what could cause this?. mmseqs createdb FASTANUCLFILE FASTANUCLFILE.db; mmseqs cluster FASTANUCLFILE.db FASTANUCLFILE.db.clu /tmp/tmp_mmseqs/ -c 0.5 -s 6; mmseqs filterresult FASTANUCLFILE.db FASTANUCLFILE.db FASTANUCLFILE.db.clu FASTANUCLFILE.db.clu_filt --diff 100; MMseqs Version: fb39ca1ee88313974f285740faa856ea68509193; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Compositional bias 1; Allow deletions false; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 100; Threads 32; Compressed 0; Verbosity 3. Query database size: 19948 type: Nucleotide; Target database size: 19948 type: Nucleotide; Segmentation fault ] 0.00% 1 eta -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198
https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198:905,Availability,fault,fault,905,"Thanks for your reply,; I have tried the following commands but got ""Segmentation fault"" right away whenn launching filterresult.; Any idea what could cause this?. mmseqs createdb FASTANUCLFILE FASTANUCLFILE.db; mmseqs cluster FASTANUCLFILE.db FASTANUCLFILE.db.clu /tmp/tmp_mmseqs/ -c 0.5 -s 6; mmseqs filterresult FASTANUCLFILE.db FASTANUCLFILE.db FASTANUCLFILE.db.clu FASTANUCLFILE.db.clu_filt --diff 100; MMseqs Version: fb39ca1ee88313974f285740faa856ea68509193; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Compositional bias 1; Allow deletions false; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 100; Threads 32; Compressed 0; Verbosity 3. Query database size: 19948 type: Nucleotide; Target database size: 19948 type: Nucleotide; Segmentation fault ] 0.00% 1 eta -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-859674497:159,Testability,log,log,159,"I tried to cluster sequences with the header you mentioned but can not reproduce the issue. ; Is it possible for you to share the file, exact command line and log? Thank you so much.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-859674497
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:196,Security,hash,hashkenazy,196,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:230,Security,hash,hashkenazy,230,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:277,Security,hash,hashkenazy,277,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:345,Security,hash,hashkenazy,345,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:390,Security,hash,hashkenazy,390,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:461,Security,hash,hashkenazy,461,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:539,Security,hash,hashkenazy,539,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:584,Security,hash,hashkenazy,584,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:635,Security,hash,hashkenazy,635,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:692,Security,hash,hashkenazy,692,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:743,Security,hash,hashkenazy,743,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:105,Testability,log,logs,105,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959
https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860641251:42,Security,hash,hashkenazy,42,"I think you need to specify `/tmp/global2/hashkenazy/sample.fa.mmseqdb.gz` twice, as it's both the query and target database for `createtsv`. Sorry this is a bit confusing when used together with the clustering workflows :/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860641251
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:434,Availability,avail,available,434,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1307,Availability,down,download,1307,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:315,Deployability,install,installed,315,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:486,Deployability,patch,patch,486,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:697,Deployability,patch,patch,697,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1205,Deployability,pipeline,pipeline,1205,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1235,Deployability,release,release,1235,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1298,Deployability,release,releases,1298,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:234,Integrability,depend,dependency,234,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:359,Integrability,depend,dependency,359,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:399,Integrability,depend,dependency,399,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:587,Safety,detect,detection,587,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1200,Testability,test,test,1200,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:661,Availability,avail,available,661,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:138,Integrability,depend,dependency,138,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:417,Integrability,message,message,417,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:485,Performance,optimiz,optimizations,485,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:513,Performance,perform,performance,513,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:34,Usability,feedback,feedback,34,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:766,Usability,feedback,feedback,766,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:67,Availability,error,error,67,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1507,Availability,down,download,1507,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1597,Availability,down,downloadFile,1597,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:23,Deployability,patch,patch,23,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:226,Deployability,patch,patch,226,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:372,Deployability,release,release,372,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:386,Deployability,patch,patch,386,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:645,Deployability,patch,patch,645,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:849,Deployability,install,installed,849,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:888,Deployability,install,installs,888,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1386,Deployability,install,installed,1386,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1543,Deployability,install,install,1543,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1792,Deployability,install,installed,1792,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:953,Integrability,depend,dependency,953,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2082,Integrability,message,message,2082,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:338,Modifiability,variab,variable,338,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:686,Modifiability,variab,variable,686,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:503,Performance,optimiz,optimizations,503,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2104,Performance,optimiz,optimized,2104,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2142,Performance,perform,performance,2142,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2033,Safety,safe,safe,2033,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512:103,Availability,down,download,103,"You are right that it might be a bit fragile. . Exactly, these two workflows need to have something to download files. The workflows are automatically compiled into the binary and executed when the respective workflow is called (that's what either the xxd or perl build time dependency is for). Fetch sounds good, I'll try that out when I get a CirrusCI with FreeBSD going. AVX2 is a bit IIRC ~30% faster than SSE4.1, so it's not super important. The only problem is if no SIMD flags are specified at all. Then we fall back to the scalar intrinsic implementations of SIMDe which are a lot slower (don't have an exact number, but it was a few factors slower).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512:275,Integrability,depend,dependency,275,"You are right that it might be a bit fragile. . Exactly, these two workflows need to have something to download files. The workflows are automatically compiled into the binary and executed when the respective workflow is called (that's what either the xxd or perl build time dependency is for). Fetch sounds good, I'll try that out when I get a CirrusCI with FreeBSD going. AVX2 is a bit IIRC ~30% faster than SSE4.1, so it's not super important. The only problem is if no SIMD flags are specified at all. Then we fall back to the scalar intrinsic implementations of SIMDe which are a lot slower (don't have an exact number, but it was a few factors slower).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572:53,Deployability,install,installation,53,"Got it. So what files should be present in a minimal installation? For now, I'm installing everything in data in addition to the two files your install target does. I haven't had time to play with mmseqs2 yet and probably won't for a while, but I want to the FreeBSD port to work out-of-the-box for a typical user.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572:80,Deployability,install,installing,80,"Got it. So what files should be present in a minimal installation? For now, I'm installing everything in data in addition to the two files your install target does. I haven't had time to play with mmseqs2 yet and probably won't for a while, but I want to the FreeBSD port to work out-of-the-box for a typical user.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572:144,Deployability,install,install,144,"Got it. So what files should be present in a minimal installation? For now, I'm installing everything in data in addition to the two files your install target does. I haven't had time to play with mmseqs2 yet and probably won't for a while, but I want to the FreeBSD port to work out-of-the-box for a typical user.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868487428:41,Security,access,accessible,41,"So the workflow scripts don't need to be accessible at runtime? I wasn't sure what you meant by ""compiled in"". Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868487428
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3497,Availability,error,error,3497,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3450,Integrability,message,messages,3450,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:171,Testability,TEST,TEST,171,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:254,Testability,TEST,TEST,254,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:349,Testability,TEST,TEST,349,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:428,Testability,TEST,TEST,428,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:512,Testability,TEST,TEST,512,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:595,Testability,TEST,TEST,595,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:643,Testability,TEST,TEST,643,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:721,Testability,TEST,TEST,721,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:846,Testability,TEST,TEST,846,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:933,Testability,TEST,TEST,933,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:993,Testability,TEST,TEST,993,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1039,Testability,TEST,TEST,1039,"No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filterta",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1117,Testability,TEST,TEST,1117,"eems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1199,Testability,TEST,TEST,1199,"53; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1277,Testability,TEST,TEST,1277,"38353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1350,Testability,TEST,TEST,1350,"OOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1429,Testability,TEST,TEST,1429,"; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUC",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1507,Testability,TEST,TEST,1507,"CCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNU",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1581,Testability,TEST,TEST,1581,"ST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 26",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1667,Testability,TEST,TEST,1667,"ted: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1757,Testability,TEST,TEST,1757,ARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expec,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1969,Testability,TEST,TEST,1969,D (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_D,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2104,Testability,TEST,TEST,2104,Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (T,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2207,Testability,TEST,TEST,2207,"); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2271,Testability,TEST,TEST,2271," (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expecte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2346,Testability,TEST,TEST,2346,"T (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2433,Testability,TEST,TEST,2433,"ed: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2545,Testability,TEST,TEST,2545,"TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/N",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2679,Testability,TEST,TEST,2679,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2739,Testability,TEST,TEST,2739,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2803,Testability,TEST,TEST,2803,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2888,Testability,TEST,TEST,2888,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2953,Testability,TEST,TEST,2953,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3028,Testability,TEST,TEST,3028,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3115,Testability,TEST,TEST,3115,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3236,Testability,TEST,TEST,3236,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3314,Testability,TEST,TEST,3314,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400:253,Availability,error,error,253,"Ah the nucl-nucl test are very likely to fail as they include statically compiled binaries for samtools (for linux, windows and macos). I would need to add a statically compiled binary for freebsd too. `SLICEPROFILE` is odd however. The `posix_madvice` error is annoying but can be ignored. I don't see anything special in the freebsd man page that would indicate that this might fail/behave differently. . I am downloading a VM and I'll take a look at these issues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400:412,Availability,down,downloading,412,"Ah the nucl-nucl test are very likely to fail as they include statically compiled binaries for samtools (for linux, windows and macos). I would need to add a statically compiled binary for freebsd too. `SLICEPROFILE` is odd however. The `posix_madvice` error is annoying but can be ignored. I don't see anything special in the freebsd man page that would indicate that this might fail/behave differently. . I am downloading a VM and I'll take a look at these issues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400:17,Testability,test,test,17,"Ah the nucl-nucl test are very likely to fail as they include statically compiled binaries for samtools (for linux, windows and macos). I would need to add a statically compiled binary for freebsd too. `SLICEPROFILE` is odd however. The `posix_madvice` error is annoying but can be ignored. I don't see anything special in the freebsd man page that would indicate that this might fail/behave differently. . I am downloading a VM and I'll take a look at these issues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:69,Availability,failure,failure,69,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:99,Energy Efficiency,Power,PowerEdge,99,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:161,Testability,log,log,161,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:179,Testability,log,log,179,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:239,Testability,log,log,239,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:253,Availability,echo,echo,253,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:627,Availability,avail,available,627,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:769,Availability,error,error,769,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:723,Energy Efficiency,allocate,allocate,723,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:775,Integrability,message,messages,775,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:573,Modifiability,refactor,refactoring,573,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:484,Deployability,patch,patches,484,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:232,Energy Efficiency,Power,PowerEdge,232,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:128,Integrability,depend,dependency,128,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:381,Testability,test,tests,381,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:474,Testability,test,test,474,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:10,Deployability,patch,patches,10,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:57,Testability,test,tests,57,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:114,Testability,TEST,TEST,114,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:197,Testability,TEST,TEST,197,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:292,Testability,TEST,TEST,292,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:371,Testability,TEST,TEST,371,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:455,Testability,TEST,TEST,455,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:538,Testability,TEST,TEST,538,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:586,Testability,TEST,TEST,586,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:664,Testability,TEST,TEST,664,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:789,Testability,TEST,TEST,789,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:876,Testability,TEST,TEST,876,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:969,Testability,TEST,TEST,969,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1046,Testability,TEST,TEST,1046,"ts pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1124,Testability,TEST,TEST,1124,"pected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1206,Testability,TEST,TEST,1206,"D; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1284,Testability,TEST,TEST,1284,"ST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1357,Testability,TEST,TEST,1357,"TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1437,Testability,TEST,TEST,1437," 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1516,Testability,TEST,TEST,1516,"ime: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1590,Testability,TEST,TEST,1590,"Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARC",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1676,Testability,TEST,TEST,1676," GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1766,Testability,TEST,TEST,1766,0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; E,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1978,Testability,TEST,TEST,1978,al: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FIL,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2113,Testability,TEST,TEST,2113,me: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCC,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2216,Testability,TEST,TEST,2216,T SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOO,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2315,Testability,TEST,TEST,2315,"d: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2423,Testability,TEST,TEST,2423,"LUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2510,Testability,TEST,TEST,2510,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2622,Testability,TEST,TEST,2622,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2756,Testability,TEST,TEST,2756,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2816,Testability,TEST,TEST,2816,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2880,Testability,TEST,TEST,2880,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2965,Testability,TEST,TEST,2965,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:3030,Testability,TEST,TEST,3030,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:3105,Testability,TEST,TEST,3105,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:3192,Testability,TEST,TEST,3192,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:3313,Testability,TEST,TEST,3313,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:3391,Testability,TEST,TEST,3391,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:63,Deployability,configurat,configurations,63,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:63,Modifiability,config,configurations,63,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:106,Modifiability,variab,variable,106,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:21,Energy Efficiency,Power,PowerEdge,21,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:1623,Performance,optimiz,optimization,1623,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:4,Testability,test,tests,4,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1699,Availability,Mask,Mask,1699,"0f129537ab954340eb44d8e99e4d69a1dfd3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	10000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1717,Availability,Mask,Mask,1717,"0f129537ab954340eb44d8e99e4d69a1dfd3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	10000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1919,Availability,Mask,Mask,1919,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:838,Integrability,wrap,wrapped,838,"The hangs are not totally consistent, but seem to usually happen here:; ...; Create directory /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/tmp; easy-search /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/data/query.fasta /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/data/targetannotation.fasta /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/results_aln.m8 /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/tmp -e 10000 -s 4 --max-seqs 4000 --num-iterations 2 --compressed 1 . MMseqs Version: 	0aab0f129537ab954340eb44d8e99e4d69a1dfd3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	10000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776:1134,Modifiability,extend,extend,1134,"Just got a hang here:; ...; [===============================================================> ] 98.28% 35.40[===============================================================> ] 98.28% 35.41[================================================================>] 99.28% 35.77[=================================================================] 100.00% 36.03K 3s 736ms; Time for merging to aln_swapped: 0h 0m 0s 23ms; 103611 alignments calculated; 72095 sequence pairs passed the thresholds (0.695824 of overall calculated); 2.001194 hits per query sequence; Time for processing: 0h 0m 3s 787ms; swapresults /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/targetannotation_profile /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/query /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/tmp/7458066464536510288/aln_swapped /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/results_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 10000 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 16 --compressed 0 --db-load-mode 0 -v 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776:1186,Performance,load,load-mode,1186,"Just got a hang here:; ...; [===============================================================> ] 98.28% 35.40[===============================================================> ] 98.28% 35.41[================================================================>] 99.28% 35.77[=================================================================] 100.00% 36.03K 3s 736ms; Time for merging to aln_swapped: 0h 0m 0s 23ms; 103611 alignments calculated; 72095 sequence pairs passed the thresholds (0.695824 of overall calculated); 2.001194 hits per query sequence; Time for processing: 0h 0m 3s 787ms; swapresults /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/targetannotation_profile /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/query /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/tmp/7458066464536510288/aln_swapped /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/results_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 10000 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 16 --compressed 0 --db-load-mode 0 -v 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869585650:611,Integrability,depend,dependencies,611,"I tried to reproduce the problem in my FreeBSD 13 VM with your wip-ports repository and I can't get it to hang. I tried with both `-msse2` and `-march=x86_64` (and removed the `USE_GCC` line). Maybe the issue is that it's swapping at that moment a bit excessively and it would eventually continue? Could you attach gdb/lldb at the moment it's hanging and produce a stack trace? That's quite the odd issue that I've not encountered on any other systems :/. I think the c++ standard was somewhat of a conscious choice, as we don't really want to use modern C++, but (iirc) gcc 4.8 would complain about one of the dependencies without increasing the c++ standard slightly.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869585650
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:10,Energy Efficiency,Power,PowerEdge,10,"From Dell PowerEdge:. ps axw:. ```; 579 0 I+ 0:00.01 /bin/sh -e ./run_regression.sh /usr/local/bin/mmseqs ./Temp; 1206 0 I+ 0:00.00 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/regression/run_nucl; 1217 0 I+ 0:00.02 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NUCLNUCL_TRANS; 1225 0 I+ 0:07.71 /usr/local/bin/mmseqs offsetalignment /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1; ```; lldb:. ```; (lldb) process attach --pid 1225; Process 1225 stopped. Executable module set to ""/usr/local/bin/mmseqs"".; Architecture set to: x86_64--freebsd12.2.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, u",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:1478,Modifiability,Extend,ExtendedConfig,1478,"x86_64--freebsd12.2.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:1591,Modifiability,Config,Config,1591,"x86_64--freebsd12.2.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:1956,Modifiability,Extend,ExtendedConfig,1956,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2069,Modifiability,Config,Config,2069,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2207,Modifiability,Extend,ExtendedConfig,2207,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2307,Modifiability,Config,Config,2307,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2639,Modifiability,Extend,ExtendedConfig,2639,"hared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2752,Modifiability,Config,Config,2752,"hared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:3878,Modifiability,Extend,ExtendedConfig,3878,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:3991,Modifiability,Config,Config,3991,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4213,Modifiability,Extend,ExtendedConfig,4213,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4326,Modifiability,Config,Config,4326,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4513,Modifiability,Extend,ExtendedConfig,4513,"6 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReade",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4626,Modifiability,Config,Config,4626,"6 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReade",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4987,Modifiability,Config,Config,4987,"erator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7120,Modifiability,Extend,ExtendedConfig,7120,"lable>) at crt1.c:76:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7233,Modifiability,Config,Config,7233,"lable>) at crt1.c:76:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7598,Modifiability,Extend,ExtendedConfig,7598,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7711,Modifiability,Config,Config,7711,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7849,Modifiability,Extend,ExtendedConfig,7849,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7949,Modifiability,Config,Config,7949,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:8281,Modifiability,Extend,ExtendedConfig,8281,"hared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:8394,Modifiability,Config,Config,8394,"hared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:9520,Modifiability,Extend,ExtendedConfig,9520,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:9633,Modifiability,Config,Config,9633,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:9855,Modifiability,Extend,ExtendedConfig,9855,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:9968,Modifiability,Config,Config,9968,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:10155,Modifiability,Extend,ExtendedConfig,10155,"6 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReade",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:10268,Modifiability,Config,Config,10268,"6 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReade",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:10629,Modifiability,Config,Config,10629,"erator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:5775,Security,access,accessType,5775,"7fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:18; frame #25: 0x0000000000388596 mmseqs`main(argc=22, argv=0x00007fffffffd898) at Application.cpp:196:9; frame #26: 0x0000000000386400 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1.c:76:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:11417,Security,access,accessType,11417,"t>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:18; frame #25: 0x0000000000388596 mmseqs`main(argc=22, argv=0x00007fffffffd898) at Application.cpp:196:9; frame #26: 0x0000000000386400 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1.c:76:7. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1229,Modifiability,Extend,ExtendedConfig,1229,"/Temp/CLUSTER_REASSIGN; 57135 0 I+ 0:00.01 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/CLUSTER_REASSIGN; 57200 0 S+ 0:00.62 /usr/local/bin/mmseqs swapdb /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Tem; ```. lldb:; ```; (lldb) process attach --pid 57200; Process 57200 stopped. Executable module set to ""/usr/local/bin/mmseqs"".; Architecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1391,Modifiability,Config,Config,1391,"/Temp/CLUSTER_REASSIGN; 57135 0 I+ 0:00.01 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/CLUSTER_REASSIGN; 57200 0 S+ 0:00.62 /usr/local/bin/mmseqs swapdb /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Tem; ```. lldb:; ```; (lldb) process attach --pid 57200; Process 57200 stopped. Executable module set to ""/usr/local/bin/mmseqs"".; Architecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1614,Modifiability,Extend,ExtendedConfig,1614,"ecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1754,Modifiability,Config,Config,1754,"ecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2022,Modifiability,Extend,ExtendedConfig,2022,"42; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2162,Modifiability,Config,Config,2162,"42; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2429,Modifiability,Extend,ExtendedConfig,2429,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2725,Modifiability,Config,Config,2725,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2932,Modifiability,Extend,ExtendedConfig,2932,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3072,Modifiability,Config,Config,3072,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3283,Modifiability,Extend,ExtendedConfig,3283,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3423,Modifiability,Config,Config,3423,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3561,Modifiability,Extend,ExtendedConfig,3561,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3661,Modifiability,Config,Config,3661,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3986,Modifiability,Config,Config,3986,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:4126,Modifiability,Extend,ExtendedConfig,4126,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:4226,Modifiability,Config,Config,4226,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:4407,Modifiability,Extend,ExtendedConfig,4407,"<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:4547,Modifiability,Config,Config,4547,"<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:5639,Modifiability,Extend,ExtendedConfig,5639,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:5779,Modifiability,Config,Config,5779,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:5973,Modifiability,Extend,ExtendedConfig,5973,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6113,Modifiability,Config,Config,6113,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6300,Modifiability,Extend,ExtendedConfig,6300,"call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6440,Modifiability,Config,Config,6440,"call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6773,Modifiability,Config,Config,6773,"<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x00000000004",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9059,Modifiability,Extend,ExtendedConfig,9059,"005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9221,Modifiability,Config,Config,9221,"005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9444,Modifiability,Extend,ExtendedConfig,9444,"eanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9584,Modifiability,Config,Config,9584,"eanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9852,Modifiability,Extend,ExtendedConfig,9852,"42; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9992,Modifiability,Config,Config,9992,"42; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:10259,Modifiability,Extend,ExtendedConfig,10259,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:10555,Modifiability,Config,Config,10555,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:10762,Modifiability,Extend,ExtendedConfig,10762,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:10902,Modifiability,Config,Config,10902,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11113,Modifiability,Extend,ExtendedConfig,11113,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11253,Modifiability,Config,Config,11253,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11391,Modifiability,Extend,ExtendedConfig,11391,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11491,Modifiability,Config,Config,11491,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11816,Modifiability,Config,Config,11816,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:11956,Modifiability,Extend,ExtendedConfig,11956,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:12056,Modifiability,Config,Config,12056,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:12237,Modifiability,Extend,ExtendedConfig,12237,"<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:12377,Modifiability,Config,Config,12377,"<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:13469,Modifiability,Extend,ExtendedConfig,13469,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:13609,Modifiability,Config,Config,13609,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:13803,Modifiability,Extend,ExtendedConfig,13803,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:13943,Modifiability,Config,Config,13943,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:14130,Modifiability,Extend,ExtendedConfig,14130,"call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:14270,Modifiability,Config,Config,14270,"call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:14603,Modifiability,Config,Config,14603,"<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x00000000004",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:7989,Security,access,accessType,7989,")>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x000000000044adae mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffc718, accessType=8) at DBReader.cpp:185:9; frame #21: 0x000000000059f427 mmseqs`doswap(par=0x000000080121f1c0, isGeneralMode=true) at swapresults.cpp:49:22; frame #22: 0x00000000005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:15819,Security,access,accessType,15819,"47d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x000000000044adae mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffc718, accessType=8) at DBReader.cpp:185:9; frame #21: 0x000000000059f427 mmseqs`doswap(par=0x000000080121f1c0, isGeneralMode=true) at swapresults.cpp:49:22; frame #22: 0x00000000005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870653723:54,Usability,clear,clear,54,"That seems to have done it. Nice work!. I'm still not clear on why it was working on your FreeBSD VM or why it works with GCC. From what I can tell, CMPXCHG16B was only lacking on VERY early AMD64 architectures. My hardware is old, but not that old.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870653723
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870674164:88,Energy Efficiency,Power,Power,88,"I am not sure why. This sorting library is also a bit fickle on uncommon architectures (Power and Z, though MMseqs2 doesn't 100% work on Z yet anyway) and I've explicitly disabled it on those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870674164
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679:215,Deployability,install,installed,215,Can you post the output of `ldd /usr/local/bin/mmseqs` and `make clean build` in wip/mmseqs2? I wonder if my build is picking up some optional dependency that yours is not. I'm guessing you don't have many packages installed on the VM. Thanks...,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679
https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679:143,Integrability,depend,dependency,143,Can you post the output of `ldd /usr/local/bin/mmseqs` and `make clean build` in wip/mmseqs2? I wonder if my build is picking up some optional dependency that yours is not. I'm guessing you don't have many packages installed on the VM. Thanks...,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:85,Availability,error,error,85,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:91,Integrability,message,messages,91,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:122,Integrability,depend,dependencies,122,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867853182:79,Deployability,install,install,79,Maybe it works if you explicitly also add the conda-forge channel:; ```; conda install -c conda-forge -c bioconda mmseqs2; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867853182
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:956,Availability,error,error,956,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:1622,Availability,down,downstream,1622,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:120,Deployability,install,install,120,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:244,Deployability,configurat,configuration,244,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:310,Deployability,install,install,310,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:519,Deployability,patch,patches,519,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:930,Deployability,update,updated,930,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:1461,Deployability,configurat,configuration,1461,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:962,Integrability,message,messages,962,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:993,Integrability,depend,dependencies,993,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:244,Modifiability,config,configuration,244,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:1461,Modifiability,config,configuration,1461,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999
https://github.com/soedinglab/MMseqs2/issues/462#issuecomment-868462603:299,Safety,risk,risky,299,"Thanks for the quick response!; For some cases, I do get a result for nucl-nucl alignment (used later to produce m8 file, as described [here](https://github.com/soedinglab/mmseqs2/wiki#how-to-add-sequence-identities-and-other-alignment-information-to-a-clustering-result)), do you think it would be risky/buggy to use such results? ; Would the best way to compute the alignments among cluster members is to run mmseqs search command for each representative sequence against its cluster members (as a DB)? Would it be better to externally compute the Smith-Waterman alignment for each representative and cluster member?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462#issuecomment-868462603
https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-907555049:18,Testability,test,testing,18,"I was able to try testing this again with commit https://github.com/soedinglab/MMseqs2/commit/38ab523ae7c321bc673be8b1ed8f61d44aaf054b using the command; ```; mmseqs gff2db hits.gff3 seqdb orfsdb; ```; and I get the following warnings:; ```; No feature types given. All features will be extracted; Not enough GFF files are provided. Some results might be omitted; ```; It runs, but then segfaults after a few minutes. The head of the GFF3 file I am using is; ```; ##gff-version 3.1.26; E003084_000873 MMseqs2 CDS 126862 127041 . + 0 .; E003084_000885 MMseqs2 CDS 7237 7320 . + 0 .; E003084_000873 MMseqs2 CDS 126862 127041 . + 0 .; E003084_000885 MMseqs2 CDS 7237 7320 . + 0 .; E003084_000290 MMseqs2 CDS 216412 216618 . - 0 .; E003084_000290 MMseqs2 CDS 216412 216618 . - 0 .; E003084_000762 MMseqs2 CDS 2639 2845 . + 0 .; E003084_000381 MMseqs2 CDS 224646 225113 . + 0 .; E003084_000226 MMseqs2 CDS 1259 1411 . + 0 .; ```; which I generate from the output of `convertalis` after doing a translated search. Is this not the format I should be using? I was trying to create a minimal file based off of [this spec](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-907555049
https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824:76,Availability,avail,available,76,The whole database is bit large to upload but all of the sequence files are available on NCBI so you can recreate it.; ```; 002572	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Ambystoma_mexicanum/latest_assembly_versions/GCA_002915635.3_AmbMex60DD/GCA_002915635.3_AmbMex60DD_genomic.fna.gz; 002700	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ormyrus_pomaceus/latest_assembly_versions/GCA_900474385.1_Opom/GCA_900474385.1_Opom_genomic.fna.gz; 002828	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Bombus_difficillimus/latest_assembly_versions/GCA_014737525.1_ASM1473752v1/GCA_014737525.1_ASM1473752v1_genomic.fna.gz; 002956	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ixodes_persulcatus/latest_assembly_versions/GCA_013358835.1_BMI_IPER_1.0/GCA_013358835.1_BMI_IPER_1.0_genomic.fna.gz; 003084	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Drosophila_paulistorum/latest_assembly_versions/GCA_018151315.1_ASM1815131v1/GCA_018151315.1_ASM1815131v1_genomic.fna.gz; 003212	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Stichodactyla_mertensii/latest_assembly_versions/GCA_011800005.1_ASM1180000v1/GCA_011800005.1_ASM1180000v1_genomic.fna.gz; 003340	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Junonia_litoralis/latest_assembly_versions/GCA_018234725.1_SRR10765697/GCA_018234725.1_SRR10765697_genomic.fna.gz; 003468	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Emesis_heterochroa/latest_assembly_versions/GCA_018236145.1_SRR10158617/GCA_018236145.1_SRR10158617_genomic.fna.gz; 003596	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Armadillidium_vulgare/latest_assembly_versions/GCA_004104545.1_Arma_vul_BF2787/GCA_004104545.1_Arma_vul_BF2787_genomic.fna.gz; 003724	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Rotaria_socialis/latest_assembly_versions/GCA_905331295.1_Rs_AK15_reference_genomic_v1/GCA_905331295.1_Rs_AK15_reference_genomic_v1_genomic.fna.gz; 000675	https://ftp.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824
https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824:5057,Testability,test,testing,5057,"ov/genomes/genbank/vertebrate_other/Neoceratodus_forsteri/latest_assembly_versions/GCA_016271365.1_neoFor_v3/GCA_016271365.1_neoFor_v3_genomic.fna.gz; 001396	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Grammatotria_lemairii/latest_assembly_versions/GCA_015107535.1_JDD8.scf/GCA_015107535.1_JDD8.scf_genomic.fna.gz; 001524	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Cetomimus_sp._NI1144/latest_assembly_versions/GCA_900660305.1_Opsanus_beta_assembly/GCA_900660305.1_Opsanus_beta_assembly_genomic.fna.gz; 001652	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Neolamprologus_hecqui/latest_assembly_versions/GCA_015103515.1_Bel14.scf/GCA_015103515.1_Bel14.scf_genomic.fna.gz; 001780	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Larimichthys_polyactis/latest_assembly_versions/GCA_010119295.1_ASM1011929v1/GCA_010119295.1_ASM1011929v1_genomic.fna.gz; 001908	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Periophthalmodon_schlosseri/latest_assembly_versions/GCA_000787095.1_PS.fa/GCA_000787095.1_PS.fa_genomic.fna.gz; 002036	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Tropheus_sp._brichardi_kipili_AB-2019/latest_assembly_versions/GCA_015110695.1_LGA5.scf/GCA_015110695.1_LGA5.scf_genomic.fna.gz; 002164	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Argyrosomus_japonicus/latest_assembly_versions/GCA_015710095.1_ASM1571009v1/GCA_015710095.1_ASM1571009v1_genomic.fna.gz; ```; You can put that list in a file and pass it to this script as an argument. The script is mostly to change the identifiers. ```; #!/usr/bin/env bash. while read -r fid link; do; wget -O - ""${link}"" |\; gzip -dc |\; awk -v""id=${fid}"" -F'>' 'NF > 1{printf "">E%06d_%06d"", id, i++} NF == 1'; done < ""${1}"" | mmseqs createdb stdin seqdb --dbtype 2; ```; I imagine for testing purposes making the database with just a couple files would work. I am using MMseqs2 with singularity so that might be a confounding factor.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824
https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873103775:79,Safety,avoid,avoid,79,"Thanks a lot for your contribution and finding about this edge case. We try to avoid Modern C++ features, could you please implement this without `auto`, lambdas and std::replace. I think `FileUtil` might be an appropriate place for this function. The `SSTR(key)` branch is always numeric and doesn't require a call to `path_substitution`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873103775
https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873693087:88,Safety,avoid,avoid,88,"> Thanks a lot for your contribution and finding about this edge case.; > ; > We try to avoid Modern C++ features, could you please implement this without `auto`, lambdas and std::replace. I think `FileUtil` might be an appropriate place for this function.; > ; > The `SSTR(key)` branch is always numeric and doesn't require a call to `path_substitution`. Thank you for your review. These C++ 11 features will be removed in a couple of days. I will push next request before this Friday.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873693087
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:143,Availability,error,error,143,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:413,Availability,error,error,413,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:560,Availability,Error,Error,560,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:648,Performance,perform,perform,648,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:146,Availability,error,error,146,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:267,Availability,error,error,267,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:320,Availability,error,error,320,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228
https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:34,Deployability,install,installed,34,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228
https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827:34,Deployability,install,install,34,What conda command did you use to install MMseqs2?; Conda just offered me a brand-new installation of MMseqs2 with the same ancient version 6.f5a1c.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827
https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827:86,Deployability,install,installation,86,What conda command did you use to install MMseqs2?; Conda just offered me a brand-new installation of MMseqs2 with the same ancient version 6.f5a1c.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827
https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776:25,Availability,error,error,25,With the new version the error is fixed. Thanks,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704:444,Modifiability,extend,extend,444,"Could you run only the last module call in a debugger?; ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3; ```. Then wait for a prompt and type `r` for run and then once it crashes type `bt` or backtrace and copy the output here. Using a newer version might also help, though I don't see any relevant changes in `convertalis` since the commit you used.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704:482,Performance,load,load-mode,482,"Could you run only the last module call in a debugger?; ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3; ```. Then wait for a prompt and type `r` for run and then once it crashes type `bt` or backtrace and copy the output here. Using a newer version might also help, though I don't see any relevant changes in `convertalis` since the commit you used.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:959,Deployability,configurat,configuration,959,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:978,Deployability,configurat,configuration,978,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:454,Modifiability,extend,extend,454,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:913,Modifiability,config,configured,913,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:959,Modifiability,config,configuration,959,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:978,Modifiability,config,configuration,978,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:1731,Modifiability,extend,extend,1731,"e free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:2319,Modifiability,extend,extend,2319,"o ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:492,Performance,load,load-mode,492,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:1769,Performance,load,load-mode,1769,"e free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:2357,Performance,load,load-mode,2357,"o ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:4630,Performance,optimiz,optimized,4630,"8c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convertalignments (argc=<optimized out>, argv=<optimized out>, command=...) at /home/vsts/work/1/s/src/util/convertalignments.cpp:495; #11 0x0000000000848be6 in gomp_thread_start (); #12 0x000000000085a66b in start_thread (arg=0x1554996f9700) at pthread_create.c:463; #13 0x00000000008f609f in clone (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:4652,Performance,optimiz,optimized,4652,"8c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convertalignments (argc=<optimized out>, argv=<optimized out>, command=...) at /home/vsts/work/1/s/src/util/convertalignments.cpp:495; #11 0x0000000000848be6 in gomp_thread_start (); #12 0x000000000085a66b in start_thread (arg=0x1554996f9700) at pthread_create.c:463; #13 0x00000000008f609f in clone (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:3630,Safety,Abort,Aborted,3630,"smatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convert",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:3792,Safety,abort,abort,3792,"8c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convertalignments (argc=<optimized out>, argv=<optimized out>, command=...) at /home/vsts/work/1/s/src/util/convertalignments.cpp:495; #11 0x0000000000848be6 in gomp_thread_start (); #12 0x000000000085a66b in start_thread (arg=0x1554996f9700) at pthread_create.c:463; #13 0x00000000008f609f in clone (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492:254,Availability,error,error,254,"Thanks Milot!; Indeed it seems that running it with `--format-output fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen` was ended successfully.; Trying to run the `p queryId` after the `bt` when it crashed resulted in the following error:; `(gdb) p queryId; No symbol ""queryId"" in current context.`. I see now that the names of a few of my query IDs are complex/long... So I guess this could be the issue... What would be the best strategy to continue? change the names to something simple like s1, s2, s3, etc., and rerun? Or any other idea? . Thanks!; Haim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492:505,Usability,simpl,simple,505,"Thanks Milot!; Indeed it seems that running it with `--format-output fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen` was ended successfully.; Trying to run the `p queryId` after the `bt` when it crashed resulted in the following error:; `(gdb) p queryId; No symbol ""queryId"" in current context.`. I see now that the names of a few of my query IDs are complex/long... So I guess this could be the issue... What would be the best strategy to continue? change the names to something simple like s1, s2, s3, etc., and rerun? Or any other idea? . Thanks!; Haim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729:65,Deployability,release,release,65,"Ah sorry, the instructions missed a step and wouldnt work with a release build anyway. Could you paste a few of the query headers here (or send an email)? I can try to figure out what's going wrong with them.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878872574:5158,Availability,error,error,5158,"0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0-9905_Chr45|568425:56822533|53080,53342+,53347+,53350+,53351+,53353+,53354+,53355+,53357+,53359+,53361+,53362+,53365+,53352567+,53369+,53370+,53372+,53373+,53374+,53375+,53378+,53379+,53380+,53382+,53390+,53391+,53393+,53322494+,53397+,53423401+,53222402+,53444203+,53404+,53405+,53408+,53409; >16234445566.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0-10024_Chr111|648475:649290|62018,62021+,62022+,62027+,62029+,62030+,62032+,62033+,62035+,62036+,62038+,62039+,62040+,644043+,62044+,62046+,62047+,62050+,62051+,62052+,62071+,62073+,62074+,62076+,62078+,62079+,62080+,620312+,62084+,62086+,62087+,62088+,62089+,62090+,62091+,62093+,62094+,62095+,62096+,62098+,62099+,621111+,62103+,62104+,62105+,62107+,62108+,62110+,62112+,62113+,62114+,62117+,62119+,62120+,62121+,62123+,62125+,62127+,62128+,62129+,62132+,62133+,62135+,62136+,62139+,62140+,62141+,62142+,62144+,62146+,62147+,62148+,62149+,62151+,62152+,62154+,62155+,62157+,62159+,62160+,62161+,62163+,62165+,62166+,62168+,62169+,62171+,62172+,62173+,62174+,62177+,62178+,62179+,62182+,62188+,62189+,62191+,62193+,62194+,62195+,62196+,62197+,62198+,62199+,62201+,62202+,62204+,62205+,62207+,62208+,62210+,62213+,62214+,62215+,62216+,62217+,62219+,62220+,62221+,62223+,62224+,62225+,62227+,62381+,62383+,62384+,62386+,62387+,62389+,62390+,62391+,62392+,62394+,62395+,62396+,62398+,62400+,62401+,62403+,62479+,62480+,62482+,62483+,62485+,62486+,62487+,62488+,62490+,62491+,62493+,62494+,62496+,62499+,62500+,62502+,62503+,62505+,62506+,62507+,62509+,62511+,62513+,62514+,62516+,62517+,62519+,62520+,62521+,62522+,62524+,62526+,62527+,62528+,62529+,62530+,62534+,62535+,62536+,62537+,62539+,62541+,62542+,62543+,62544+,62547+,62548+,62549+,62550+,62551+,62553+,62555+,62556+,62558+,62560+,62561+,62562+,62563+,62564+,62565+,62567+,62568+,62569+,62571+,62572+,62574+,62575+,62577+,62578+,62580+,62582+,62583+,62584+,62586+,62588+,62589+,62591+,62592+,61770; ```. The qheader bypass seems to issue the same error :-(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878872574
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235:50,Availability,down,download,50,"Thanks! just sent you by email (@mpibpc) link for download the query file (it is ~1Gb size); Thanks for all the help, please let me know if / how I can help more with this :-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235
https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879089524:42,Testability,test,test,42,"Okay this is indeed a size problem. In my test, individual database entries are quickly ballooning to multiple gigabytes. I guess we should truncate the `query` field to like at most 1024 bytes or something like that. . You can either manipulate the header database to have a whitespace character somewhere near the beginning (the `query` field will show everything up to the first whitespace), with something like that; ```; mmseqs apply /tmp//2989869989197200687/query_h /tmp//2989869989197200687/query_h_new --threads 1 -- cut -d'.' -f1; mv -f /tmp//2989869989197200687/query_h_new /tmp//2989869989197200687/query_h; mv -f /tmp//2989869989197200687/query_h_new.index /tmp//2989869989197200687/query_h.index; ```. Or you can drop the `query` field and add the dbkey instead:; ```; mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8db --format-output target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --db-output 1 --search-type 3 ; mmseqs prefixid /tmp/rep_vs_NT_Jan2021.mmseq2.m8db /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --tsv; ```. Combined with the `query.lookup` you can still map each of the database keys to a header.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879089524
https://github.com/soedinglab/MMseqs2/issues/473#issuecomment-881031438:206,Modifiability,refactor,refactoring,206,The filtering step removes all 15 fragments extracted from this contig and passes an empty database to the normal prefiltering step. We need to more carefully handle empty input. This will require a bit of refactoring to fix.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473#issuecomment-881031438
https://github.com/soedinglab/MMseqs2/issues/474#issuecomment-881026657:234,Performance,load,loaded,234,I think I know what the bug. Creating the following symlink manually should fix the db:; ```; ln -s U90andNEWDB70_taxonomy U90andNEWDB70_nostrepto_taxonomy; ```. The dmp files are turned into a binary format (`_taxonomy`) that can be loaded nearly instantly. `filtertaxseqdb` doesn't create the correct symlink for this file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474#issuecomment-881026657
https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877:52,Availability,avail,availabe,52,"Thanks. tmp is on a local disk, but I only have 1TB availabe. That disk disk space gets full during execution, although I only want to run about 700K sequences against UniRef50. I will try --remove-tmp-files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877
https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896834119:251,Energy Efficiency,reduce,reduce,251,"You can slightly increase the minimum extracted ORF fragment length `--min-length` (30 amino acids/90nucleotides is the default). `--remove-tmp-files` decides if the contents of the `tmp` folder should remain after the search is finished, it will not reduce peak disk use.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896834119
https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896835234:157,Energy Efficiency,reduce,reduce,157,"I was meaning to add the same additional prefiltering stage we used int the recent MMseqs2 taxonomy paper to the normal search, this would also speed-up and reduce disk use at a slight sensitivity penalty. But I haven't gotten around to that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896835234
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795:97,Safety,detect,detection,97,"Can you check how much swap spaces is being used (`free -h`). I guess the automatic memory limit detection is going wrong somehow. Do you set memory limits in the cluster environments? Can you restart without/higher memory limits? I am not sure if SemiBin exposes MMseqs2 options to users, but you could set `--split-memory-Limit` so it processes the GTDB in smaller chunks. You would set this parameter to about 70-80% of total allowed RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795:256,Security,expose,exposes,256,"Can you check how much swap spaces is being used (`free -h`). I guess the automatic memory limit detection is going wrong somehow. Do you set memory limits in the cluster environments? Can you restart without/higher memory limits? I am not sure if SemiBin exposes MMseqs2 options to users, but you could set `--split-memory-Limit` so it processes the GTDB in smaller chunks. You would set this parameter to about 70-80% of total allowed RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657:14,Availability,avail,available,14,"Thanks. 180 G available. I was cheating here and just testing on a shared node. I was also just running mmseqs myself from the command line (but SemiBin does the same). Do you mean larger chunks, so it runs quicker, rather than smaller chunks?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657:54,Testability,test,testing,54,"Thanks. 180 G available. I was cheating here and just testing on a shared node. I was also just running mmseqs myself from the command line (but SemiBin does the same). Do you mean larger chunks, so it runs quicker, rather than smaller chunks?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894204152:158,Availability,avail,available,158,No the issue is (probably) that it’s using too much memory and runtime is thus degrading heavily. Larger chunks would mean a faster runtime if enough RAM was available. But with limited RAM smaller chunks will require less RAM and thus process quicker.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894204152
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865:412,Availability,avail,available,412,"Hi, I am also finding mmseqs taxonomy runs much slower than expected. I have run a metagenome assembled genome (MAG) as a query (after turning it into a mmseqs database) against nr (created using `mmseqs databases`). The query is 4.3M and it took about 4hrs to complete running. @milot-mirdita could you explain which number you took 70-80% of? When I run free -h, I get:. ```; total used free shared buff/cache available; Mem: 188Gi 1.1Gi 939Mi 2.0Mi 186Gi 186Gi; Swap: 8.0Gi 85Mi 7.9Gi; ```. I have some memory intensive programs running right now (bwa mem and metaSPAdes), so maybe this is slowing things down?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865:608,Availability,down,down,608,"Hi, I am also finding mmseqs taxonomy runs much slower than expected. I have run a metagenome assembled genome (MAG) as a query (after turning it into a mmseqs database) against nr (created using `mmseqs databases`). The query is 4.3M and it took about 4hrs to complete running. @milot-mirdita could you explain which number you took 70-80% of? When I run free -h, I get:. ```; total used free shared buff/cache available; Mem: 188Gi 1.1Gi 939Mi 2.0Mi 186Gi 186Gi; Swap: 8.0Gi 85Mi 7.9Gi; ```. I have some memory intensive programs running right now (bwa mem and metaSPAdes), so maybe this is slowing things down?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865
https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865:406,Performance,cache,cache,406,"Hi, I am also finding mmseqs taxonomy runs much slower than expected. I have run a metagenome assembled genome (MAG) as a query (after turning it into a mmseqs database) against nr (created using `mmseqs databases`). The query is 4.3M and it took about 4hrs to complete running. @milot-mirdita could you explain which number you took 70-80% of? When I run free -h, I get:. ```; total used free shared buff/cache available; Mem: 188Gi 1.1Gi 939Mi 2.0Mi 186Gi 186Gi; Swap: 8.0Gi 85Mi 7.9Gi; ```. I have some memory intensive programs running right now (bwa mem and metaSPAdes), so maybe this is slowing things down?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559:34,Deployability,install,install,34,What conda command did you use to install mmseqs2? `libatomic` is provided by `libgcc-ng` which is installed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559:99,Deployability,install,installed,99,What conda command did you use to install mmseqs2? `libatomic` is provided by `libgcc-ng` which is installed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:161,Availability,error,error,161,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:47,Deployability,install,install,47,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:117,Deployability,install,installed,117,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895356292:40,Availability,fault,fault,40,Ah! How right you are. So it was all my fault. I hope I didn't waste too much of your time.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895356292
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895357636:50,Integrability,depend,dependencies,50,"No worries, happy to have double checked that all dependencies are in order :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895357636
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175725479:46,Availability,fault,fault,46,"> . > Ah! How right you are. So it was all my fault. I hope I didn't waste too much of your time. I met the same problem with you, can you show the details step by step how to fix up the issue, thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175725479
https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221:12,Deployability,install,install,12,How did you install mmseqs and how do you call it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920204445:373,Modifiability,extend,extend,373,"I've been using the convertalis command this way:. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I've used convertalis with both the ""raw"" and ""bits"" fields. I've found that, using the approach above, the raw scores are approximately 13% higher on average than Parasail scores. However, by using the bits score and doubling it, I've found that the MMseqs2 score varies only from -3% to +3% of the parasail score. For some amino acids (D, F, G, N, P, Y) it gave the same value as Parasail did. So it seems like twice the bits score is close to parasail, but not quite identical. Below is the comparison between parasail scores, MMseqs2 2*bits, and MMseqs2 raw:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920204445
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920215894:239,Availability,mask,mask,239,"I think you have to use the normal `search` workflow instead of the `map` workflow, as `map` uses an ungapped alignment (the `rescorediagonal` module) instead of a real SW (the `align` module). Make sure to also pass `--comp-bias-corr 0 --mask 0` when using the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920215894
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:53,Availability,mask,mask,53,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:390,Availability,mask,mask,390,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:829,Availability,error,error,829,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972
https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:722,Modifiability,extend,extend,722,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1344,Availability,down,down,1344,"ld cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a third 'representative' sequence of a different cluster, and both of them did not make the cut. Still, they should have been compared to each other in a cluster of two because of their shared kmers. Is their a temporary file that documents which kmers were selected from a particular seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1010,Deployability,pipeline,pipeline,1010,"Hi Ann,. Thank you for the quick response. I'm currently using - f349118312919c4fcc448f4595ca3b3a387018e2 - which was the latest version as of last month. The entire point of this exercise, for me, is to understand, algorithmically, why linclust-only misses clusters that it perhaps should cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729:404,Availability,down,down,404,"I am not sure we deal well with 50-mers, the default nucleotide k-mer size is 14 or 15 (depending on the database size). ; Also, we have predefined spaced-kmer patterns only up to 30-mers, after that no spaced-kmers are used anymore.; Could you check if something more sensible happens if you leave out the k-mer size parameter?. We have commented out debug code interspersed in a lot of places to track down issues like that, however that's not very easy to use. Could you try to rule out the k-mer size issue first?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729:88,Integrability,depend,depending,88,"I am not sure we deal well with 50-mers, the default nucleotide k-mer size is 14 or 15 (depending on the database size). ; Also, we have predefined spaced-kmer patterns only up to 30-mers, after that no spaced-kmers are used anymore.; Could you check if something more sensible happens if you leave out the k-mer size parameter?. We have commented out debug code interspersed in a lot of places to track down issues like that, however that's not very easy to use. Could you try to rule out the k-mer size issue first?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155:505,Deployability,pipeline,pipeline,505,"Hi Milot,. Thank you once again for the quick follow up. I've conducted a grid search to understand this issue myself, and I have used a kmer size of 10, with or without the spaced kmer mode previously, and found the same issue. Here are the parameters used for that run - ; --kmer-per-seq-scale 0 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --cluster-mode 2 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. In other attempts, I have not used the kmer size parameter, and the pipeline automatically chooses 17 in that case, and the issue persists. In these pipelines with -c set to 0.99, and min-seq-id set to 0.99, I get excellent specificity (with a few or no clusters that have members that shouldn't be there), but about ~40% of all the representative sequences have another representative sequence in vicinity (Levenshtein distance of less than 10 out of 2500-3000 bp). This fraction drops to about ~15% if I use min-seq-id of 0.95, so I do find a gain in sensitivity. But 15% of all representative sequences is still quite a high number. What I don't understand is why those representative sequences weren't linked together with an edge when they check all boxes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155:586,Deployability,pipeline,pipelines,586,"Hi Milot,. Thank you once again for the quick follow up. I've conducted a grid search to understand this issue myself, and I have used a kmer size of 10, with or without the spaced kmer mode previously, and found the same issue. Here are the parameters used for that run - ; --kmer-per-seq-scale 0 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --cluster-mode 2 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. In other attempts, I have not used the kmer size parameter, and the pipeline automatically chooses 17 in that case, and the issue persists. In these pipelines with -c set to 0.99, and min-seq-id set to 0.99, I get excellent specificity (with a few or no clusters that have members that shouldn't be there), but about ~40% of all the representative sequences have another representative sequence in vicinity (Levenshtein distance of less than 10 out of 2500-3000 bp). This fraction drops to about ~15% if I use min-seq-id of 0.95, so I do find a gain in sensitivity. But 15% of all representative sequences is still quite a high number. What I don't understand is why those representative sequences weren't linked together with an edge when they check all boxes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989:1463,Security,validat,validating,1463,"Hi Ann,. Thank you for suggesting that. I know that using --cov-mode 3 paired with -c 0.99 is quite strict. When we relaxed it, we were finding 'false positive' clusters, where the cluster head/representatives (the largest sequence in the cluster) had novel enough genetic information in it, that we would have preferred it to be it's own cluster (with a solitary member). That being said, in my grid search, I have only explored varying -c values with a constant --cov-mode 3. The sequence pairs that I am finding that should be clustered together (and aren't) have nearly identical lengths (+-1) with a few mismatches (<10). It is my understanding that those should have been clustered regardless of the value of --cov-mode, even with the stringent -c 0.99. To give you another example, even when I use a very lenient clustering criterion (please note the values of min-seq-id, -c) - ; --kmer-per-seq-scale 0 --min-seq-id 0.80 --cov-mode 3 -c 0.80 --cluster-mode 1 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. I still find representative sequence pairs that have a levenshtein distance of 1 between them. Although now, I find very few such pairs (8 / 1378 all-v-all alignment of representative sequences with a levenshtein distance of < 10). I understand these could be edge cases, but I find them interesting, and I want to learn what linclust is doing by focussing on these 8 alone. (Making a long post even longer!) I'm validating linclust clusters by generating an all-v-all levenshtein distance matrix of representative clusters. And an all-v-all levenshtein distance matrix of all members within a cluster. Because my understanding of linclust is not great, I'm treating it as a black box that I intend to understand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989:1365,Usability,learn,learn,1365,"Hi Ann,. Thank you for suggesting that. I know that using --cov-mode 3 paired with -c 0.99 is quite strict. When we relaxed it, we were finding 'false positive' clusters, where the cluster head/representatives (the largest sequence in the cluster) had novel enough genetic information in it, that we would have preferred it to be it's own cluster (with a solitary member). That being said, in my grid search, I have only explored varying -c values with a constant --cov-mode 3. The sequence pairs that I am finding that should be clustered together (and aren't) have nearly identical lengths (+-1) with a few mismatches (<10). It is my understanding that those should have been clustered regardless of the value of --cov-mode, even with the stringent -c 0.99. To give you another example, even when I use a very lenient clustering criterion (please note the values of min-seq-id, -c) - ; --kmer-per-seq-scale 0 --min-seq-id 0.80 --cov-mode 3 -c 0.80 --cluster-mode 1 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. I still find representative sequence pairs that have a levenshtein distance of 1 between them. Although now, I find very few such pairs (8 / 1378 all-v-all alignment of representative sequences with a levenshtein distance of < 10). I understand these could be edge cases, but I find them interesting, and I want to learn what linclust is doing by focussing on these 8 alone. (Making a long post even longer!) I'm validating linclust clusters by generating an all-v-all levenshtein distance matrix of representative clusters. And an all-v-all levenshtein distance matrix of all members within a cluster. Because my understanding of linclust is not great, I'm treating it as a black box that I intend to understand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541:705,Deployability,pipeline,pipeline,705,"Hi Ann,. Thank you for guiding me so far. I did a bit of digging around in the temporary files. I'll call the two close sequences with one mismatch between them seqA and seqB. What I found was that they were both found within a larger cluster in the pref database with seqC (cluster head). seqC is about 20% different to both seqA and seqB, but their ungapped alignment scores may not reflect that. In the pref.tsv (createtsv pref); seqC seqB 5 0; seqC seqB 5 0. In the pref_rescore1.index file (pref_rescore1.1 - pref_rescore1.16 are in binary format, and I wasn't sure if that is the one you are referring to), I only see two rows that contain seqA and seqB. seqA seqA 100 0; seqB seqB 100 0. After the pipeline finishes, all three sequences seqA-C end up being separate clusters. Also, I'm using 10000 unique sequences in the input, so should one expect 10000-choose-2 pairs in the pref database? The total number of rows in the pref database is 69737, which is 0.13% of the total number of pairs. I had run linclust with these parameters in this run-; -e 1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 100 --kmer-per-seq-scale 0 -k 15 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16 --remove-tmp-files 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541
https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541:23,Usability,guid,guiding,23,"Hi Ann,. Thank you for guiding me so far. I did a bit of digging around in the temporary files. I'll call the two close sequences with one mismatch between them seqA and seqB. What I found was that they were both found within a larger cluster in the pref database with seqC (cluster head). seqC is about 20% different to both seqA and seqB, but their ungapped alignment scores may not reflect that. In the pref.tsv (createtsv pref); seqC seqB 5 0; seqC seqB 5 0. In the pref_rescore1.index file (pref_rescore1.1 - pref_rescore1.16 are in binary format, and I wasn't sure if that is the one you are referring to), I only see two rows that contain seqA and seqB. seqA seqA 100 0; seqB seqB 100 0. After the pipeline finishes, all three sequences seqA-C end up being separate clusters. Also, I'm using 10000 unique sequences in the input, so should one expect 10000-choose-2 pairs in the pref database? The total number of rows in the pref database is 69737, which is 0.13% of the total number of pairs. I had run linclust with these parameters in this run-; -e 1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 100 --kmer-per-seq-scale 0 -k 15 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16 --remove-tmp-files 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:573,Availability,down,downloader,573,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:462,Deployability,upgrade,upgrade,462,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:492,Deployability,release,release,492,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:519,Deployability,release,release,519,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922871865:273,Deployability,install,install,273,"We noticed one thing with the `awk` based script: Some linux distributions ship `mawk` as the default awk, which is generally very fast, but seems to be a lot slower for the purpose of joining two files (we use it for that purpose in the `createtaxdb` workflow). . You can install `gawk` and switch Ubuntu to use that by default with something like this: https://askubuntu.com/a/561626; `gawk` seems to be much much faster for this purpose.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922871865
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460:340,Availability,error,error,340,"Thank you for the answer!. I tried this command (so because I already have this prepared DB). ```; mmseqs nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6 ; nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6; ```. But I catched the error . ```; MMseqs Version: 13.45111; Threads 6; Verbosity 3. Loading NCBI taxonomy1ms; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```. And now I am trying this one :D . `mmseqs databases NR NR_tax_mmseqs tmp`. For now last databases module works, hope, everything will be alright!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460:403,Performance,Load,Loading,403,"Thank you for the answer!. I tried this command (so because I already have this prepared DB). ```; mmseqs nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6 ; nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6; ```. But I catched the error . ```; MMseqs Version: 13.45111; Threads 6; Verbosity 3. Loading NCBI taxonomy1ms; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```. And now I am trying this one :D . `mmseqs databases NR NR_tax_mmseqs tmp`. For now last databases module works, hope, everything will be alright!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297:279,Deployability,integrat,integrate,279,"`nrtotaxmapping` is slightly weird as it already requires the NCBI taxdb files to be present.; In the `databases` workflow, I create an empty `_mapping` file first, so `createtaxdb` will not try to create one, then call `createtaxdb` and then finally `nrtotaxmapping`. I have to integrate `nrtotaxmapping` into `createtaxdb` eventually to clean this up I guess.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297
https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297:279,Integrability,integrat,integrate,279,"`nrtotaxmapping` is slightly weird as it already requires the NCBI taxdb files to be present.; In the `databases` workflow, I create an empty `_mapping` file first, so `createtaxdb` will not try to create one, then call `createtaxdb` and then finally `nrtotaxmapping`. I have to integrate `nrtotaxmapping` into `createtaxdb` eventually to clean this up I guess.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297
https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307:192,Availability,error,error,192,"Hi, Did you find a solution for this? I am after a similar output as I am keen for more taxnomy information and looking to filter the results based a on a taxID. However I am getting the same error as well. Any suggestions would be appreciated. ```; mmseqs convertalis T25_hifi_norm $NR_DB T25_hifi_norm_results test; convertalis T25_hifi_norm ncbi_nr T25_hifi_norm_results test. MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	4; Compressed 	0; Verbosity 	3. Input database ""T25_hifi_norm_results"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307
https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307:312,Testability,test,test,312,"Hi, Did you find a solution for this? I am after a similar output as I am keen for more taxnomy information and looking to filter the results based a on a taxID. However I am getting the same error as well. Any suggestions would be appreciated. ```; mmseqs convertalis T25_hifi_norm $NR_DB T25_hifi_norm_results test; convertalis T25_hifi_norm ncbi_nr T25_hifi_norm_results test. MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	4; Compressed 	0; Verbosity 	3. Input database ""T25_hifi_norm_results"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307
https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307:374,Testability,test,test,374,"Hi, Did you find a solution for this? I am after a similar output as I am keen for more taxnomy information and looking to filter the results based a on a taxID. However I am getting the same error as well. Any suggestions would be appreciated. ```; mmseqs convertalis T25_hifi_norm $NR_DB T25_hifi_norm_results test; convertalis T25_hifi_norm ncbi_nr T25_hifi_norm_results test. MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	4; Compressed 	0; Verbosity 	3. Input database ""T25_hifi_norm_results"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307
https://github.com/soedinglab/MMseqs2/issues/492#issuecomment-935634337:362,Availability,error,error,362,"> @juliacpowell1999 Yes you can get the target sequences by adding `tseq` to the `--format-output` options. For example:; > ; > ```; > easy-search query target result tmp --format-output query,target,tseq; > ```. Thank you! I now need to convert those sequences in the file to fasta format, how would I do that. I tried to using the convert2fasta command but an error keeps occuring because the file does not contain header information.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/492#issuecomment-935634337
https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939160321:188,Security,access,access,188,"This is quite confusing. For whatever reason your system's `tar` doesn't use the default `--wildcards` option. It seems to be having `--no-wildcards` set as the default mode. I don't have access to RHEL, but in the centos 7.9 docker image this doesn't seem to happen. You can probably get around this issue by doing:. ```; TAR_OPTIONS=""--wildcards"" mmseqs databases Resfinder db/rf tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939160321
https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426:247,Deployability,install,install,247,"Ah, ok that actually does make sense. It's not using the OS tar because I was running it through a singularity container. So I'm guessing whatever tar was built into the container had the issue. I tried the standard command again but with a conda install of mmseqs2 and it worked fine. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426
https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852:137,Availability,down,downloaded,137,It is. The container was created by the [BioContainers](biocontainers.pro) people. Although I can never get their registry to load. So I downloaded it from quay.io using this link: https://quay.io/repository/biocontainers/mmseqs2?tab=tags,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852
https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852:126,Performance,load,load,126,It is. The container was created by the [BioContainers](biocontainers.pro) people. Although I can never get their registry to load. So I downloaded it from quay.io using this link: https://quay.io/repository/biocontainers/mmseqs2?tab=tags,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852
https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444:217,Deployability,update,update,217,"> MMseqs2 has a limitation to databases of at most ~4 billion sequences (`UINT_MAX`). You have to cluster in multiple splits. @martin-steinegger should be able to help with an example. Hi, sorry for bothering but any update on this?. For now I am splitting the protein into multiple fasta, each containing at most 2billion sequences. I will then use the clusthash and linclust on each split. Finally, some tools like mergedb will be used and do a further clusterhash/linclust. I am wondering whether this is the correct way to do since I cannot find related information in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444
https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191:13,Deployability,update,update,13,Is there any update on this? Suggestions for creating a mmseqs2 database of this size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191
https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957913344:84,Energy Efficiency,allocate,allocate,84,`--max-seq-length` decides what that maximum internal sequence length is and how we allocate memory for various sequences. . I guess you want something like the opposite to `--min-aln-len` to reject all alignments (and therefore cluster members) that are too long?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957913344
https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957982550:5,Usability,simpl,simpler,5,"Much simpler I think. I just wanted to make sure that my very long sequences (2e4 - 2e9 nts) are clustered completely and that `mmseqs linclust` doesn't remove very long sequences. The `--max-seq-length` makes it seem like it would throw out any sequence longer than that which would be the majority in my case, but it looks like this is not the case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957982550
https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-958004895:128,Energy Efficiency,allocate,allocate,128,"We changed the majority of the MMseqs2 modules to take `--max-seq-len` to be the starting amount of memory and to progressively allocate more memory if needed. Dealing with long nucleotide sequences is still something where we plan on investing a lot more development time, however it should mostly work at the moment. Not really sure how well it will deal with sequences around your upper bound though. It might start to use excessive amounts of RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-958004895
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507:249,Availability,down,downloaded,249,"Thank you so much for your help!. I have tried adding `--alignment-mode 3`, but I am still strangely getting 0% sequence identity for *all* pairwise comparisons. Please find below the exact steps I'm following:. Using the ""examples"" folder that was downloaded during the mmseqs installation process:. ```; mmseqs createdb examples/QUERY.fasta queryDB; mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8 --alignment-mode 3. mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3; mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv; ```. Then in the output file `queryDB_alnall_newid.tsv`, I observe the following. I copied below the first few lines of the file. I believe v5 is sequence identity and everything is zero in that column:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, sans-serif;; 	mso-font-charset:0;; 	mso-number-format:General;; 	text-align:general;; 	verti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507:278,Deployability,install,installation,278,"Thank you so much for your help!. I have tried adding `--alignment-mode 3`, but I am still strangely getting 0% sequence identity for *all* pairwise comparisons. Please find below the exact steps I'm following:. Using the ""examples"" folder that was downloaded during the mmseqs installation process:. ```; mmseqs createdb examples/QUERY.fasta queryDB; mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8 --alignment-mode 3. mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3; mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv; ```. Then in the output file `queryDB_alnall_newid.tsv`, I observe the following. I copied below the first few lines of the file. I believe v5 is sequence identity and everything is zero in that column:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, sans-serif;; 	mso-font-charset:0;; 	mso-number-format:General;; 	text-align:general;; 	verti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:419,Availability,down,downloaded,419,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:514,Availability,down,download,514,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:203,Deployability,install,installation,203,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:223,Deployability,install,install,223,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:272,Deployability,update,update,272,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:572,Deployability,update,updated,572,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:337,Usability,guid,guide,337,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965828792:126,Deployability,release,release,126,running `mmseqs version` should return either a version number or a git commit. I tried running your commands with the latest release (`13.45111`) and with the latest git commit and both seem to work.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965828792
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:151,Availability,down,downloaded,151,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:220,Availability,down,downloaded,220,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:30,Integrability,message,message,30,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:76,Availability,down,download,76,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:111,Deployability,release,release,111,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:145,Deployability,release,releases,145,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444
https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-988254027:99,Availability,down,downloading,99,Hi Milot -- thank you so much for your help a few weeks ago. I just wanted to let you know that re-downloading MMSeqs2 helped fix this issue. Thanks again for your quick and detailed replies!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-988254027
https://github.com/soedinglab/MMseqs2/issues/505#issuecomment-1696163593:85,Availability,down,downstream,85,"I'd love to see this option also, particularly in Foldseek (which I guess is somehow downstream of MMseqs2?).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/505#issuecomment-1696163593
https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623:609,Integrability,rout,routine,609,Sorry for bothering again. I thought that in order to provide a reproducible example here are more details: ; I assembled a genome with shovill like this ` shovill --outdir assembly --R1 SRR4213076_1.fastq.gz --R2 SRR4213076_2.fastq.gz`; [Here are the fastq files](https://www.ebi.ac.uk/ena/browser/view/SRR4213076?show=reads); I used prokka to annotate this genome and used 2 toy examples with just 3 sequences. ; [Here are the assembly and the genome.faa genome.fna files [just 3 sequences in each file]; ](https://drive.google.com/drive/folders/1iaLnhPWb859QnTMO-ZwSgHwm_J-mPiuQ?usp=sharing). I tried this routine either using nucleotides or amino acids. . ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # mmmseqs createdb genome.ffn collection_db # alternatively using nucleotides; mseqs cluster collection_db collection_clu TemPoral; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map tempora --threads 7; mmseqs convertalis sample_db collection_db sample_map result.tsv; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. This works fine with amino acids but [as shown in the log included in the post above] it doesn't work when using directly nucleotides or the ffn file. I chose MMseqs2 due to its speed and the scale of the task in our case. I thought it would be better to build the catalog of genes with nucleotides so for the search I though searching nuc against nuc. Can you help me with this? Thanks in advance,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623
https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623:1270,Testability,log,log,1270,Sorry for bothering again. I thought that in order to provide a reproducible example here are more details: ; I assembled a genome with shovill like this ` shovill --outdir assembly --R1 SRR4213076_1.fastq.gz --R2 SRR4213076_2.fastq.gz`; [Here are the fastq files](https://www.ebi.ac.uk/ena/browser/view/SRR4213076?show=reads); I used prokka to annotate this genome and used 2 toy examples with just 3 sequences. ; [Here are the assembly and the genome.faa genome.fna files [just 3 sequences in each file]; ](https://drive.google.com/drive/folders/1iaLnhPWb859QnTMO-ZwSgHwm_J-mPiuQ?usp=sharing). I tried this routine either using nucleotides or amino acids. . ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # mmmseqs createdb genome.ffn collection_db # alternatively using nucleotides; mseqs cluster collection_db collection_clu TemPoral; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map tempora --threads 7; mmseqs convertalis sample_db collection_db sample_map result.tsv; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. This works fine with amino acids but [as shown in the log included in the post above] it doesn't work when using directly nucleotides or the ffn file. I chose MMseqs2 due to its speed and the scale of the task in our case. I thought it would be better to build the catalog of genes with nucleotides so for the search I though searching nuc against nuc. Can you help me with this? Thanks in advance,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623
https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-981968527:623,Safety,predict,predictions,623,"Dear all I think I fixed the strategy I was trying... . After looking at older issues I tried the following:. ```; mmseqs createdb genome.ffn ./NUC/collection_db --dbtype 2; mmseqs cluster --threads 7 ./NUC/collection_db ./NUC/collection_clu XOXO; mmseqs createsubdb ./NUC/collection_clu.index ./NUC/collection_db ./NUC/collection_rep; mmseqs createindex ./NUC/collection_rep xxxxx --search-type 3 # this is the addition I made; mmseqs map sample_db ./NUC/collection_rep ./NUC/mapped XXX --threads 7; mmseqs convertalis sample_db ./NUC/collection_db ./NUC/mapped nuc_results.tsv; ```. Looking at the results for 2 proteins/predictions the number of hits seem similar. Best,. Andrés",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-981968527
https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:83,Availability,error,error,83,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499
https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:352,Deployability,release,release,352,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499
https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:89,Integrability,message,message,89,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499
https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-1214164321:27,Availability,error,error,27,I am encountering the same error that @blauemond described (using MMseqs2 Version: 13.45111). Is there a solution?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-1214164321
https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:161,Availability,error,error,161,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087
https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:464,Availability,error,error,464,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087
https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:32,Integrability,wrap,wrapped-scoring,32,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087
https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:167,Integrability,message,message,167,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087
https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:470,Integrability,message,message,470,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087
https://github.com/soedinglab/MMseqs2/issues/511#issuecomment-987022755:27,Deployability,release,release,27,"This is a small bug in the release, which only occurs with sequences smaller than alphabet size, it is already fixed in the current github version. The relevant commit is c7f6a37",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511#issuecomment-987022755
https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755:165,Performance,perform,perform,165,"They function and mean the same in nucleotide space. . > On Dec 9, 2021, at 18:59, Florian Plaza Oñate ***@***.***> wrote:; > ; > ﻿; > Hello,; > ; > I would like to perform clustering of a large nucleotide sequence with the easy-clust .; > However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation.; > ; > Thanks,; > Florian; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755
https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755:259,Usability,clear,clear,259,"They function and mean the same in nucleotide space. . > On Dec 9, 2021, at 18:59, Florian Plaza Oñate ***@***.***> wrote:; > ; > ﻿; > Hello,; > ; > I would like to perform clustering of a large nucleotide sequence with the easy-clust .; > However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation.; > ; > Thanks,; > Florian; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755
https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180:88,Availability,down,download,88,You should be able to just call:; ```; mmseqs databases GTDB gtdb tmp; ```. And it will download and setup the latest release for you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180
https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180:118,Deployability,release,release,118,You should be able to just call:; ```; mmseqs databases GTDB gtdb tmp; ```. And it will download and setup the latest release for you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180
https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990857136:521,Deployability,release,release,521,"You can copy the steps we do in the `databases` workflow to create this database in this file:; https://github.com/soedinglab/MMseqs2/blob/13-45111/data/workflow/databases.sh; Look for the `""GTDB""` string. The easier solution is probably to just create the gtdb with the command I mentioned, then look up all genomes you don't want in the `_names.dmp` file we create. And remove them with:; ```; mmseqs filtertaxseqdb gtdb gtdb_subset --taxon-list ""!first_id&&!second_id&&....""; ```. This should work well for the latest release (13), however we changes some things in git mmseqs (names.dmp is not created by default anymore) so will be harder there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990857136
https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876:25,Availability,down,downloads,25,The `databases` workflow downloads this file:; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876
https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876:91,Deployability,release,releases,91,The `databases` workflow downloads this file:; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676:20,Performance,load,load-mode,20,"I changed the `--db-load-mode` from `2` to `3`, and the performance improves a lot. ; Where can I find the documentation on the option ``--db-load-mode`? Just want to understand this better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676:56,Performance,perform,performance,56,"I changed the `--db-load-mode` from `2` to `3`, and the performance improves a lot. ; Where can I find the documentation on the option ``--db-load-mode`? Just want to understand this better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676:142,Performance,load,load-mode,142,"I changed the `--db-load-mode` from `2` to `3`, and the performance improves a lot. ; Where can I find the documentation on the option ``--db-load-mode`? Just want to understand this better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027:115,Performance,load,load-mode,115,"I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf).; Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027:161,Performance,load,load-mode,161,"I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf).; Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027:26,Usability,Guid,Guide,26,"I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf).; Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055:174,Performance,load,load-mode,174,"I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?. Any anwser would be helpful! Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055:221,Safety,detect,detect,221,"I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?. Any anwser would be helpful! Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:116,Performance,load,load-mode,116,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:162,Performance,load,load-mode,162,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:349,Performance,load,load-mode,349,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:390,Performance,load,load-mode,390,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:28,Usability,Guid,Guide,28,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:176,Performance,load,load-mode,176,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:316,Performance,load,load-mode,316,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:359,Performance,load,load-mode,359,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910
https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:223,Safety,detect,detect,223,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910
https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235:163,Availability,down,download,163,We currently do not support BLAST database input into MMseqs2. You would need to first generate a database with fasta or just use our `mmseqs database` command to download databases from a preset.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:600,Deployability,update,update,600,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:71,Safety,predict,predictions,71,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:446,Safety,predict,predict,446,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:575,Safety,predict,predictions,575,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1087105101:510,Availability,error,error,510,"Hi Martin....the help files for colabfold_search says ""query doesn't support complexes yet"". colabfold_search works perfectly for me with a single sequence or a list of sequences. However when I try to run colabfold_search with a complex i.e.; `>trastuzumab; DIQMTQSPSSLSASVGDRVTITCRASQDVNTAVAWYQQKPGKAPKLLIYSASFLYSGVPSRFSGSRSGTDFTLTISSLQPEDFATYYCQQHYTTPPTFGQGTKVEIK:EVQLVESGGGLVQPGGSLRLSCAASGFNIKDTYIHWVRQAPGKGLEWVARIYPTNGYTRYADSVKGRFTISADTSKNTAYLQMNSLRAEDTAVYYCSRWGGDGFYAMDYWGQGTLVTVSS`; I get the Traceback error:; ``..../site-packages/colabfold/mmseqs/search.py, line 472 in; with args.base.joinpath(f""{id.paried.a3m"").open(""r"") as f:``. and then ; `FileNotFoundError: [Errno2] No such file or directory: 'msas/1.paired.a3m'`. can you help me to understand whether or not colab_search can take multimers as input and whether or not I am doing something incorrectly? Thanks!. Drew",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1087105101
https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1088796634:138,Performance,multi-thread,multi-threading,138,Commit https://github.com/soedinglab/MMseqs2/commit/407b315e7edcbc9eb73527b904172e603095494e should fix the complex issues. It was due to multi-threading.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1088796634
https://github.com/soedinglab/MMseqs2/issues/522#issuecomment-1006319042:117,Usability,guid,guide,117,@hochshi the relevant repository for our server is here https://github.com/soedinglab/MMseqs2-App ; Their is a small guide how to set up a server.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/522#issuecomment-1006319042
https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776:11,Performance,optimiz,optimized,11,MMseqs2 is optimized to process multiple queries at once. So it would make sense to package your search into a big fasta file. If you'd like to perform fast single queries against large databases then our [MMseqs2-App](https://github.com/soedinglab/MMseqs2-App) (server) might be a good solution. This keeps the index of the target database in memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776
https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776:144,Performance,perform,perform,144,MMseqs2 is optimized to process multiple queries at once. So it would make sense to package your search into a big fasta file. If you'd like to perform fast single queries against large databases then our [MMseqs2-App](https://github.com/soedinglab/MMseqs2-App) (server) might be a good solution. This keeps the index of the target database in memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776
https://github.com/soedinglab/MMseqs2/issues/524#issuecomment-1027631944:132,Usability,usab,usability,132,"Yes, the TSV file can take quite some space. We often thought about binary based formats but decided to not do this for the sake of usability. The problem with hdf is that it can not be processed in parallel.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/524#issuecomment-1027631944
https://github.com/soedinglab/MMseqs2/issues/527#issuecomment-1027632690:29,Performance,load,load,29,We do the second version. We load an index and then process all queries against the split.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527#issuecomment-1027632690
https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605:800,Modifiability,variab,variable,800,"> We also use an SSSE3 instruction in some important place (iirc), so should we also enable that explicitly?. Yes we should probably have a `HAVE_SSE3` option for that as well. > I don't really like it a lot that with this change -DHAVE_AVX2 -DHAVE_ARM8 would be a possible but nonsensical combination. Well yes, but if the user sets nonsensical flags it is not that big of a problem if the outcome is (expected) nonsense. Is there an easy way we can avoid this?. > BTW Debian uses -DNATIVE_ARCH=0 (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules) and compiles multiple SIMD levels and adds a SIMD dispatcher (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/bin/simd-dispatch), if that is in any way useful for you. In Gentoo this is controlled by `CPU_FLAGS_X86` variable at build time. In general we don't use dispatchers for this because there isn't really a point if things are built exactly according to the users set preference. The problem here is that the user preference is not respected because the flags are treated as mutually exclusive.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605
https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605:451,Safety,avoid,avoid,451,"> We also use an SSSE3 instruction in some important place (iirc), so should we also enable that explicitly?. Yes we should probably have a `HAVE_SSE3` option for that as well. > I don't really like it a lot that with this change -DHAVE_AVX2 -DHAVE_ARM8 would be a possible but nonsensical combination. Well yes, but if the user sets nonsensical flags it is not that big of a problem if the outcome is (expected) nonsense. Is there an easy way we can avoid this?. > BTW Debian uses -DNATIVE_ARCH=0 (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules) and compiles multiple SIMD levels and adds a SIMD dispatcher (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/bin/simd-dispatch), if that is in any way useful for you. In Gentoo this is controlled by `CPU_FLAGS_X86` variable at build time. In general we don't use dispatchers for this because there isn't really a point if things are built exactly according to the users set preference. The problem here is that the user preference is not respected because the flags are treated as mutually exclusive.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605
https://github.com/soedinglab/MMseqs2/issues/535#issuecomment-1040718776:134,Availability,error,error,134,"Hello Milot, thanks for your prompt reply. . I did try removing the suffix from the call when I received the traceback but I made the error of also deleting the suffix in the original file, which resulted in the same traceback. Now I kept the suffix in the file and removed the suffix from the call and it worked. Cheers!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/535#issuecomment-1040718776
https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822:16,Integrability,wrap,wrapper,16,"I have found a [wrapper script](https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970) that works in another issue. Alternatively, I also came up with a simple solution:; ```; #!/bin/bash. external-tool <(cat); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822
https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822:171,Usability,simpl,simple,171,"I have found a [wrapper script](https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970) that works in another issue. Alternatively, I also came up with a simple solution:; ```; #!/bin/bash. external-tool <(cat); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822
https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1042419761:55,Integrability,wrap,wrapper,55,"Yes @milot-mirdita , that worked too!. Here's the full wrapper script for handling clusters with single sequences, should anybody else need it:; ```; #!/bin/bash. FILE=$(mktemp); cat /dev/stdin > $FILE. nseq=$( cat $FILE | grep -c '^>'). if [ $nseq -gt 1 ];; then; external-tool $FILE; else; cat $FILE; fi; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1042419761
https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847:0,Deployability,Update,Update,0,"Update, I had just found 13aa length example, which is causing segfault: `TDPPIHIASLXRS`. Observation: after changing `X` to, for example `G` (`TDPPIHIASLGRS`), MMseqs2 will process example correctly. **EDIT**, another segfault example, this time much longer: `DPLVFFKXXFXXGGGGGAGCGGGGMKRT`, (observation, extended version will be processed correctly: `DPLVFFKXXFXXGGGGGAGCGGGGMKRTRRALPAN`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847
https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847:306,Modifiability,extend,extended,306,"Update, I had just found 13aa length example, which is causing segfault: `TDPPIHIASLXRS`. Observation: after changing `X` to, for example `G` (`TDPPIHIASLGRS`), MMseqs2 will process example correctly. **EDIT**, another segfault example, this time much longer: `DPLVFFKXXFXXGGGGGAGCGGGGMKRT`, (observation, extended version will be processed correctly: `DPLVFFKXXFXXGGGGGAGCGGGGMKRTRRALPAN`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847
https://github.com/soedinglab/MMseqs2/issues/539#issuecomment-1058769549:58,Performance,perform,performance,58,I agree with you. especially for the programe in the high performance computer,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539#issuecomment-1058769549
https://github.com/soedinglab/MMseqs2/issues/540#issuecomment-1112883896:56,Energy Efficiency,consumption,consumption,56,Did you try increasing your compute?. `Estimated memory consumption: 79G` with total memory 100GB should ideally work but I think there might be some portion of RAM being devoted to other tasks and that might make the OS terminate it.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540#issuecomment-1112883896
https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411:353,Modifiability,extend,extend,353,"Thanks for the pointer. I did not look at biocontainers before, cool to see that MMseqs2 is on there. As far as I can tell, biocontainer are optimized for application shipping aka. they only include the absolute bare minimum required for that application. In fact the containers built by biocontainer seem to be based on busybox, which makes it hard to extend them. Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. . An easier solution could be to add a Dockerfile recipe to biocontainers which will then build the docker image and push it to dockerhub (at least that is how I interpret it). ; Another potentially easy solution would be to use [github's container registry](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry) to publish containers directly there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411
https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411:141,Performance,optimiz,optimized,141,"Thanks for the pointer. I did not look at biocontainers before, cool to see that MMseqs2 is on there. As far as I can tell, biocontainer are optimized for application shipping aka. they only include the absolute bare minimum required for that application. In fact the containers built by biocontainer seem to be based on busybox, which makes it hard to extend them. Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. . An easier solution could be to add a Dockerfile recipe to biocontainers which will then build the docker image and push it to dockerhub (at least that is how I interpret it). ; Another potentially easy solution would be to use [github's container registry](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry) to publish containers directly there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411
https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1181485012:364,Availability,down,download,364,"> Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. For this use-case I would recommend to download the statically compiled MMseqs2 binaries from [mmseqs.com/latest](https://mmseqs.com/latest) into the Docker container.; See an example here:; https://github.com/soedinglab/MMseqs2-App/blob/master/Dockerfile.backend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1181485012
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:91,Availability,down,download,91,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:134,Availability,down,downloads,134,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:21,Deployability,install,installed,21,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:110,Availability,down,download,110,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:161,Availability,down,downloaded,161,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:370,Availability,down,download,370,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:607,Availability,down,download,607,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:645,Availability,down,downloaded,645,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626:113,Availability,error,errors,113,"> ; Thank you for your repley! I didn't use it initially, but then I noticed this , it still not work ,with some errors. It seems that some files are missing and can't build the database successfully. I should have recorded the error info, it's a pity . Finally I gave in and just use the `createtaxdb` command with the aria2c, it did fastaer than wget (although it's still a long time )",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626
https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626:228,Availability,error,error,228,"> ; Thank you for your repley! I didn't use it initially, but then I noticed this , it still not work ,with some errors. It seems that some files are missing and can't build the database successfully. I should have recorded the error info, it's a pity . Finally I gave in and just use the `createtaxdb` command with the aria2c, it did fastaer than wget (although it's still a long time )",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626
https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337:198,Availability,down,downloader,198,"This feature was meant for turning a bunch of fasta files in form of a DB (e.g., produced by `tar2db`) into a normal MMseqs2 sequence databases. It is being used for this purpose in the `databases` downloader workflow. . If you want to consume sequence dbs and produce new sequence dbs, i would suggest to add a check for the presence of a header db and only then do your new code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337
https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059450778:719,Deployability,release,release,719,"Thanks, Milot!. The new mode is `--pseudo-cnt-mode 1` (context-specific)? And what are the new `--pca` and `--pcb` default values? They are not showing up in the help dialogue. ```; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; ```. My limitation is that this is part of a package that will be distributed in Conda, so I need to be compatible with the MMSeqs2 version that is on Conda. Profile databases created with the latest version will fail if I try to search them with `13-45111`. But I could try to use the new default `--pca` and `--pcb` when creating the profile database with `13-45111`. Do you guys have plans to push a new GitHub/Conda release in the near future?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059450778
https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251:406,Deployability,release,release,406,"Ah that looks like a bug, it should print out the default value. The new values are:; ```; pca = MultiParam<PseudoCounts>(PseudoCounts(1.1, 1.4));; pcb = MultiParam<PseudoCounts>(PseudoCounts(4.1, 5.8));; ```; The first value is `--pseudo-cnt-mode 0` the second one is `--pseudo-cnt-mode 1`. Profile databases with the newer commits won't work anymore with 13 and before. Yes, we are planing to make a new release, but there is a lot going on :/ Hopefully soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251
https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510:319,Deployability,release,releases,319,"Thanks!. So, if I create a profile database in `13-45111` with a command like this:. ```; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 1.1 --pcb 4.1; ```. It should give me a database with the same pseudocounts as the default parameters of the newer releases? I know that there were other changes in the way profile databases work, but I wanted to improve sensitivity and stay compatible with the Conda release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510
https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510:472,Deployability,release,release,472,"Thanks!. So, if I create a profile database in `13-45111` with a command like this:. ```; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 1.1 --pcb 4.1; ```. It should give me a database with the same pseudocounts as the default parameters of the newer releases? I know that there were other changes in the way profile databases work, but I wanted to improve sensitivity and stay compatible with the Conda release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185:97,Availability,error,error,97,"Hi, ; I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error:; **mmseqs createdb ssu.fna ssu130.102.99.4; Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected.; HTTP request sent, awaiting response... 404 Not Found; 2022-04-01 08:59:20 ERROR 404: Not Found.**; ...; ...; **awk -F'\\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" ; awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**. Any help on this will be appreciated",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185:310,Availability,ERROR,ERROR,310,"Hi, ; I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error:; **mmseqs createdb ssu.fna ssu130.102.99.4; Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected.; HTTP request sent, awaiting response... 404 Not Found; 2022-04-01 08:59:20 ERROR 404: Not Found.**; ...; ...; **awk -F'\\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" ; awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**. Any help on this will be appreciated",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:97,Availability,error,error,97,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:306,Availability,ERROR,ERROR,306,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:696,Deployability,release,releases,696,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:273,Availability,error,error,273,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:538,Availability,ERROR,ERROR,538,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:931,Deployability,release,releases,931,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:1000,Deployability,release,releases,1000,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:275,Availability,down,download,275,"Hi Ana,. Thanks for your reply.; Best,; Ming. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""soedinglab/MMseqs2"" ***@***.***&gt;;; 发送时间:&nbsp;2023年8月3日(星期四) 晚上10:21; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [soedinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:628,Availability,error,error,628,"Hi Ana,. Thanks for your reply.; Best,; Ming. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""soedinglab/MMseqs2"" ***@***.***&gt;;; 发送时间:&nbsp;2023年8月3日(星期四) 晚上10:21; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [soedinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:899,Availability,ERROR,ERROR,899,"Hi Ana,. Thanks for your reply.; Best,; Ming. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""soedinglab/MMseqs2"" ***@***.***&gt;;; 发送时间:&nbsp;2023年8月3日(星期四) 晚上10:21; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [soedinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:1314,Deployability,release,releases,1314,"dinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.*** ; --------------------------------------------- ; ; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you commented.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:1383,Deployability,release,releases,1383,"dinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.*** ; --------------------------------------------- ; ; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you commented.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:2216,Integrability,Message,Message,2216,"dinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.*** ; --------------------------------------------- ; ; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you commented.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138:36,Deployability,release,releases,36,"find v89 of ssu.fna in GTDB history releases, url: https://data.ace.uq.edu.au/public/gtdb/data/releases/release89/89.0/ssu_r89.fna. I run the commands in [Create a seqTaxDB for GTDB] and it works. Perhaps as a temporary alternative.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138
https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138:95,Deployability,release,releases,95,"find v89 of ssu.fna in GTDB history releases, url: https://data.ace.uq.edu.au/public/gtdb/data/releases/release89/89.0/ssu_r89.fna. I run the commands in [Create a seqTaxDB for GTDB] and it works. Perhaps as a temporary alternative.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138
https://github.com/soedinglab/MMseqs2/issues/549#issuecomment-1088794708:104,Energy Efficiency,reduce,reduce,104,"Yes, for nucleotide searching/clustering we do not generate similar k-mers. ; For nucleotides you could reduce the k-mer size to increase the sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/549#issuecomment-1088794708
https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086:30,Availability,error,error,30,This sounds like a filesystem error while closing the result file. Could it be possible that the system ran out of space?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086
https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:108,Availability,avail,available,108,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536
https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:275,Availability,avail,available,275,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536
https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:532,Availability,avail,available,532,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536
https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:431,Energy Efficiency,allocate,allocated,431,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536
https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:570,Security,access,accessible,570,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536
https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109:5,Deployability,update,update,5,I'll update #565 when we have a solution.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109
https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933:6,Performance,load,load-mode,6,"`--db-load-mode` won't help in this case. The parameter handles loading of precomputed indices of (search) databases. Normally, we don't use precomputed indices for clustering. Ideally the `tmp` folder should be on a local drive, that's the only optimization you can reasonably do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933
https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933:64,Performance,load,loading,64,"`--db-load-mode` won't help in this case. The parameter handles loading of precomputed indices of (search) databases. Normally, we don't use precomputed indices for clustering. Ideally the `tmp` folder should be on a local drive, that's the only optimization you can reasonably do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933
https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933:246,Performance,optimiz,optimization,246,"`--db-load-mode` won't help in this case. The parameter handles loading of precomputed indices of (search) databases. Normally, we don't use precomputed indices for clustering. Ideally the `tmp` folder should be on a local drive, that's the only optimization you can reasonably do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763:26,Availability,down,down,26,"Same here, has tracked it down to this command:. mmseqs tar2db /localscratch/users/latest/gtdb.tar.gz /localscratch/users/latest/tardb --tar-include faa$. The problem comes with the regular expresion used in the option --tar-include, I cannot find why, but if you set it with the $ at the end, it doesn't works. If you remove it it works but obviously it is going to accept more files than desired. . I have tried with different regular expressions, scaping the $, quoting it, etc... no one works, it seems like the tar2db is silently failing when you use there any regular expression, but works when you use a simple string.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763:611,Usability,simpl,simple,611,"Same here, has tracked it down to this command:. mmseqs tar2db /localscratch/users/latest/gtdb.tar.gz /localscratch/users/latest/tardb --tar-include faa$. The problem comes with the regular expresion used in the option --tar-include, I cannot find why, but if you set it with the $ at the end, it doesn't works. If you remove it it works but obviously it is going to accept more files than desired. . I have tried with different regular expressions, scaping the $, quoting it, etc... no one works, it seems like the tar2db is silently failing when you use there any regular expression, but works when you use a simple string.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:156,Availability,down,download,156,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:283,Availability,down,download,283,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:303,Availability,down,download,303,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:233,Deployability,release,released,233,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:371,Modifiability,variab,variable,371,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836:116,Deployability,update,update,116,"I think I found the issue, its mostly unrelated to the regex itself. . When an entry is skipped, we don't correctly update the data offset for the next tar entry.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161:58,Availability,down,download,58,I have the same problem.; ## Expected Behavior; I want to download and use the GTDB database with ; ``` ; mkdir databases; mmseqs databases GTDB databases/gtdb databases/tmp_gtdb; ```; ## Current Behavior; The process is killed and the output remains empty.; ``` ; total 12K; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb_h.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.source; drwxr-xr-x 3 user user 4.0K Aug 4 13:37 tmp_gtdb; ``` ; ## MMseqs Output (for bugs); '''; Create directory databases/tmp_gtdb; databases GTDB databases/gtdb databases/tmp_gtdb . MMseqs Version: 13.45111; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 32; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 30 100 30 0 0 21 0 0:00:01 0:00:01 --:--:-- 21; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 40.2G 100 40.2G 0 0 6909k 0 1:41:44 1:41:44 --:--:-- 5539k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4473k 0 0:00:09 0:00:09 --:--:-- 8160k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 334 100 334 0 0 190 0 0:00:01 0:00:01 --:--:-- 190; tar2db databases/tmp_gtdb/14203905869062371748/gtdb.tar.gz databases/tmp_gtdb/14203905869062371748/tardb --tar-include faa$ --threads 32 -v 3 . Time for merging to tardb: 0h 0m 0s 1ms; Time for merging to tardb.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 36ms; createdb databases/tmp_gtdb/14203905869062371748/tardb databases/gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 2ms; Time f,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161:2223,Availability,Error,Error,2223,; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb_h.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.source; drwxr-xr-x 3 user user 4.0K Aug 4 13:37 tmp_gtdb; ``` ; ## MMseqs Output (for bugs); '''; Create directory databases/tmp_gtdb; databases GTDB databases/gtdb databases/tmp_gtdb . MMseqs Version: 13.45111; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 32; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 30 100 30 0 0 21 0 0:00:01 0:00:01 --:--:-- 21; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 40.2G 100 40.2G 0 0 6909k 0 1:41:44 1:41:44 --:--:-- 5539k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4473k 0 0:00:09 0:00:09 --:--:-- 8160k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 334 100 334 0 0 190 0 0:00:01 0:00:01 --:--:-- 190; tar2db databases/tmp_gtdb/14203905869062371748/gtdb.tar.gz databases/tmp_gtdb/14203905869062371748/tardb --tar-include faa$ --threads 32 -v 3 . Time for merging to tardb: 0h 0m 0s 1ms; Time for merging to tardb.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 36ms; createdb databases/tmp_gtdb/14203905869062371748/tardb databases/gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 2ms; Time for merging to gtdb: 0h 0m 0s 1ms; Database type: Nucleotide; The input files have no entry: - databases/tmp_gtdb/14203905869062371748/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; '''. ## Your Environment; - Debian 11 Bullseye ; - 32 vCPU; - 212992 MiB,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952:7,Availability,down,download,7,Please download the latest precompiled static binaries from https://mmseqs.com/latest. GTDB download should work with these,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952:92,Availability,down,download,92,Please download the latest precompiled static binaries from https://mmseqs.com/latest. GTDB download should work with these,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:19,Availability,avail,available,19,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:43,Deployability,release,release,43,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:90,Deployability,release,releases,90,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694:96,Availability,down,downloaded,96,"Hi, it still can't work with mmseqs2 version 14.7e284. Additionally, the VERSION file cannot be downloaded successfully. It can be downloaded manually, suggesting the internet should be fine.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694:131,Availability,down,downloaded,131,"Hi, it still can't work with mmseqs2 version 14.7e284. Additionally, the VERSION file cannot be downloaded successfully. It can be downloaded manually, suggesting the internet should be fine.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694
https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1869252421:34,Deployability,release,release,34,This should work again in MMseqs2 release 15. Please open a new issue if its failing.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1869252421
https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:24,Availability,error,error,24,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484
https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:4,Integrability,protocol,protocol,4,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484
https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:178,Integrability,protocol,protocol,178,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484
https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596:247,Availability,mask,masking,247,"MMseqs2 default k-mer sizes and spaced-k-mer patterns are too long to match such short sequences. . Using a shorter k-mer size and pattern should enable you to match them:; ```; -k 5 --spaced-kmer-pattern 110111; ```. I would additionally disable masking and compositional bias filtering, as this is not really a homology search anymore and doesn't benefit from false positive suppression:; ```; --mask 0 --comp-bias-corr 0; ```. In the same vain, you might not want to generate similar k-mers at all and only do exact matching:; ```; --exact-kmer-matching 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596
https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596:398,Availability,mask,mask,398,"MMseqs2 default k-mer sizes and spaced-k-mer patterns are too long to match such short sequences. . Using a shorter k-mer size and pattern should enable you to match them:; ```; -k 5 --spaced-kmer-pattern 110111; ```. I would additionally disable masking and compositional bias filtering, as this is not really a homology search anymore and doesn't benefit from false positive suppression:; ```; --mask 0 --comp-bias-corr 0; ```. In the same vain, you might not want to generate similar k-mers at all and only do exact matching:; ```; --exact-kmer-matching 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596
https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206:236,Availability,recover,recover,236,"The positions refer to the original sequences, in this case the query positions refer to nucleotide positions and the target positions refer to amino acid positions. The alignment happens on the amino-acid level, after the alignment we recover the original positions with the `offsetalignment` module within the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206
https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206:236,Safety,recover,recover,236,"The positions refer to the original sequences, in this case the query positions refer to nucleotide positions and the target positions refer to amino acid positions. The alignment happens on the amino-acid level, after the alignment we recover the original positions with the `offsetalignment` module within the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:309,Availability,avail,available,309,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:84,Deployability,release,release,84,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:247,Deployability,release,release,247,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968:19,Availability,avail,available,19,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968:43,Deployability,release,release,43,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968
https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968:90,Deployability,release,releases,90,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1277797968
https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:21,Deployability,install,install,21,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178
https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:136,Deployability,install,install,136,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178
https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:149,Deployability,install,install,149,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178
https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:245,Performance,perform,performance,245,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178
https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:84,Usability,guid,guide,84,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178
https://github.com/soedinglab/MMseqs2/issues/577#issuecomment-1184027710:59,Performance,optimiz,optimization,59,The `--orf-filter 0` parameter disabled an important speed optimization. With the parameter enabled it should run quite a bit faster.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577#issuecomment-1184027710
https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191364958:731,Modifiability,variab,variable,731,"This is the expected output. MMseqs2 creates one output file for each thread and skips the merging step if its not 100% required, since merging can be quite slow. You can just call `convertalis` on the basename and it will work as expected:; ```; mmseqs convertalis /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db output.m8; ```. If you really want MMseqs2 to create a merged database you can set the `MMSEQS_FORCE_MERGE=1` environment variable. Though I would generally not recommend to do that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191364958
https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570:540,Availability,error,error,540,"Thanks for the reply. I ran this command: . `mmseqs convertalis /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/output.m8`. But received this error:. Input database ""/Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db"" has the wrong type (Generic); Allowed input: Alignment. Does this mean there was an issue with the `mmseqs search` command from the step before?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570
https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319:173,Availability,Error,Error,173,Sure-; Command:; `head -n 1 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db*`. Output:; `head: Error reading /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db`. Command: ; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype`. Output:; `xxd: /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype: No such file or directory`. So I modified the command (was missing a file name):; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db/mmseqs2_B001_result_db.dbtype`. Output:; `00000000: 0500 0000 ....`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319
https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818:67,Performance,perform,performing,67,"Good morning Milot. Thanks a lot for your response. I got pssms by performing the following command:; - ls -l; rw-r--r-- 1 1693345 Jul 28 09:24 out.mm_msa; rw-r--r-- 1 4 Jul 28 09:24 out.mm_msa.dbtype; rw-r--r-- 1 29 Jul 28 09:24 out.mm_msa.index. - mmseqs msa2profile out.mm_msa prof; - mmseqs profile2pssm prof pssm. It's extremely fast. The pssm format is as follows:; Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	S	5	-1	-2	-3	0	-1	-2	-2	-2	-3	-1	-1	-1	-3	-1	6	0	0	-2	-1; 1	L	0	-1	-2	-3	0	-2	-1	-2	-2	4	8	-1	-1	-3	-2	-2	-1	0	-2	-1; 2	E	1	-1	0	4	0	1	-2	-2	2	-3	-1	2	-1	-2	-2	0	-4	-1	-2	-1. Are the numbers log-values? I have to have them normalized between 0 and 1. Any hint is welcome. Kind regards,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818
https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818:614,Testability,log,log-values,614,"Good morning Milot. Thanks a lot for your response. I got pssms by performing the following command:; - ls -l; rw-r--r-- 1 1693345 Jul 28 09:24 out.mm_msa; rw-r--r-- 1 4 Jul 28 09:24 out.mm_msa.dbtype; rw-r--r-- 1 29 Jul 28 09:24 out.mm_msa.index. - mmseqs msa2profile out.mm_msa prof; - mmseqs profile2pssm prof pssm. It's extremely fast. The pssm format is as follows:; Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	S	5	-1	-2	-3	0	-1	-2	-2	-2	-3	-1	-1	-1	-3	-1	6	0	0	-2	-1; 1	L	0	-1	-2	-3	0	-2	-1	-2	-2	4	8	-1	-1	-3	-2	-2	-1	0	-2	-1; 2	E	1	-1	0	4	0	1	-2	-2	2	-3	-1	2	-1	-2	-2	0	-4	-1	-2	-1. Are the numbers log-values? I have to have them normalized between 0 and 1. Any hint is welcome. Kind regards,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818
https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603:68,Deployability,install,installed,68,"> export MMSEQS_FORCE_MERGE=1. It show me the same problem; MMseqs2 installed through conda，and the version is 13.45111; And i have tried run the command:'mmseqs result2msa example_out/mmseqs_files/in.mmdb db/swissprot example_out/mmseqs_files/out.mm_search example_out/mmseqs_files/out.mm_msa':; MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Allow deletions false; Compositional bias 1; MSA format mode 0; Summary prefix cl; Skip query false; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 256; Compressed 0; Verbosity 3. [=================================================================] 100.00% 500 0s 0ms ; [=================================================================] 100.00% 567.48K 0s 244ms ; Time for merging to out.mm_msa_sequence.ffdata: 0h 0m 0s 107ms; [=================================================================] 100.00% 500 0s 2ms ; [=================================================================] 100.00% 567.48K 0s 133ms ; Time for merging to out.mm_msa_header.ffdata: 0h 0m 0s 64ms; Query database size: 500 type: Aminoacid; Target database size: 567483 type: Aminoacid; [=================================================================] 100.00% 500 0s 490ms ; Time for merging to out.mm_msa_ca3m.ffdata: 0h 0m 0s 17ms; Time for processing: 0h 0m 1s 666ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603
https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944:236,Availability,error,error,236,"netsurfp seems to not be really open source, so I can't find exactly whats going wrong. . I found this https://github.com/Eryk96/NetSurfP-3.0/blob/main/nsp2/netsurfp2_dev/preprocessing/mmseqs.py, but it looks somewhat different to your error message. I would recommend to make a fake mmseqs script that fixes the issue for netsurfp:; ```; mv /opt/conda/envs/netsurfp/bin/mmseqs /opt/conda/envs/netsurfp/bin/mmseqs_real; cat << 'HERE' > /opt/conda/envs/netsurfp/bin/mmseqs; #!/bin/sh ; export MMSEQS_FORCE_MERGE=1; mmseqs_real ""${@}""; HERE; chmod +x /opt/conda/envs/netsurfp/bin/mmseqs; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944
https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944:242,Integrability,message,message,242,"netsurfp seems to not be really open source, so I can't find exactly whats going wrong. . I found this https://github.com/Eryk96/NetSurfP-3.0/blob/main/nsp2/netsurfp2_dev/preprocessing/mmseqs.py, but it looks somewhat different to your error message. I would recommend to make a fake mmseqs script that fixes the issue for netsurfp:; ```; mv /opt/conda/envs/netsurfp/bin/mmseqs /opt/conda/envs/netsurfp/bin/mmseqs_real; cat << 'HERE' > /opt/conda/envs/netsurfp/bin/mmseqs; #!/bin/sh ; export MMSEQS_FORCE_MERGE=1; mmseqs_real ""${@}""; HERE; chmod +x /opt/conda/envs/netsurfp/bin/mmseqs; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944
https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1200976095:218,Safety,avoid,avoid,218,"Thank you for the prompt reply!; Ok I see. ; The idea is to run colabfold_search/colabfold_batch with a bunch or proteins at the same time. I've been using the API server but some of my jobs encountered ratelimits. To avoid this issue, I decided to build the databases and search against them locally. Sincerely,; Ilyes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1200976095
https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1201314436:267,Performance,load,load-mode,267,"I wanted to compare the running time of the MSA search against the databases locally and by means of the API server; Thus, I provided to colabfold_search a FASTA file containing two protein sequences.; It has been running for over two hours now with the option `--db-load-mode 3`, while the Colab server managed a time of 45 min. ; Is there any way to process the MSA search as fast as the remote server? . Sincerely,; Ilyes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1201314436
https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129:2165,Availability,fault,fault,2165,"n alnDB_reassign -a --threads 24 --comp-bias-corr 0 -e 9007199254740992; mmseqs convertalis protfamDB protfamDB alnDB_reassign aln_to_clustreps.m8; awk '$4<50{print}' aln_to_clustreps.m8 | sort -nk4,4 | head; ```. ```; 45656_3631 1137799_3214 0.950 20 1 0 79 98 423 442 2.607E-05 51; 45656_3631 217204_6534 0.809 21 4 0 79 99 695 715 1.266E-04 49; 45656_3631 2571105_3757 0.761 21 5 0 79 99 695 715 3.266E-04 48; 45656_3631 668_9026 0.761 21 5 0 79 99 714 734 1.155E-03 46; 489_1270 489_2691 1.000 21 0 0 1 21 1 21 3.857E-05 50; 33968_38 33968_2958 0.833 24 4 0 92 115 128 151 2.956E-04 48; 1550024_4392 1608583_1648 0.720 25 7 0 6 30 7 31 2.660E-04 48; 2527978_7844 2527978_861 0.920 25 2 0 1 25 1 25 1.690E-05 52; 45656_3631 191863_3100 0.880 25 3 0 75 99 282 306 8.777E-08 58; 1128665_3036 709876_1980 0.653 26 9 0 43 68 211 236 2.419E-03 45; ```. For example, in the first row of output above, the alignment length is 20 residues for a query sequence that is 100 residues long. My clustering parameters (-c 0.5 --cov-mode 2) should prevent a target sequence w/ alignment length <50 residues from joining this cluster, right?. On a related note, I noted this line in my clustering output log:; ```; Combining cluster mode 0 in combination with coverage mode 2 can produce wrong results.; Please use --cov-mode 2; ```; And found this comment from a previous issue:; `The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.`; `Originally posted by @martin-steinegger in` https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693. It seems like my choice of parameters is at fault, and that I would probably have clusters that more closely obey the criteria if I used cov-mode 0 and cluster-mode 0 (set cover, query AND target coverage), or cov-mode 1 and cluster-mode 2 (CD-hit-like, target coverage). Am I understanding correctly?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129
https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129:1613,Testability,log,log,1613,"n alnDB_reassign -a --threads 24 --comp-bias-corr 0 -e 9007199254740992; mmseqs convertalis protfamDB protfamDB alnDB_reassign aln_to_clustreps.m8; awk '$4<50{print}' aln_to_clustreps.m8 | sort -nk4,4 | head; ```. ```; 45656_3631 1137799_3214 0.950 20 1 0 79 98 423 442 2.607E-05 51; 45656_3631 217204_6534 0.809 21 4 0 79 99 695 715 1.266E-04 49; 45656_3631 2571105_3757 0.761 21 5 0 79 99 695 715 3.266E-04 48; 45656_3631 668_9026 0.761 21 5 0 79 99 714 734 1.155E-03 46; 489_1270 489_2691 1.000 21 0 0 1 21 1 21 3.857E-05 50; 33968_38 33968_2958 0.833 24 4 0 92 115 128 151 2.956E-04 48; 1550024_4392 1608583_1648 0.720 25 7 0 6 30 7 31 2.660E-04 48; 2527978_7844 2527978_861 0.920 25 2 0 1 25 1 25 1.690E-05 52; 45656_3631 191863_3100 0.880 25 3 0 75 99 282 306 8.777E-08 58; 1128665_3036 709876_1980 0.653 26 9 0 43 68 211 236 2.419E-03 45; ```. For example, in the first row of output above, the alignment length is 20 residues for a query sequence that is 100 residues long. My clustering parameters (-c 0.5 --cov-mode 2) should prevent a target sequence w/ alignment length <50 residues from joining this cluster, right?. On a related note, I noted this line in my clustering output log:; ```; Combining cluster mode 0 in combination with coverage mode 2 can produce wrong results.; Please use --cov-mode 2; ```; And found this comment from a previous issue:; `The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.`; `Originally posted by @martin-steinegger in` https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693. It seems like my choice of parameters is at fault, and that I would probably have clusters that more closely obey the criteria if I used cov-mode 0 and cluster-mode 0 (set cover, query AND target coverage), or cov-mode 1 and cluster-mode 2 (CD-hit-like, target coverage). Am I understanding correctly?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129
https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068:8,Availability,down,download,8,You can download the precompiled static binary that contains the fix (and latest git changes) at https://mmseqs.com/latest in about an hour when all tests pass through successfully.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068
https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068:149,Testability,test,tests,149,You can download the precompiled static binary that contains the fix (and latest git changes) at https://mmseqs.com/latest in about an hour when all tests pass through successfully.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068
https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759:49,Deployability,release,release,49,"@milot-mirdita out of curiosity, any plans for a release in the next while?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759
https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1210227210:539,Performance,load,loading,539,"The server probably ran out of memory. I would recommend to not run `createindex` unless you 100% know you need a precomputed index. ; There are a few use-cases for precomputed indices. There revolve around running very small query sets repeatedly (e.g. a fast server with `--split 1` and forcing the DB to stay in RAM with a tool like vmtouch). For most purposes its faster to compute an index on the fly and not store a precomputed index on disk. On the fly computation is usually not much slower (most of the time probably faster) than loading the precomputed version from disk anyway. If you really want to create the precomputed index, read on here:; The issue is probably that MMseqs2's estimate for how much memory it is allowed to use for the index creation was wrong. You can overwrite the amount of memory with the `--split-memory-limit` parameter. This should be about 70% of total system RAM. Alternatively you can set the number of splits to create directly (`--split N`) though this is more tricky to get right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1210227210
https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244:396,Energy Efficiency,allocate,allocate,396,"Thank you a lot for the explanation! ; I wanna try creating indexes one more time and if it won't work, I'll stick to the option you've mentioned.; So I've tried to run ; `/usr/bin/time -f ""%P %M"" mmseqs createindex mmseqs_database temporary_new --threads 40 --search-type 3 --remove-tmp-files 1 --split-memory-limit 7T` on a server which had enough space, but it gave another mistake: ; Can not allocate entries memory in IndexTable::initMemory; ![image](https://user-images.githubusercontent.com/60808830/184051281-3d9f7bd7-eca4-44a1-99b6-f4ed774e857a.png); While a definitely have enough space:; ![image](https://user-images.githubusercontent.com/60808830/184051600-691a88c7-a736-49e2-b6f1-2c2ca2f4f8f1.png); the index file was only 1.6T afterwards, while estimated memory consumption was 5T.; `-rw-r--r-- 1 chechekinao csb4 778G Aug 8 10:03 mmseqs_database; -rw-r--r-- 1 chechekinao csb4 1.6T Aug 10 20:59 mmseqs_database.idx.0; drwxr-xr-x 3 chechekinao csb4 61 Aug 10 15:09 temporary_new`; What may be the reason for that?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244
https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244:776,Energy Efficiency,consumption,consumption,776,"Thank you a lot for the explanation! ; I wanna try creating indexes one more time and if it won't work, I'll stick to the option you've mentioned.; So I've tried to run ; `/usr/bin/time -f ""%P %M"" mmseqs createindex mmseqs_database temporary_new --threads 40 --search-type 3 --remove-tmp-files 1 --split-memory-limit 7T` on a server which had enough space, but it gave another mistake: ; Can not allocate entries memory in IndexTable::initMemory; ![image](https://user-images.githubusercontent.com/60808830/184051281-3d9f7bd7-eca4-44a1-99b6-f4ed774e857a.png); While a definitely have enough space:; ![image](https://user-images.githubusercontent.com/60808830/184051600-691a88c7-a736-49e2-b6f1-2c2ca2f4f8f1.png); the index file was only 1.6T afterwards, while estimated memory consumption was 5T.; `-rw-r--r-- 1 chechekinao csb4 778G Aug 8 10:03 mmseqs_database; -rw-r--r-- 1 chechekinao csb4 1.6T Aug 10 20:59 mmseqs_database.idx.0; drwxr-xr-x 3 chechekinao csb4 61 Aug 10 15:09 temporary_new`; What may be the reason for that?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244
https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370:50,Safety,detect,detected,50,"What exactly do you need? The MSA or the sequence detected in the uniprot? For the second you can just use the `mmseqs convertalis queryDB db/uniprot resultDB resultDB.m8 --format-output query,target,tseq` here the last value should be the detected target sequence from the uniprot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370
https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370:240,Safety,detect,detected,240,"What exactly do you need? The MSA or the sequence detected in the uniprot? For the second you can just use the `mmseqs convertalis queryDB db/uniprot resultDB resultDB.m8 --format-output query,target,tseq` here the last value should be the detected target sequence from the uniprot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:338,Availability,mask,mask-profile,338,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:1145,Availability,mask,maskSequences,1145,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:1302,Availability,mask,mask,1302,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:680,Modifiability,extend,extend,680,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:638,Performance,load,load-mode,638,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:101,Availability,fault,fault,101,"Recompiled in Debug mode, more details. ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; 319	 foregroundBeg[i] = (b * b2fProbs[i] + f * f2f0) * lrRow[(int)seqPtr[-i-1]];; (gdb) bt; #0 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; #1 0x0000555555a8d845 in tantan::Tantan::calcRepeatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1176,Availability,mask,maskSequences,1176,"pp:319; 319	 foregroundBeg[i] = (b * b2fProbs[i] + f * f2f0) * lrRow[(int)seqPtr[-i-1]];; (gdb) bt; #0 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; #1 0x0000555555a8d845 in tantan::Tantan::calcRepeatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7ffff",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1548,Availability,mask,maskTable,1548,"eatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disk",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1698,Availability,mask,mask,1698,"2704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:203; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1745,Availability,mask,maskProb,1745,"2704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:203; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961
https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1218765170:182,Modifiability,variab,variable,182,Can you try to remove the precomputed index? It seems to have been generated by a different version than the one you use to run. You can also set the MMSEQS_IGNORE_INDEX environment variable to ignore the precomputed index during the run. Would it be possible to upload the query/target set that is crashing?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1218765170
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369:16,Deployability,release,release,16,The most recent release seems quite out of date now. https://github.com/soedinglab/MMseqs2-App for example is using a more recent version which has quite a different API from the most recent release in some places. Being able to easily install a more up to date version with Brew would be very helpful. See soedinglab/MMseqs2-App#61 for example.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369:191,Deployability,release,release,191,The most recent release seems quite out of date now. https://github.com/soedinglab/MMseqs2-App for example is using a more recent version which has quite a different API from the most recent release in some places. Being able to easily install a more up to date version with Brew would be very helpful. See soedinglab/MMseqs2-App#61 for example.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369:236,Deployability,install,install,236,The most recent release seems quite out of date now. https://github.com/soedinglab/MMseqs2-App for example is using a more recent version which has quite a different API from the most recent release in some places. Being able to easily install a more up to date version with Brew would be very helpful. See soedinglab/MMseqs2-App#61 for example.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659:9,Deployability,release,released,9,Done! We released a new version: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659:71,Deployability,release,releases,71,Done! We released a new version: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659
https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1279068430:13,Deployability,install,installing,13,thanks ; I'm installing rigth now on our cluster. regards; Eric,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1279068430
https://github.com/soedinglab/MMseqs2/issues/600#issuecomment-1280541009:123,Availability,error,error,123,"I'm confronting same problem.; I tried **convertalis** and **convert2fasta** for the search result, and both commands make error; _'Database resultDB needs header information'._",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/600#issuecomment-1280541009
https://github.com/soedinglab/MMseqs2/issues/601#issuecomment-1236084956:350,Testability,test,test,350,@ChongLC interesting case. Thank you for the detailed analysis. The issue seems to occur because our default parameters are not sensitive enough to match S6 to S4. Following is a command that clusters the sequences correctly. We should consider using `--exact-kmer-matching 1` as default for high similarities in MMseqs2. ; `mmseqs easy-cluster /tmp/test.fas test_clu tmp -c 1.0 --cov-mode 1 --min-seq-id 1.0 --exact-kmer-matching 1`; Alternative increasing `-s` also works.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601#issuecomment-1236084956
https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862905903:875,Integrability,Message,Message,875,"yes,i use a none slurm 64core machine to run all mmseqs and foldseek procudure later ,by the way,foldseek get same issue for me. 获取 Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; 发件人: Shuxian Zou ***@***.***>; 发送时间: Tuesday, December 19, 2023 7:35:35 PM; 收件人: soedinglab/MMseqs2 ***@***.***>; 抄送: Wangchentong ***@***.***>; Author ***@***.***>; 主题: Re: [soedinglab/MMseqs2] process stuck at rescorediagonal when do cluster (Issue #602). By ""another device"", do you mean a non slurm cluster?. ―; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862597691>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AV22KHFBXRJPMVAYRGW3FP3YKF3YPAVCNFSM6AAAAAAQFZF5I2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRSGU4TONRZGE>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862905903
https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869574155:965,Integrability,Message,Message,965,"I already tried use less threads or more database split num, cant figure out its a memory or thread competition issue, at least these two strategy not work for me. I can provide my machine and user account for you to debug if you wish.; ________________________________; From: Milot Mirdita ***@***.***>; Sent: Tuesday, December 26, 2023 12:40 PM; To: soedinglab/MMseqs2 ***@***.***>; Cc: Wangchentong ***@***.***>; Author ***@***.***>; Subject: Re: [soedinglab/MMseqs2] process stuck at rescorediagonal when do cluster (Issue #602). Can you try to use less threads (--threads 32 or 64) on the same machine?. ―; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869248893>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AV22KHCU6QM2YZCFFOMHCJ3YLJILPAVCNFSM6AAAAAAQFZF5I2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRZGI2DQOBZGM>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869574155
https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808:194,Availability,down,download,194,We now provide containers in the github container registry here:; https://github.com/soedinglab/MMseqs2/pkgs/container/mmseqs2. Maybe these work for you. Alternatively I would recommend to just download the statically compiled binaries into the Docker image (see https://github.com/soedinglab/MMseqs2-App/blob/master/Dockerfile.backend ).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808
https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436:457,Availability,avail,available,457,"Try giving every job an unique tmp folder (e.g., `tmp_${SLURM_JOB_ID}_${SLURM_ARRAY_TASK_ID}`). MMseqs2 also doesn't have a good way to give it a total memory limit, you can approximate a memory limit with `--split-memory-limit`. This should be about 80% of the memory you want MMseqs2 to use (in your case about 40GB, so `--split-memory-limit 40G`). This is relevant if other jobs are running on the same node too, as MMseqs2 will generally try to use all available memory.,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252070551:46,Availability,fault,fault,46,@milot-mirdita I'm running into `segmentation fault` issues when running with 2 Nodes carrying 128 cpus each - total memory == 448G. Further review revealed that i'm running out of memory. Any recommendations on what kind of `reasonable-sized server` you are referring to? Any by 'normal clustering' you mean the `mmseqs cluster`? . I'm trying to reproduce the `cascaded-clustering` approach described here: https://elifesciences.org/articles/67667#bib118. Which might that be?. Thank you!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252070551
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252077861:324,Testability,log,log,324,"Can you try to run it on a single node (without MPI, etc). Issues in MPI support might have gone unnoticed since we switched to 128 core machines. Yes, i mean `mmseqs (easy-)cluster` with normal clustering. That one should also successfully finish eventually on a single of these compute nodes. Can you please post the full log output? Maybe something else went wrong.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252077861
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:859,Deployability,UPDATE,UPDATE,859,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:28,Testability,log,log,28,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:287,Testability,log,log,287,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:370,Testability,log,log,370,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1265026001:0,Deployability,Update,Update,0,Update: Managed to successfully run the clustering using a full `3 TB` node with 112 threads. The SLURM efficiency output is below:; ```; Job ID: 2976046; Cluster: iris; User/Group: sbusi/clusterusers; State: COMPLETED (exit code 0); Nodes: 1; Cores per node: 112; CPU Utilized: 73-15:37:58; CPU Efficiency: 21.99% of 334-22:48:00 core-walltime; Job Wall-clock time: 2-23:46:30; Memory Utilized: 197.78 GB; Memory Efficiency: 6.70% of 2.88 TB; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1265026001
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862:183,Availability,fault,fault,183,"I'm running into a similar issue but with contigs. Samples with even only a handful of contigs larger than ~200,000 bp seem to crash mmseqs easy-clust because of memory (segmentation fault error). similarly getting poor memory efficiency . Job ID: 1002827; Cluster: tinkercliffs; User/Group: clb21565/clb21565; State: FAILED (exit code 1); Nodes: 1; Cores per node: 128; CPU Utilized: 03:00:21; CPU Efficiency: 25.62% of 11:44:00 core-walltime; Job Wall-clock time: 00:05:30; Memory Utilized: 13.43 GB; Memory Efficiency: 5.59% of 240.00 GB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862
https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862:189,Availability,error,error,189,"I'm running into a similar issue but with contigs. Samples with even only a handful of contigs larger than ~200,000 bp seem to crash mmseqs easy-clust because of memory (segmentation fault error). similarly getting poor memory efficiency . Job ID: 1002827; Cluster: tinkercliffs; User/Group: clb21565/clb21565; State: FAILED (exit code 1); Nodes: 1; Cores per node: 128; CPU Utilized: 03:00:21; CPU Efficiency: 25.62% of 11:44:00 core-walltime; Job Wall-clock time: 00:05:30; Memory Utilized: 13.43 GB; Memory Efficiency: 5.59% of 240.00 GB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862
https://github.com/soedinglab/MMseqs2/issues/609#issuecomment-1275786723:36,Testability,log,log,36,Can you please check again that the log file is uploaded?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609#issuecomment-1275786723
https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1261228576:156,Safety,detect,detect,156,"It's a new week and we serve new (RNA) data. Now it's working again for our production data. However, the example above is still broken. Is there some auto-detect step that determine the database type from the provided sequences? The only thing that changed is the sequence file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1261228576
https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1275782810:42,Safety,detect,detection,42,"I think this sequence broke the nucl-prot detection heuristic:; ```; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; ```. MMseqs2 assumes that the unknown residue for nucleotides is `N` and not `X`. The heuristic for differing between the two is as follows:. * check the first 10 sequences if they are all nucleotide sequences; * check every 100th sequence; * check that all of these are at least 90% composed of `ATGCUN`. if all of these are nucleotide sequences, declare the database to be a nucleotide database. You can disable the heuristic and fix the database to be a nucleotide db by passing `--dbtype 2` to `easy-search` (in this case the `search` entry in the `.params` file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1275782810
https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1276522464:35,Safety,detect,detection,35,I think the issue here is that the detection of NA/prot goes wrong at indexing time. So what is also needed is the equivalent to `--dbtype 2` but for indexing.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1276522464
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:214,Safety,sanity check,sanity check,214,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:529,Security,validat,validation,529,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:544,Testability,test,test,544,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259603614:98,Deployability,pipeline,pipeline,98,Sure...; I am uploading the fasta file and the alignment results (produced by the `mmseqs search` pipeline) for sequences of 100% identity. . [https://drive.google.com/file/d/1DgqRHQa7RIgoXONB8kCkPwg07YZubipl/view?usp=sharing](url),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259603614
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:719,Availability,redundant,redundant,719,"I am having the same issue when trying to cluster a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). . I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with `linclust`, so I attempted to cluster de-duplicated sequences from this catalogue with the `easy-cluster` workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:2489,Deployability,Release,Release,2489," is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to 244 representative sequences with average pident of 96%. ## Command to align to representative sequences. ```mmseqs easy-search probe-proteins/probes.faa {cluster_dir}/rep_seq.fasta probes.m8 tmp --min-seq-id 0.9 -c 0.9```. However, the same result was obtained when checking the representative sequences with DIAMOND. Probe proteins are a subset of the assembled proteins from my analysis which mapped to the most original UHGP representative sequences. ## MMseqs2 version used; MMseqs2 Release 14-7e284. ## -. Is there anything else I could do that I am missing to improve these results? Would be grateful for any tips, thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871
https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:719,Safety,redund,redundant,719,"I am having the same issue when trying to cluster a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). . I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with `linclust`, so I attempted to cluster de-duplicated sequences from this catalogue with the `easy-cluster` workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:62,Availability,error,error,62,"I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. (I originally posted this on [Issue 64](https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856) before I realized that that Issue was closed.). ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:914,Availability,mask,mask,914,"I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. (I originally posted this on [Issue 64](https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856) before I realized that that Issue was closed.). ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:923,Availability,mask,mask-prob,923,"I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. (I originally posted this on [Issue 64](https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856) before I realized that that Issue was closed.). ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:939,Availability,mask,mask-lower-case,939,"I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. (I originally posted this on [Issue 64](https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856) before I realized that that Issue was closed.). ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:2371,Availability,mask,mask,2371,"-db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:2380,Availability,mask,mask-prob,2380,"-db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:2396,Availability,mask,mask-lower-case,2396,"fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:3727,Availability,mask,mask-profile,3727,"34761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:6222,Availability,mask,mask-profile,6222,"-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:7180,Availability,mask,mask,7180,"230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:7189,Availability,mask,mask-prob,7189,"230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:7205,Availability,mask,mask-lower-case,7205,"-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:2918,Integrability,wrap,wrapped-scoring,2918,"me/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:4988,Integrability,wrap,wrapped-scoring,4988,"ntext:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/1829200143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:8272,Integrability,wrap,wrapped-scoring,8272,"lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:3385,Modifiability,extend,extend,3385,"k 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:4069,Modifiability,extend,extend,4069,"-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:5455,Modifiability,extend,extend,5455,"4761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:6564,Modifiability,extend,extend,6564,"34761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_202",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:8739,Modifiability,extend,extend,8739,"4761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:1418,Performance,load,load-mode,1418,"y_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:1810,Performance,load,load-mode,1810,"xdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tm",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:2485,Performance,load,load-mode,2485,"fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:3160,Performance,load,load-mode,3160,"mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --ga",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:4027,Performance,load,load-mode,4027,"-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:5230,Performance,load,load-mode,5230,"tractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/182",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:6522,Performance,load,load-mode,6522,"34761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_202",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:7294,Performance,load,load-mode,7294,"-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:8514,Performance,load,load-mode,8514,"tractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:9386,Performance,load,load-mode,9386," 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Compositional bias 1; E-value threshold 1.79769e+308; Seq. id. threshold 0; Coverage threshold 0; Coverage mode 0; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Expand filter clusters 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.95; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Preload mode 2; Compressed 0; Threads 96; Verbosity 3. Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:11324,Performance,load,load-mode,11324,"version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); Traceback (most recent call last):; File ""/home/username/project/colabfold_batch/colabfold-conda/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 444, in main; threads=args.threads,; File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 86, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param). File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('result_query_20230412_142303/qdb'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res_exp'), '--db-load-mode', '2', '--threads', '96', '--expansion-mode', '0', '-e', '1.7976931348623157e+308', '--expand-filter-clusters', '1', '--max-seq-id', '0.95']' returned non-zero exit status 1. ```. `target_DB` is a brand new database; I have not added nor deleted r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:12091,Performance,load,load-mode,12091,"4967295) >= db size (22); Traceback (most recent call last):; File ""/home/username/project/colabfold_batch/colabfold-conda/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 444, in main; threads=args.threads,; File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 86, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param). File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('result_query_20230412_142303/qdb'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res_exp'), '--db-load-mode', '2', '--threads', '96', '--expansion-mode', '0', '-e', '1.7976931348623157e+308', '--expand-filter-clusters', '1', '--max-seq-id', '0.95']' returned non-zero exit status 1. ```. `target_DB` is a brand new database; I have not added nor deleted records after its creation. I am working on Lambda server running Ubuntu:; ```; Linux xyz-lambda02 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```. Please let me know if I can help with debugging. Thank you. And thanks for `mmseqs`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039:15,Availability,error,error,15,"I got the same error but in different place, I ran local colabfold API Server, the error message is . Invalid database read for database data file=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx, database index=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx.index; getData: local id (4294967295) >= db size (22). Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039:83,Availability,error,error,83,"I got the same error but in different place, I ran local colabfold API Server, the error message is . Invalid database read for database data file=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx, database index=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx.index; getData: local id (4294967295) >= db size (22). Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039
https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039:89,Integrability,message,message,89,"I got the same error but in different place, I ran local colabfold API Server, the error message is . Invalid database read for database data file=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx, database index=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx.index; getData: local id (4294967295) >= db size (22). Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039
https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277:39,Performance,optimiz,optimization,39,"I found out whats wrong. It is a speed optimization gone wrong. The tldr is that your input FASTA file should end with a newline. Why this is happening:. When a FASTA file is not in multiline format. E.g.:; ```; >1; A...\NEWLINE; G; ```; and entries are in the single line format (`>1\newlineA...G`) we just symlink the FASTA instead of creating a whole new database (thus potentially saving a lot of disk space for large input`). Without this optimization we always ensure that there is a new line character at the end of every sequence. Now we skipped it and break some other assumptions in the code. We'll try to figure out some fix, until then please make sure that your files end with a newline or call `easy-cluster` with `--createdb-mode 0`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277
https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277:444,Performance,optimiz,optimization,444,"I found out whats wrong. It is a speed optimization gone wrong. The tldr is that your input FASTA file should end with a newline. Why this is happening:. When a FASTA file is not in multiline format. E.g.:; ```; >1; A...\NEWLINE; G; ```; and entries are in the single line format (`>1\newlineA...G`) we just symlink the FASTA instead of creating a whole new database (thus potentially saving a lot of disk space for large input`). Without this optimization we always ensure that there is a new line character at the end of every sequence. Now we skipped it and break some other assumptions in the code. We'll try to figure out some fix, until then please make sure that your files end with a newline or call `easy-cluster` with `--createdb-mode 0`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277
https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1277877901:30,Deployability,release,release,30,Should be fixed in the newest release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1277877901
https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520:2,Deployability,update,updated,2,I updated the scripts on how to setup the template server in the colabfold repository https://github.com/sokrypton/ColabFold/tree/main/MsaServer.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520
https://github.com/soedinglab/MMseqs2/issues/622#issuecomment-1281772629:141,Security,access,accessions,141,I submitted a fix to the ResFinder team here:; https://bitbucket.org/genomicepidemiology/resfinder_db/pull-requests/9. MMseqs2 assumes FASTA accessions start directly after the `>` without any whitespace.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622#issuecomment-1281772629
https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735:175,Availability,down,download,175,"Hi George,. I think the issue is that the internal MMseqs2 profile format has changed, the phrogs database needs to be rebuilt with the newest MMseqs2 version. I think we can download the MSA and convert them directly to a profile database within the `databases` module. . How/where do you download the phrogs in phrokka?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735
https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735:290,Availability,down,download,290,"Hi George,. I think the issue is that the internal MMseqs2 profile format has changed, the phrogs database needs to be rebuilt with the newest MMseqs2 version. I think we can download the MSA and convert them directly to a profile database within the `databases` module. . How/where do you download the phrogs in phrokka?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735
https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355:42,Availability,down,download,42,"Hi Milot,. Thanks for the rapid reply!. I download the mmseqs2 formatted database from this link https://phrogs.lmge.uca.fr/downloads_from_website/phrogs_mmseqs_db.tar.gz found on this site https://phrogs.lmge.uca.fr/READMORE.php. The MSAs and other formats are available at the bottom of this link https://phrogs.lmge.uca.fr (specifically https://phrogs.lmge.uca.fr/downloads_from_website/MSA_phrogs.tar.gz). I'll absolutely give this a crack and let you know how I go. George",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355
https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355:262,Availability,avail,available,262,"Hi Milot,. Thanks for the rapid reply!. I download the mmseqs2 formatted database from this link https://phrogs.lmge.uca.fr/downloads_from_website/phrogs_mmseqs_db.tar.gz found on this site https://phrogs.lmge.uca.fr/READMORE.php. The MSAs and other formats are available at the bottom of this link https://phrogs.lmge.uca.fr (specifically https://phrogs.lmge.uca.fr/downloads_from_website/MSA_phrogs.tar.gz). I'll absolutely give this a crack and let you know how I go. George",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355
https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289746010:137,Energy Efficiency,consumption,consumption,137,I'm running it in a machine with 1 TB of memory and it seems to be working (for now). I found it surprising because the estimated memory consumption was 23 GB. How is that computed?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289746010
https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479:120,Performance,perform,perform,120,"Yeah, trying to pre-compute the index for colabfold proved to be unrealistic. Thanks for the suggestion. My goal was to perform a 6-frame translation search using ColabFold as the target database. But profiles use too much memory (more distinct k-mers?) and the consensus sequences probably won't be sensitive enough (I need to benchmark). Unless I'm doing something wrong. Out of curiosity, is the profile-profile search documented somewhere? From what I understand it builds a profile by expanding the alignment in the first iteration and then uses this profile as query. But because ColabFold doesn't include a profile database, I wonder what are the target profiles in the subsequent iterations.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479
https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479:328,Testability,benchmark,benchmark,328,"Yeah, trying to pre-compute the index for colabfold proved to be unrealistic. Thanks for the suggestion. My goal was to perform a 6-frame translation search using ColabFold as the target database. But profiles use too much memory (more distinct k-mers?) and the consensus sequences probably won't be sensitive enough (I need to benchmark). Unless I'm doing something wrong. Out of curiosity, is the profile-profile search documented somewhere? From what I understand it builds a profile by expanding the alignment in the first iteration and then uses this profile as query. But because ColabFold doesn't include a profile database, I wonder what are the target profiles in the subsequent iterations.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479
https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839:504,Safety,predict,prediction,504,"I was looking for the same info (coming from the colab fold paper). I havent tried running it yet. I believe that given your query db (sequences of a complex), the target db (e.g. uniref), the alignments (sequences vs. uniref) pairaln will create pairings that satisfy the conditions:. - paired sequences must come from the same species; - each query must have a hit within a species; - 50% of query sequence needs to be covered in the alignment. The paragraph from the paper:. > MSA pairing for complex prediction. A paired MSA helps AlphaFold2 to predict complexes more accurately only if orthologous genes are paired with each other. We followed a similar strategy as Bryant et al.22 to pair sequences according to their taxonomic identifier. For the pairing we search each distinct sequence of a complex against the UniRef100 using the same procedure as described in section 2.2.1. We return only hits that cover all complex proteins within one species and pair only the best hit (smallest E-value) with an alignment that covers the query to at least 50%. The pairing is implemented in the new MMseqs2 module pairaln.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839
https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839:549,Safety,predict,predict,549,"I was looking for the same info (coming from the colab fold paper). I havent tried running it yet. I believe that given your query db (sequences of a complex), the target db (e.g. uniref), the alignments (sequences vs. uniref) pairaln will create pairings that satisfy the conditions:. - paired sequences must come from the same species; - each query must have a hit within a species; - 50% of query sequence needs to be covered in the alignment. The paragraph from the paper:. > MSA pairing for complex prediction. A paired MSA helps AlphaFold2 to predict complexes more accurately only if orthologous genes are paired with each other. We followed a similar strategy as Bryant et al.22 to pair sequences according to their taxonomic identifier. For the pairing we search each distinct sequence of a complex against the UniRef100 using the same procedure as described in section 2.2.1. We return only hits that cover all complex proteins within one species and pair only the best hit (smallest E-value) with an alignment that covers the query to at least 50%. The pairing is implemented in the new MMseqs2 module pairaln.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839
https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253:309,Deployability,integrat,integrate,309,"Thank you @gieses for the reply! . Just for a context, when I proposed this issue (months ago) I was trying to replace the msa pairing workflow in alphafold. I got stuck when I had to deal with the taxonomy labels. This is particularly tricky when I wanted to use uniref50 instead of 30. . I finally chose to integrate a new pipeline using the monomer msa from mmseqs, and pairing them with alphafold-multimer's python code. To link the searched msas with taxonomy labels, I extracted a map between taxonomy labels and uniref ids from uniref50 myself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253
https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253:325,Deployability,pipeline,pipeline,325,"Thank you @gieses for the reply! . Just for a context, when I proposed this issue (months ago) I was trying to replace the msa pairing workflow in alphafold. I got stuck when I had to deal with the taxonomy labels. This is particularly tricky when I wanted to use uniref50 instead of 30. . I finally chose to integrate a new pipeline using the monomer msa from mmseqs, and pairing them with alphafold-multimer's python code. To link the searched msas with taxonomy labels, I extracted a map between taxonomy labels and uniref ids from uniref50 myself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253
https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253:309,Integrability,integrat,integrate,309,"Thank you @gieses for the reply! . Just for a context, when I proposed this issue (months ago) I was trying to replace the msa pairing workflow in alphafold. I got stuck when I had to deal with the taxonomy labels. This is particularly tricky when I wanted to use uniref50 instead of 30. . I finally chose to integrate a new pipeline using the monomer msa from mmseqs, and pairing them with alphafold-multimer's python code. To link the searched msas with taxonomy labels, I extracted a map between taxonomy labels and uniref ids from uniref50 myself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253
https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287:31,Deployability,release,release,31,"Can you try the newest MMseqs2 release? 7 is really ancient. MMseqs2 is however really not well tested for clustering whole genomes/long contigs. You might have more luck in running only linclust and not the whole clustering workflow. > PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... 🥲",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287
https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287:96,Testability,test,tested,96,"Can you try the newest MMseqs2 release? 7 is really ancient. MMseqs2 is however really not well tested for clustering whole genomes/long contigs. You might have more luck in running only linclust and not the whole clustering workflow. > PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... 🥲",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287
https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1298979108:14,Deployability,install,installed,14,"WOW, i really installed the wrong one bad ; fixed it; best wishes; connor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1298979108
https://github.com/soedinglab/MMseqs2/issues/637#issuecomment-1314984192:216,Testability,test,tested,216,"We have a script to convert a substitution matrix into the right format for MMseqs2:; https://github.com/soedinglab/MMseqs2/blob/master/util/format_substitution_matrix.R. This should work in theory, but its not well tested. I think one issue is that the matrix needs to be invertible.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637#issuecomment-1314984192
https://github.com/soedinglab/MMseqs2/issues/640#issuecomment-1330786026:114,Deployability,pipeline,pipeline,114,"Yeah I don't think it's all that valuable to allow it...I only noticed because I was using mmseqs in an automated pipeline, and by default floats are converted like that in the software I was using. So definitely not a common issue. Just wanted to let you know about it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/640#issuecomment-1330786026
https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529:55,Availability,error,error,55,"An issue here is `--match-mode 1`, as evident from the error output; `--match-mode 0` for the profile database construction fixes the issue downstream. Does this affect the results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529
https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529:140,Availability,down,downstream,140,"An issue here is `--match-mode 1`, as evident from the error output; `--match-mode 0` for the profile database construction fixes the issue downstream. Does this affect the results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529
https://github.com/soedinglab/MMseqs2/issues/643#issuecomment-1614832031:11,Availability,error,error,11,"I got same error,how to fix? or fake_prefilter can not support for mmseqs search?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/643#issuecomment-1614832031
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:231,Availability,down,down,231,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:49,Modifiability,variab,variable,49,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:136,Performance,optimiz,optimization,136,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:529,Availability,down,down,529,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:349,Modifiability,variab,variable,349,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981
https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:434,Performance,optimiz,optimization,434,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981
https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706:100,Deployability,pipeline,pipeline,100,It appears like some of the CI tests are not passing. Am I missing something or are parts of the CI pipeline broken? Can someone help me on that?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706
https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706:31,Testability,test,tests,31,It appears like some of the CI tests are not passing. Am I missing something or are parts of the CI pipeline broken? Can someone help me on that?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706
https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1348308945:34,Deployability,pipeline,pipelines,34,"Ok good, then I will ignore these pipelines. The Neff scores I use come from the `neffM` field of the `Sequence.h` class. According to the following code, these are stored as floats. https://github.com/soedinglab/MMseqs2/blob/7b95387f93e38c3911f9188bc702d63ed3194013/src/commons/Sequence.h#L453. Therefore I think the `convertNeffToChar` function is more appropriate since it takes a Neff score that is stored a float. (The `convertNeffToFloat` function expects its parameter as an unsigned char, which I don't have when using said `neffM` field.). https://github.com/soedinglab/MMseqs2/blob/7b95387f93e38c3911f9188bc702d63ed3194013/src/commons/MathUtil.h#L216-L224. Sorry if I am missing something here. Is there another location/a better way of extracting the Neff scores?. (I don't know whether this is just personal preference, but I like the idea of _values not being floats when writing_ them to an output. A fixed range from [1;255] somehow sound more appealing to me than a floating point number with an obscure precision.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1348308945
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559:146,Performance,latency,latency,146,"This seems pretty puzzling, we are running on an older CPU model and nothing else seems out of order. MPI won't help and will only add additional latency. MMseqs2 can be used in target split mode without MPI, but we don't do this either. . Doing additional splits will also only add latency (1 split with enough RAM to fit the whole .idx file and some spare is ideal). RAM disks should also not help, in the worst case they might even be harmful. The index is already fully memory mapped and resident in the OS page cache due to vmtouch. Maybe the KVM virtualization has some of issue? We are running bare metal. Running only the MMseqs2 prefilter with perf might help debugging the performance issue. I can write more detailed instructions later if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559:283,Performance,latency,latency,283,"This seems pretty puzzling, we are running on an older CPU model and nothing else seems out of order. MPI won't help and will only add additional latency. MMseqs2 can be used in target split mode without MPI, but we don't do this either. . Doing additional splits will also only add latency (1 split with enough RAM to fit the whole .idx file and some spare is ideal). RAM disks should also not help, in the worst case they might even be harmful. The index is already fully memory mapped and resident in the OS page cache due to vmtouch. Maybe the KVM virtualization has some of issue? We are running bare metal. Running only the MMseqs2 prefilter with perf might help debugging the performance issue. I can write more detailed instructions later if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559:516,Performance,cache,cache,516,"This seems pretty puzzling, we are running on an older CPU model and nothing else seems out of order. MPI won't help and will only add additional latency. MMseqs2 can be used in target split mode without MPI, but we don't do this either. . Doing additional splits will also only add latency (1 split with enough RAM to fit the whole .idx file and some spare is ideal). RAM disks should also not help, in the worst case they might even be harmful. The index is already fully memory mapped and resident in the OS page cache due to vmtouch. Maybe the KVM virtualization has some of issue? We are running bare metal. Running only the MMseqs2 prefilter with perf might help debugging the performance issue. I can write more detailed instructions later if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559:683,Performance,perform,performance,683,"This seems pretty puzzling, we are running on an older CPU model and nothing else seems out of order. MPI won't help and will only add additional latency. MMseqs2 can be used in target split mode without MPI, but we don't do this either. . Doing additional splits will also only add latency (1 split with enough RAM to fit the whole .idx file and some spare is ideal). RAM disks should also not help, in the worst case they might even be harmful. The index is already fully memory mapped and resident in the OS page cache due to vmtouch. Maybe the KVM virtualization has some of issue? We are running bare metal. Running only the MMseqs2 prefilter with perf might help debugging the performance issue. I can write more detailed instructions later if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396917129:129,Performance,perform,performance,129,I took a closer look at the CPU flags. I think your KVM is disallowing sse41 and avx2. At least sse41 is required for reasonable performance.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396917129
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:117,Performance,Perform,Performing,117,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:158,Performance,Perform,Performing,158,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:209,Performance,Perform,Performing,209,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:249,Performance,Perform,Performing,249,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:299,Performance,Perform,Performing,299,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:342,Performance,Perform,Performing,342,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:395,Performance,Perform,Performing,395,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:438,Performance,Perform,Performing,438,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:491,Performance,Perform,Performing,491,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:532,Performance,Perform,Performing,532,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:583,Performance,Perform,Performing,583,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:624,Performance,Perform,Performing,624,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:675,Performance,Perform,Performing,675,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:715,Performance,Perform,Performing,715,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:128,Testability,Test,Test,128,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:169,Testability,Test,Test,169,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:220,Testability,Test,Test,220,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:260,Testability,Test,Test,260,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:310,Testability,Test,Test,310,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:353,Testability,Test,Test,353,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:406,Testability,Test,Test,406,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:449,Testability,Test,Test,449,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:502,Testability,Test,Test,502,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:543,Testability,Test,Test,543,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:594,Testability,Test,Test,594,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:635,Testability,Test,Test,635,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:686,Testability,Test,Test,686,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:726,Testability,Test,Test,726,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:791,Availability,mask,mask,791,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:800,Availability,mask,mask-prob,800,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:816,Availability,mask,mask-lower-case,816,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:157,Performance,perform,performance,157,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:905,Performance,load,load-mode,905,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:28,Testability,test,tests,28,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:289,Testability,log,log,289,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:1251,Testability,log,login,1251,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190:441,Deployability,Release,Release,441,"Exactly, run the prefilter command with:; ```; perf record -g -F 250 -- mmseqs prefilter ....rest-of-arguments---; ```; This will generate a `perf.data` file that contains the perfomance profiling information. It can be viewed with ; ```; perf report; or ; perf annotate; ```. You should compile with `cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo` so that mmseqs contains debug symbols. This is not 100% the same as RelWithDebInfo uses `-O2` and Release uses `-O3` but it shouldn't really have a huge difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:12,Availability,avail,available,12,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:96,Availability,avail,available,96,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:113,Testability,log,login,113,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321:184,Deployability,release,release-compiled,184,"That's with the RelWithDebInfo-compiled version, on the login node without vmtouch, where the workload took 600 s. On the compute node with vmtouch, it's 10 seconds, same goes for the release-compiled version, so indeed does not seem to make a difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321:56,Testability,log,login,56,"That's with the RelWithDebInfo-compiled version, on the login node without vmtouch, where the workload took 600 s. On the compute node with vmtouch, it's 10 seconds, same goes for the release-compiled version, so indeed does not seem to make a difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1398561095:126,Integrability,depend,dependence,126,"One other thing, not sure if helpful but to me it seems somewhat indicative. For mmseqs search, I'm getting an t=aN+b kind of dependence, where t is runtime and N number of provided sequences in the fasta file. The a factor seems actually quite fine, it's the b that makes it problematic. Otherwise it would be ~5 seconds to search through uniref for one 1:1 complex (150+70 aa), and presumably ~15 seconds for envdb, assuming linear scaling. Together with the non-search steps, that would fit into runtime we're getting from the colabfold server. ![image](https://user-images.githubusercontent.com/16358238/213735099-efefb75e-072d-44e3-abe1-f8e8a86803ce.png). If you know the environment on which the colabfold server is running and library versions it was compiled against (or any other machine on which expected runtime is experienced), I can try to reproduce it in more similar conditions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1398561095
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1402329661:211,Security,access,access,211,"Could this have anything to do with NUMA topology? Are your servers NUMA-less? Considering that all our high-mem nodes have multiple NUMA nodes, with at most ~370G per NUMA node, I'm thinking sub-optimal memory access might be the cause.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1402329661
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:779,Availability,fault,faults,779,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:822,Availability,fault,faults,822,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:973,Integrability,message,messages,973,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:998,Integrability,message,messages,998,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:333,Performance,load,load-mode,333,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:1660,Performance,latency,latency,1660," anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pdb70_220313.idx uniref30_2...; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1410382572:44,Testability,test,tested,44,"I am not finding the numbers now, but I had tested the effect of multiprocessing, both by giving it between 1 and 64 cpus (with fixed 2 threads per cpu), and by giving between 1 and 8 threads on a single cpu. Neither had a notable difference with this two-sequence input. With somewhat larger batches (e.g. 60) I could see it speeding up, but with diminishing returns as Nproc > Nseq/2 or so. Parallel processing of the uniref and envdb we intend to do, as you say. Also reusing the uniref30 search (your app does it once for the MSA/monomer step and then again for the pair step, if I'm not mistaken). Thank you for the info about the NUMA setup, I'll drop that line of exploration then. For RAM - I had checked with vmtouch -v [file] and it was claiming to have all pages resident in RAM. Can't double check now with htop as all the high mem nodes are heavily used at the moment, but I can't imagine it would be reporting something different. The timing is very consistent with vmtouch, and an order of magnitude slower than when reading from disk for us.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1410382572
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084:113,Performance,perform,performance,113,"@milot-mirdita are you by any chance aware of a specific user that's running local mmseqs server with equivalent performance to what you have? I think you could be on the right track with the KVM, but I'd prefer to first check in with others to see there's correlation between KVM/bare-metal and this performance wall.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084:301,Performance,perform,performance,301,"@milot-mirdita are you by any chance aware of a specific user that's running local mmseqs server with equivalent performance to what you have? I think you could be on the right track with the KVM, but I'd prefer to first check in with others to see there's correlation between KVM/bare-metal and this performance wall.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536:445,Modifiability,variab,variable,445,"Not personally. But we have used the server on two completely differently spec-ed servers and the performance is okay both time:. * 1x AMD Epyc 7713P / 2TB RAM / Debian 11 / AVX2 build (occasional fallback server); * 8x Intel Xeon E7-8891 v2 / 4TB RAM / CentOS / SSE41 build (main server). As you can see the two systems are very different. However, we never tried to run on top of any virtualization. That seems to be the only really different variable. (The RAM on both systems is overkill, but these are the servers we have). Could you try to run a SSE41 build and not an AVX2 build? I wonder if the virtualization is intercepting some AVX2 instruction and making everything slow. You can compile MMseqs2 with:; ```; cmake -DHAVE_SSE4_1=1 .......; make ......; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536:98,Performance,perform,performance,98,"Not personally. But we have used the server on two completely differently spec-ed servers and the performance is okay both time:. * 1x AMD Epyc 7713P / 2TB RAM / Debian 11 / AVX2 build (occasional fallback server); * 8x Intel Xeon E7-8891 v2 / 4TB RAM / CentOS / SSE41 build (main server). As you can see the two systems are very different. However, we never tried to run on top of any virtualization. That seems to be the only really different variable. (The RAM on both systems is overkill, but these are the servers we have). Could you try to run a SSE41 build and not an AVX2 build? I wonder if the virtualization is intercepting some AVX2 instruction and making everything slow. You can compile MMseqs2 with:; ```; cmake -DHAVE_SSE4_1=1 .......; make ......; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1511207961:424,Testability,test,tests,424,"Thanks for the response!. I had already done this via docker, which compiles all 3 versions (AVX2, SSE42, SSE2) - AVX2 was definitely the fastest of the three, and all three were behaving the same as the native build. I don't think it's likely I'd see a different results if not using a container. Do you know if running mmseqs with docker on your machine makes it drastically slower? Given that it's the ""same speed"" in my tests, it's hard to imagine that the docker adds anything of relevance in the equation. I fully agree with you that the hardware can't be the source of the discrepancy here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1511207961
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247:39,Security,access,access,39,"@crisdarbellay no, sorry. I don't have access to a ""bare metal"" server to test this with, but my guess is that Milot guess that it has to do with virtualization is correct. Are you running it with KVM or not?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247
https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247:74,Testability,test,test,74,"@crisdarbellay no, sorry. I don't have access to a ""bare metal"" server to test this with, but my guess is that Milot guess that it has to do with virtualization is correct. Are you running it with KVM or not?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247
https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683:50,Availability,error,errors,50,Thank you for the patches! How did you find these errors? ; We are running MMseqs2 in our regression with `asan` and neither of these shows up.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683
https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683:18,Deployability,patch,patches,18,Thank you for the patches! How did you find these errors? ; We are running MMseqs2 in our regression with `asan` and neither of these shows up.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683
https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408612949:146,Security,sanitiz,sanitizers,146,"Hi Martin,; That's a great point, thanks. I've got a few pieces of information:. * We run asan with [non-default flags](https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags) `--check_initialization_order=true` and `--strict_init_order=true`. * We realised that point 3 from my list ('initialisation order fiasco') is specific to how we build stuff, so that shouldn't be an issue for you or other users. . * We're not quite sure why we got the ODR violation flagged, while you didn't. Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408612949
https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829:23,Availability,error,errors,23,"I can't reproduce asan errors (on a simple search at least, the `run_search.sh` script in our regression). With neither gcc-12 nor clang-15. . I enabled the following asan options:; ```; ASAN_OPTIONS=abort_on_error=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829
https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829:36,Usability,simpl,simple,36,"I can't reproduce asan errors (on a simple search at least, the `run_search.sh` script in our regression). With neither gcc-12 nor clang-15. . I enabled the following asan options:; ```; ASAN_OPTIONS=abort_on_error=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829
https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016:82,Availability,error,error,82,"Thanks a lot for your fast response.; I have tried and I am getting the following error; Invalid database read for id=36855603, database index=../../uniprot.index; getEntryLen: local id (36855603) >= db size (27159746). I have done createindex on the uniprot db but the error remains.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016
https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016:270,Availability,error,error,270,"Thanks a lot for your fast response.; I have tried and I am getting the following error; Invalid database read for id=36855603, database index=../../uniprot.index; getEntryLen: local id (36855603) >= db size (27159746). I have done createindex on the uniprot db but the error remains.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016
https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202:143,Deployability,release,release,143,"> this is something that is annoyingly non-obvious since forever. We should definitely improve this. Hello,; Is this somehow fixed in a recent release?; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202
https://github.com/soedinglab/MMseqs2/issues/666#issuecomment-1429043885:0,Deployability,Upgrade,Upgraded,0,Upgraded system to have more memory and this works. It would be nice if there was a way to chunk the mapping since it's such a large file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666#issuecomment-1429043885
https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218:130,Performance,perform,performing,130,I've seen Issue 666 and have access to a supercomputing facility. Should I submit a job-script allocating GPUs to this instead of performing it in PuTTy on my computer alone?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218
https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218:29,Security,access,access,29,I've seen Issue 666 and have access to a supercomputing facility. Should I submit a job-script allocating GPUs to this instead of performing it in PuTTy on my computer alone?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218
https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1448105726:43,Availability,down,download,43,"No issues with uniref100 (took 2.5 days to download), so am using that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1448105726
https://github.com/soedinglab/MMseqs2/issues/673#issuecomment-1445350808:520,Performance,perform,performance,520,`convert2fasta` takes a sequence database as input. You can create a subset of the input database that contains only the cluster representatives with `createsubdb` afterwards you can call `convert2fasta`:. ```; mmseqs createdb input.fas DB --dbtype 2; mmseqs cluster DB clusterRes tmp --min-seq-id 0.95 -c 0.8 --cov-mode 1; mmseqs createsubdb clusterRes.index DB DB_rep; mmseqs convert2fasta DB_rep DB_rep.fasta; ```. Sidenote: I don't recommend putting the output of the clustering in `/dev/shm`. It's probably bad for performance.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673#issuecomment-1445350808
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:164,Integrability,depend,depends,164,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:222,Integrability,depend,depend,222,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:86,Performance,optimiz,optimization,86,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:133,Performance,optimiz,optimization,133,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224:75,Deployability,update,update,75,Awesome! Thank you for such the quick turn around. What is the best way to update my installation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224
https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224:85,Deployability,install,installation,85,Awesome! Thank you for such the quick turn around. What is the best way to update my installation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224
https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612:167,Performance,perform,performance,167,"Yes, you are indeed right. I clarified with @martin-steinegger, he benchmarked the profile inclusion E-value and saw that the higher inclusion threshold was improving performance. The performance would get worse with inclusion E-values higher than 0.01 though. Your understanding in your second paragraph is right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612
https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612:184,Performance,perform,performance,184,"Yes, you are indeed right. I clarified with @martin-steinegger, he benchmarked the profile inclusion E-value and saw that the higher inclusion threshold was improving performance. The performance would get worse with inclusion E-values higher than 0.01 though. Your understanding in your second paragraph is right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612
https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612:67,Testability,benchmark,benchmarked,67,"Yes, you are indeed right. I clarified with @martin-steinegger, he benchmarked the profile inclusion E-value and saw that the higher inclusion threshold was improving performance. The performance would get worse with inclusion E-values higher than 0.01 though. Your understanding in your second paragraph is right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612
https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1457901465:14,Availability,down,down,14,Can you write down the steps you execute after the taxonomy filtering? I am not sure how to reproduce the issue.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1457901465
https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:16,Availability,down,down,16,"> Can you write down the steps you execute after the taxonomy filtering? I am not sure how to reproduce the issue. After filter the keyword ""Candidatus"", ""bacterium"", ""uncultured"" etc...; ```bash; mmseqs filtertaxseqdb /shared/projects/phycovir/FORMATED_DB/UniRef90/UniRef90 mmseq2DB/uniref90_cleaned_DB_v5 --taxon-list ${keyword} ## the taxon id list is too long so I didn't write it; mmseqs createtaxdb mmseq2DB/uniref90_cleaned_DB_v5 result/tmp_createdb. # taxonomy assignment; mmseqs createdb result/${task_id}_prokka/${task_id}.faa queryDB/${task_id}_prokka_queryDB; mmseqs taxonomy queryDB/${task_id}_prokka_queryDB mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/tmp_prokka. mmseqs createtsv queryDB/${task_id}_prokka_queryDB result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${taski_id}/taxonomyResult_${task_id}_prokka_cleanDB_v5.tsv; # report; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And th",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706
https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:2488,Integrability,depend,dependent,2488,"niref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And the taxon id for this specie is not exist in uniref90.fsa). And then I search the same word in ""uniref90_cleaned_DB_v5_h"" :; ```bash; grep ""Candidatus Izimaplasma"" uniref90_cleaned_DB_v5_h --text | head -n 5; UniRef90_A0A2A1ZTN3 Uncharacterized protein n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZTN3_9BACT; UniRef90_A0A2A1ZRW6 Cadmium-translocating P-type ATPase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZRW6_9BACT; UniRef90_A0A2A1ZNE5 ATP-dependent RecD-like DNA helicase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZNE5_9BACT; UniRef90_A0A094INE2 Peptidase family S41 n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094INE2_9BACT; UniRef90_A0A094KYW2 Internalin-A n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094KYW2_9BACT; ```; I suppose that something happens when I use the createtaxdb to create the targetDB, but I'm not sure about what it is... ; I hope my description is clear for you. Thanks,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706
https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:2980,Usability,clear,clear,2980,"niref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And the taxon id for this specie is not exist in uniref90.fsa). And then I search the same word in ""uniref90_cleaned_DB_v5_h"" :; ```bash; grep ""Candidatus Izimaplasma"" uniref90_cleaned_DB_v5_h --text | head -n 5; UniRef90_A0A2A1ZTN3 Uncharacterized protein n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZTN3_9BACT; UniRef90_A0A2A1ZRW6 Cadmium-translocating P-type ATPase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZRW6_9BACT; UniRef90_A0A2A1ZNE5 ATP-dependent RecD-like DNA helicase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZNE5_9BACT; UniRef90_A0A094INE2 Peptidase family S41 n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094INE2_9BACT; UniRef90_A0A094KYW2 Internalin-A n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094KYW2_9BACT; ```; I suppose that something happens when I use the createtaxdb to create the targetDB, but I'm not sure about what it is... ; I hope my description is clear for you. Thanks,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706
https://github.com/soedinglab/MMseqs2/issues/678#issuecomment-1467712910:119,Testability,benchmark,benchmark,119,"Thank you for your answer. I understand, yes, I agree would be good to see clustered searches in MMseqs2. Is there any benchmark with diamond tool? Maybe I could not see it. Best,; Ugur",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678#issuecomment-1467712910
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461532199:205,Modifiability,variab,variable,205,Please make sure you submit one MPI job per node. Thread parallelization still happens through OpenMP not MPI. Also how are you calling mmseqs2? Are you passing the relevant `mpirun` with the `RUNNER` env variable?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461532199
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:235,Availability,error,error,235,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:156,Testability,test,testing,156,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:73,Usability,simpl,simply,73,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909:140,Testability,test,testing,140,"The file used here is [DB.fasta](https://github.com/soedinglab/MMseqs2/blob/master/examples/DB.fasta) , I simply renamed to exp.fa as I was testing in a directory with other similarly named files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909:106,Usability,simpl,simply,106,"The file used here is [DB.fasta](https://github.com/soedinglab/MMseqs2/blob/master/examples/DB.fasta) , I simply renamed to exp.fa as I was testing in a directory with other similarly named files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1206,Availability,mask,mask,1206,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1215,Availability,mask,mask-prob,1215,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1231,Availability,mask,mask-lower-case,1231,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:578,Integrability,wrap,wrapped-scoring,578,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1049,Modifiability,extend,extend,1049,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1308,Modifiability,extend,extendable,1308,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:824,Performance,load,load-mode,824,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1256,Security,hash,hash-shift,1256,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:72,Availability,error,error,72,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:163,Availability,error,error,163,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1248,Availability,mask,mask,1248,"721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1257,Availability,mask,mask-prob,1257,"721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1273,Availability,mask,mask-lower-case,1273,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2511,Availability,mask,mask,2511,"64721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo coun",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2520,Availability,mask,mask-prob,2520,"64721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo coun",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2536,Availability,mask,mask-lower-case,2536,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3912,Availability,Mask,Mask,3912,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3930,Availability,Mask,Mask,3930,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3962,Availability,Mask,Mask,3962,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4295,Availability,error,error,4295,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4315,Availability,fault,fault,4315,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4458,Availability,fault,fault,4458,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4542,Availability,Error,Error,4542,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:620,Integrability,wrap,wrapped-scoring,620,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1883,Integrability,wrap,wrapped-scoring,1883,"load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity typ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3088,Integrability,wrap,wrapped,3088,"647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1091,Modifiability,extend,extend,1091,"hen running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1350,Modifiability,extend,extendable,1350,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2354,Modifiability,extend,extend,2354,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2613,Modifiability,extend,extendable,2613,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4060,Modifiability,extend,extendable,4060,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:866,Performance,load,load-mode,866,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2129,Performance,load,load-mode,2129,"pen aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Align",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1298,Security,hash,hash-shift,1298,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2561,Security,hash,hash-shift,2561,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4014,Security,hash,hash,4014,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21078,Availability,mask,masksequence,21078,ect src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21166,Availability,mask,maskbygff,21166,ct src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2neff.cpp.o; [ 81%] Building CXX object ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:16251,Energy Efficiency,Reduce,ReducedMatrix,16251,eqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ungappedprefilter.cpp.o; [ 57%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/besthitperset.cpp.o; [ 57%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/combinepvalperset.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/Aggregation.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/MultiHitDb.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/MultiHitSearch.cpp.o; [ 59%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/taxonomy/lca.cpp.o; [ 59%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/taxonomy/addtaxonomy.cpp.o; [ 59%] Building CXX object src/CMakeFil,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3420,Integrability,depend,dependencies,3420,HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.di,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3606,Integrability,depend,dependencies,3606,qjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3976,Integrability,depend,dependencies,3976, -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:5172,Integrability,depend,dependencies,5172,s/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 8%] Built target alp; Scanning dependencies of target ksw2; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; [ 8%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/VTML80.out.h; [ 9%] Generating ../generated/VTML40.out.h; [ 9%] Generating ../generated/nucleotide.out.h; [ 9%] Generating ../generated/blosum62.out.h; [ 10%] Generating ../generated/PAM30.out.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiag.lib.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.lib.h; [ 11%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 11%] Generating ../generated/Library255_may17.lib.h; [ 12%] Generating ../generated/libPolished_8.lib.h; [ 12%] Generating ../generated/cs219.lib.h; [ 12%] Generating ../generated/krona_prelude.html.h; [ 13%] Generating ../generated/result_viz_prelude.html.zst.h; [ 13%] Generating ../generated/K4000.crf.h; [ 13%] Generating ../generated/easysearch.sh.h; [ 14%] Generating ../generated/easycluster.sh.h; [ 14%] Generating ../g,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:5312,Integrability,depend,dependencies,5312,ding CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 8%] Built target alp; Scanning dependencies of target ksw2; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; [ 8%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/VTML80.out.h; [ 9%] Generating ../generated/VTML40.out.h; [ 9%] Generating ../generated/nucleotide.out.h; [ 9%] Generating ../generated/blosum62.out.h; [ 10%] Generating ../generated/PAM30.out.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiag.lib.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.lib.h; [ 11%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 11%] Generating ../generated/Library255_may17.lib.h; [ 12%] Generating ../generated/libPolished_8.lib.h; [ 12%] Generating ../generated/cs219.lib.h; [ 12%] Generating ../generated/krona_prelude.html.h; [ 13%] Generating ../generated/result_viz_prelude.html.zst.h; [ 13%] Generating ../generated/K4000.crf.h; [ 13%] Generating ../generated/easysearch.sh.h; [ 14%] Generating ../generated/easycluster.sh.h; [ 14%] Generating ../generated/easytaxonomy.sh.h; [ 15%] Generating ../generated/easyrbh.sh.h; [ 15%] Generating ../generated/blastp.sh.h; [ 15%] Ge,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:7497,Integrability,depend,dependencies,7497,tering.sh.h; [ 17%] Generating ../generated/cascaded_clustering.sh.h; [ 18%] Generating ../generated/update_clustering.sh.h; [ 18%] Generating ../generated/searchtargetprofile.sh.h; [ 18%] Generating ../generated/createindex.sh.h; [ 19%] Generating ../generated/createtaxdb.sh.h; [ 19%] Generating ../generated/translated_search.sh.h; [ 20%] Generating ../generated/taxpercontig.sh.h; [ 20%] Generating ../generated/multihitdb.sh.h; [ 20%] Generating ../generated/multihitsearch.sh.h; [ 21%] Generating ../generated/enrich.sh.h; [ 21%] Generating ../generated/blastn.sh.h; [ 21%] Generating ../generated/searchslicedtargetprofile.sh.h; [ 22%] Generating ../generated/taxonomy.sh.h; [ 22%] Generating ../generated/linsearch.sh.h; [ 23%] Generating ../generated/databases.sh.h; [ 23%] Generating ../generated/nucleotide_clustering.sh.h; [ 23%] Generating ../generated/iterativepp.sh.h; [ 24%] Generating ../generated/tsv2exprofiledb.sh.h; [ 24%] Built target generated; Scanning dependencies of target version; [ 25%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; Linking CXX static library libversion.a; [ 25%] Built target version; Scanning dependencies of target libzstd_static; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/entropy_common.c.o; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/fse_decompress.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/threading.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/pool.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/zstd_common.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/error_private.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/com,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:7685,Integrability,depend,dependencies,7685,/generated/createindex.sh.h; [ 19%] Generating ../generated/createtaxdb.sh.h; [ 19%] Generating ../generated/translated_search.sh.h; [ 20%] Generating ../generated/taxpercontig.sh.h; [ 20%] Generating ../generated/multihitdb.sh.h; [ 20%] Generating ../generated/multihitsearch.sh.h; [ 21%] Generating ../generated/enrich.sh.h; [ 21%] Generating ../generated/blastn.sh.h; [ 21%] Generating ../generated/searchslicedtargetprofile.sh.h; [ 22%] Generating ../generated/taxonomy.sh.h; [ 22%] Generating ../generated/linsearch.sh.h; [ 23%] Generating ../generated/databases.sh.h; [ 23%] Generating ../generated/nucleotide_clustering.sh.h; [ 23%] Generating ../generated/iterativepp.sh.h; [ 24%] Generating ../generated/tsv2exprofiledb.sh.h; [ 24%] Built target generated; Scanning dependencies of target version; [ 25%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; Linking CXX static library libversion.a; [ 25%] Built target version; Scanning dependencies of target libzstd_static; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/entropy_common.c.o; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/fse_decompress.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/threading.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/pool.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/zstd_common.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/error_private.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/xxhash.c.o; [ 28%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/compress/hist.c.o; [ 28%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_stat,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:11149,Integrability,depend,dependencies,11149,d_static.dir/__/__/__/lib/decompress/zstd_ddict.c.o; [ 33%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/cover.c.o; [ 33%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/fastcover.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/divsufsort.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/zdict.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_common.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_compress.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_decompress.c.o; Linking C static library libzstd.a; [ 35%] Built target libzstd_static; Scanning dependencies of target tinyexpr; [ 35%] Building C object lib/tinyexpr/CMakeFiles/tinyexpr.dir/tinyexpr.c.o; Linking C static library libtinyexpr.a; [ 35%] Built target tinyexpr; Scanning dependencies of target mmseqs-framework; [ 35%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-fra,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:11337,Integrability,depend,dependencies,11337,b/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/fastcover.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/divsufsort.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/zdict.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_common.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_compress.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_decompress.c.o; Linking C static library libzstd.a; [ 35%] Built target libzstd_static; Scanning dependencies of target tinyexpr; [ 35%] Building C object lib/tinyexpr/CMakeFiles/tinyexpr.dir/tinyexpr.c.o; Linking C static library libtinyexpr.a; [ 35%] Built target tinyexpr; Scanning dependencies of target mmseqs-framework; [ 35%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/BandedNucleotideAligner.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/rescorediagonal.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseq,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:26457,Integrability,depend,dependencies,26457,ect src/CMakeFiles/mmseqs-framework.dir/util/proteinaln2nucl.cpp.o; [ 92%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/versionstring.cpp.o; [ 92%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/diskspaceavail.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Cluster.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/ClusterUpdate.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Databases.cpp.o; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Linclust.cpp.o; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyRbh.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyCluster.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyLinclust.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Enrich.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Linsearch.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Map.cpp.o; [ 97%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Rbh.cpp.o; [ 97%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Search.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Taxonomy.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyTaxonomy.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/CreateIndex.cpp.o; [100%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/MMseqsBase.cpp.o; Linking CXX static library libmmseqs-framework.a; [100%] Built target mmseqs-framework; Scanning dependencies of target mmseqs; [100%] Building CXX object src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o; Linking CXX executable mmseqs; [100%] Built target mmseqs; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3237,Modifiability,Config,Configuring,3237,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:15470,Modifiability,Extend,ExtendedSubstitutionMatrix,15470,p.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Parameters.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/ProfileStates.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SequenceWeights.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 56,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1072,Performance,Perform,Performing,1072,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1113,Performance,Perform,Performing,1113,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1164,Performance,Perform,Performing,1164,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1204,Performance,Perform,Performing,1204,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1254,Performance,Perform,Performing,1254,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1297,Performance,Perform,Performing,1297,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1350,Performance,Perform,Performing,1350,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1393,Performance,Perform,Performing,1393,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1446,Performance,Perform,Performing,1446,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1487,Performance,Perform,Performing,1487,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1538,Performance,Perform,Performing,1538,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1579,Performance,Perform,Performing,1579,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1630,Performance,Perform,Performing,1630,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1670,Performance,Perform,Performing,1670,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1767,Performance,Perform,Performing,1767,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1806,Performance,Perform,Performing,1806,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1855,Performance,Perform,Performing,1855,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1894,Performance,Perform,Performing,1894,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1943,Performance,Perform,Performing,1943,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1985,Performance,Perform,Performing,1985,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2036,Performance,Perform,Performing,2036,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2075,Performance,Perform,Performing,2075,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2188,Performance,Perform,Performing,2188,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2224,Performance,Perform,Performing,2224,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2427,Performance,Perform,Performing,2427,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2464,Performance,Perform,Performing,2464,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2999,Performance,Perform,Performing,2999,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3040,Performance,Perform,Performing,3040,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3128,Performance,Perform,Performing,3128,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3169,Performance,Perform,Performing,3169,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:15363,Performance,Cache,CacheFriendlyOperations,15363,commons/NucleotideMatrix.cpp.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Orf.cpp.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Parameters.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/ProfileStates.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SequenceWeights.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:444,Safety,Detect,Detecting,444,Output of cmake call:; ```; -- The CXX compiler identification is GNU 10.3.0; -- The C compiler identification is GNU 10.3.0; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:480,Safety,Detect,Detecting,480,Output of cmake call:; ```; -- The CXX compiler identification is GNU 10.3.0; -- The C compiler identification is GNU 10.3.0; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:834,Safety,Detect,Detecting,834,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:868,Safety,Detect,Detecting,868,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1083,Testability,Test,Test,1083,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1124,Testability,Test,Test,1124,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1175,Testability,Test,Test,1175,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1215,Testability,Test,Test,1215,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1265,Testability,Test,Test,1265,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1308,Testability,Test,Test,1308,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1361,Testability,Test,Test,1361,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1404,Testability,Test,Test,1404,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1457,Testability,Test,Test,1457,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1498,Testability,Test,Test,1498,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1549,Testability,Test,Test,1549,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1590,Testability,Test,Test,1590,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1641,Testability,Test,Test,1641,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1681,Testability,Test,Test,1681,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1778,Testability,Test,Test,1778,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1817,Testability,Test,Test,1817,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1866,Testability,Test,Test,1866,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1905,Testability,Test,Test,1905,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1954,Testability,Test,Test,1954,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1996,Testability,Test,Test,1996,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2047,Testability,Test,Test,2047,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2086,Testability,Test,Test,2086,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2199,Testability,Test,Test,2199,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2235,Testability,Test,Test,2235,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2438,Testability,Test,Test,2438,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2475,Testability,Test,Test,2475,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3010,Testability,Test,Test,3010,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3051,Testability,Test,Test,3051,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3139,Testability,Test,Test,3139,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3180,Testability,Test,Test,3180,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461648791:180,Deployability,install,installed,180,"Yes, exactly. We've never tried running MMseqs2 on mvapich2 and apparently you are the first user facing issues with it. (At least the first who told us about it). Do you have GDB installed? Can you call the following:; ```; gdb --args ~/data/dir/mmseqs2/build-mpi/bin/mmseqs kmermatcher; # wait for a prompt to appear then type; r ; # wait for it to crash then type; bt; # copy paste the output please; ```. You might have to recompile as a Debug build to get more sensible output here:; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Debug ..",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461648791
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:278,Availability,error,error,278,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:129,Performance,load,loading,129,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569
https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:349,Testability,test,test,349,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021:35,Availability,error,error,35,This looks about right. What's the error message?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021:41,Integrability,message,message,41,This looks about right. What's the error message?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:79,Availability,avail,available,79,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:20,Deployability,release,release,20,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:31,Deployability,install,installed,31,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:510,Availability,error,errors,510,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:621,Availability,down,downloaded,621,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:103,Integrability,message,messages,103,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:25,Availability,avail,available,25,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:49,Deployability,release,release,49,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:165,Deployability,release,release,165,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417:141,Availability,avail,availability,141,"Yes to my knowledge it was a fresh conda enviroment, I will try again to make sure I have the suggested version. Thank you very much for the availability!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168:8,Availability,down,downloading,8,"Somehow downloading trough `conda` always downloaded an old version of the package, using `wget` solved my problem! Thanks again for the help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168
https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168:42,Availability,down,downloaded,42,"Somehow downloading trough `conda` always downloaded an old version of the package, using `wget` solved my problem! Thanks again for the help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168
https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571:3,Security,validat,validate,3,"We validate that (most) float parameters have a leading zero (or other number in-front of the `.`) if they are given in non-scientific notation, or alternatively in scientific-notation. A similar issue was reported here:; https://github.com/soedinglab/MMseqs2/issues/640. I guess we could relax the validation step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571
https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571:299,Security,validat,validation,299,"We validate that (most) float parameters have a leading zero (or other number in-front of the `.`) if they are given in non-scientific notation, or alternatively in scientific-notation. A similar issue was reported here:; https://github.com/soedinglab/MMseqs2/issues/640. I guess we could relax the validation step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571
https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986:84,Availability,error,error,84,"Ah interesting, thank you for the explanation. Alternatively, having an informative error message that explains the failure would be helpful!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986
https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986:116,Availability,failure,failure,116,"Ah interesting, thank you for the explanation. Alternatively, having an informative error message that explains the failure would be helpful!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986
https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986:90,Integrability,message,message,90,"Ah interesting, thank you for the explanation. Alternatively, having an informative error message that explains the failure would be helpful!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986
https://github.com/soedinglab/MMseqs2/issues/683#issuecomment-1474073582:190,Usability,guid,guide,190,"To utilize the taxonomy features in MMseqs2/Foldseek, you must first label the sequences in your database with taxonomy IDs. You can find detailed instructions on how to do this in our user guide wiki: https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment. I recommend posting this question on the FoldSeek GitHub page. :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/683#issuecomment-1474073582
https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691:216,Energy Efficiency,reduce,reduce,216,"The index can not be shrunk, if you want to allow for real-time searches. Depending on the size of your database, you could implement the same clustered MMseqs2 search workflow as implemented in ColabFold. This will reduce memory requirements massively. We plan to eventually over this workflow directly in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691
https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691:74,Integrability,Depend,Depending,74,"The index can not be shrunk, if you want to allow for real-time searches. Depending on the size of your database, you could implement the same clustered MMseqs2 search workflow as implemented in ColabFold. This will reduce memory requirements massively. We plan to eventually over this workflow directly in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310:387,Deployability,update,update,387,"@milot-mirdita thanks for your reply; https://github.com/sokrypton/ColabFold/blob/main/colabfold_search.sh; in the ""colabfold_search.sh"" file , there are reminds at first ""Do not use this script. Use the python colabfold_search instead"".; **why not advice us to this ""colabfold_search.sh"" scripts? what is ""python colabfold_search""?**; Maybe the current ""colabfold_search.sh"" is need to update, at least it does not work with the script in readme.; `colabfold_search input_sequences.fasta /path/to/db_folder msas`. For single sequences, **the sufficient RAM** means: 768GB-1024GB RAM to stay resident in RAM and have enough RAM spare for worker processes, yes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:822,Availability,avail,available,822,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:696,Deployability,install,installed,696,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:746,Deployability,install,installed,746,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:171,Performance,response time,response times,171,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:367,Performance,perform,performance,367,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:611,Safety,predict,predict,611,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:1223,Availability,Error,Error,1223,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:789,Testability,log,log,789,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:826,Testability,log,log-mmseqs-msa-server,826,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:848,Testability,log,log,848,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:906,Testability,log,log-mmseqs-msa-server,906,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:928,Testability,log,log,928,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:349,Availability,error,error,349,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:915,Availability,error,error,915,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1841,Availability,ERROR,ERROR,1841,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1888,Availability,error,error,1888,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2404,Availability,Error,Error,2404,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2499,Availability,Error,Error,2499,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2624,Availability,error,error,2624,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2694,Availability,ERROR,ERROR,2694,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1214,Integrability,message,message,1214,"bfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1654,Safety,timeout,timeout,1654,"system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2205,Safety,timeout,timeout,2205,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2247,Safety,Timeout,Timeout,2247,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2273,Safety,Timeout,Timeout,2273,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:906,Testability,log,log,906,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:923,Testability,log,log-mmseqs-msa-server,923,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:945,Testability,log,log,945,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1003,Testability,log,log-mmseqs-msa-server,1003,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1025,Testability,log,log,1025,"fold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1034,Testability,test,test,1034,"fold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1058,Testability,log,logging,1058,"fold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1097,Testability,log,logger,1097,"2108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1106,Testability,log,logging,1106,"2108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1127,Testability,log,logging,1127,"fold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; wh",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1153,Testability,log,logging,1153,".3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1687,Testability,log,logger,1687,"ver/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1881,Testability,log,logger,1881,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2257,Testability,log,logger,2257,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2387,Testability,log,logger,2387,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2482,Testability,log,logger,2482,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2617,Testability,log,logger,2617,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476
https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943:228,Availability,fault,fault,228,You need to create symlinks in the databases folder:. ```; ln -s uniref30_2202_db_mapping uniref30_2202_db.idx_mapping; ln -s uniref30_2202_db_taxonomy uniref30_2202_db.idx_taxonomy; ```. That is missing in the setup script. My fault.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943
https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048:35,Availability,error,error,35,"as a follow up comment, i get this error when run the suggested ""non-easy-search"" commands:. ```; mmseqs createdb query.fasta qdb; mmseqs search qdb target result tmp; mmseqs result2msa qdb target result result_msa; mmseqs unpackdb result_msa outdir; ```. Error:; ```; Cannot open lookup file result_msa.lookup!; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048
https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048:256,Availability,Error,Error,256,"as a follow up comment, i get this error when run the suggested ""non-easy-search"" commands:. ```; mmseqs createdb query.fasta qdb; mmseqs search qdb target result tmp; mmseqs result2msa qdb target result result_msa; mmseqs unpackdb result_msa outdir; ```. Error:; ```; Cannot open lookup file result_msa.lookup!; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048
https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1519543477:468,Availability,error,error,468,"> result2msa can do everything `filterresult` can do, you don't need it.; > ; > Also its more comfortable to not use `easy-search` if you want to create an MSA:; > ; > ```; > mmseqs createdb query.fasta qdb; > mmseqs search qdb target result tmp; > mmseqs result2msa qdb target result result_msa; > mmseqs unpackdb result_msa outdir; > ```; > ; > Then you don't have to go spelunking deep into the tmp folder to find the intermediate alignment result file. I found an error when calling 'mmseqs unpackdb result_msa outdir' for . `No datafile could be found for result_msa `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1519543477
https://github.com/soedinglab/MMseqs2/issues/696#issuecomment-1515775556:0,Integrability,Depend,Depends,0,"Depends on your use-case. What data are you clustering? Linclust is not as sensitive as the full clustering workflow. Linclust is also executed as the first stage of the ""normal"" cluster workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/696#issuecomment-1515775556
https://github.com/soedinglab/MMseqs2/issues/697#issuecomment-1834394183:34,Availability,error,error,34,"Hi @zzsunday, i'm facing the same error. did you manage to figure out the solution?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697#issuecomment-1834394183
https://github.com/soedinglab/MMseqs2/issues/698#issuecomment-1526483865:60,Availability,error,errors,60,Apologies but it appears that this is not a real issue. The errors in the alignment were artifacts of extracting alignment data from a cluster_DB not the underlying alignment_DB. Proper association of alignment data with the cluster sequences reveals that the coverage parameter works as intended. . This issue can be closed and deleted. Best; Victor,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698#issuecomment-1526483865
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1552387960:178,Deployability,pipeline,pipeline,178,"You can achieve this by manually cascading your clustering steps. We have implemented something like this a long time ago for Uniclust (https://github.com/milot-mirdita/uniclust-pipeline/blob/9b37347d1e9bb0153efcb986b5d828f9f4a316f0/uniclust_workflow.sh#LL67C7-L128C24). However, this script is not up-to-date, but the general strategy is sound. Regarding the consistency itself, please refer to this answer:; https://github.com/soedinglab/MMseqs2/issues/115#issuecomment-423111623",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1552387960
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553508828:15,Security,access,access,15,I am unable to access the uniclust page (page not found). Would you mind sharing another link?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553508828
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553952874:64,Deployability,pipeline,pipeline,64,Sorry this one i meant:. https://github.com/soedinglab/uniclust-pipeline/blob/ec52afc312baab5178ce709caebb41bbae9bb3f0/uniclust_workflow.sh#L49-L133,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553952874
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:293,Availability,echo,echo,293,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:366,Availability,echo,echo,366,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:432,Availability,echo,echo,432,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:597,Availability,echo,echo,597,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:641,Availability,echo,echo,641,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:2787,Availability,down,down,2787,"tep$STEP"" ""$TMPPATH/aln_step$STEP"" --min-seq-id 0.9 -c 0.95 --cov-mode 1; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_frag"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_frag.index"" > ""$TMPPATH/order_frag""; mmseqs createsubdb ""$TMPPATH/order_frag"" $INPUT ""$TMPPATH/input_step_redundancy"". # filter redundancy; INPUT=""$TMPPATH/input_step_redundancy""; mmseqs clusthash $INPUT ""$TMPPATH/aln_redundancy"" --min-seq-id 0.9; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_redundancy.index"" > ""$TMPPATH/order_redundancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:3507,Availability,down,down,3507,"undancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4300,Availability,down,down,4300,"reatesubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4596,Availability,down,down,4596,"PATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5056,Availability,down,down,5056," > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-sc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5372,Availability,error,error,5372,"INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6431,Availability,mask,mask,6431,"023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6440,Availability,mask,mask-pr,6440,"023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6458,Availability,mask,mask-lower-case,6458,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7003,Availability,mask,mask,7003,"ccept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7012,Availability,mask,mask-prob,7012,"ccept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7028,Availability,mask,mask-lower-case,7028,"ad-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7554,Availability,mask,mask,7554,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7563,Availability,mask,mask,7563,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7581,Availability,mask,mask-lower-case,7581,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7840,Availability,Error,Error,7840,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7865,Availability,Error,Error,7865,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:670,Deployability,RELEASE,RELEASE,670,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:763,Deployability,RELEASE,RELEASE,763,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4030,Deployability,RELEASE,RELEASE,4030,"step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4890,Deployability,RELEASE,RELEASE,4890," ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5217,Deployability,RELEASE,RELEASE,5217," > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-sc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5793,Integrability,wrap,wrapped-scoring,5793,"_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6273,Modifiability,extend,extend,6273,"p0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6535,Modifiability,extend,extendable,6535,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7147,Modifiability,extend,extendable,7147,"e-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I wan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7700,Modifiability,extend,extendable,7700,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7811,Modifiability,variab,variable,7811,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6044,Performance,load,load-mode,6044,"ep1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:2407,Safety,redund,redundancy,2407,"id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER_FRAG_PAR}; mmseqs rescorediagonal ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" --min-seq-id 0.9 -c 0.95 --cov-mode 1; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_frag"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_frag.index"" > ""$TMPPATH/order_frag""; mmseqs createsubdb ""$TMPPATH/order_frag"" $INPUT ""$TMPPATH/input_step_redundancy"". # filter redundancy; INPUT=""$TMPPATH/input_step_redundancy""; mmseqs clusthash $INPUT ""$TMPPATH/aln_redundancy"" --min-seq-id 0.9; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_redundancy.index"" > ""$TMPPATH/order_redundancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:3940,Safety,redund,redundancy,3940,"step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6483,Security,hash,hash-shift,6483,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7093,Security,hash,hash-shift,7093,"e-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I wan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7646,Security,hash,hash-shift,7646,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:118,Availability,down,download,118,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1341,Availability,down,down,1341,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:46,Deployability,release,release,46,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:101,Deployability,release,release,101,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1635,Deployability,RELEASE,RELEASE,1635,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1290,Energy Efficiency,adapt,adapt,1290,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1290,Modifiability,adapt,adapt,1290,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1809,Safety,avoid,avoid,1809,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:112,Availability,error,error,112,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:204,Availability,error,error,204,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:297,Availability,error,error,297,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:390,Availability,error,error,390,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:483,Availability,error,error,483,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360:274,Deployability,RELEASE,RELEASE,274,"Another issue I notice is that not all representative sequences in 30% are found in 50% or 70%, i.e. the clustering is not ""hierarchical"". I added the following lines to extract the representative sequences from the clustered. ; ```; mmseqs createsubdb $OUTDIR/uniclust50_${RELEASE} $SEQUENCE_DB $OUTDIR/uniclust50_${RELEASE}_rep; mmseqs convert2fasta $OUTDIR/uniclust50_${RELEASE}_rep uniclust50_rep.fasta; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360:317,Deployability,RELEASE,RELEASE,317,"Another issue I notice is that not all representative sequences in 30% are found in 50% or 70%, i.e. the clustering is not ""hierarchical"". I added the following lines to extract the representative sequences from the clustered. ; ```; mmseqs createsubdb $OUTDIR/uniclust50_${RELEASE} $SEQUENCE_DB $OUTDIR/uniclust50_${RELEASE}_rep; mmseqs convert2fasta $OUTDIR/uniclust50_${RELEASE}_rep uniclust50_rep.fasta; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360
https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360:373,Deployability,RELEASE,RELEASE,373,"Another issue I notice is that not all representative sequences in 30% are found in 50% or 70%, i.e. the clustering is not ""hierarchical"". I added the following lines to extract the representative sequences from the clustered. ; ```; mmseqs createsubdb $OUTDIR/uniclust50_${RELEASE} $SEQUENCE_DB $OUTDIR/uniclust50_${RELEASE}_rep; mmseqs convert2fasta $OUTDIR/uniclust50_${RELEASE}_rep uniclust50_rep.fasta; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360
https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1546709197:36,Availability,down,downloaded,36,"I used mmseqs databases NR which re-downloaded NR from NCBI and prepared everything as databases which are now working fine. So, not sure why the above didn't work, but the workflow is now moving again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1546709197
https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108:3,Availability,Down,Download,3,> #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz. > #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot. It's probably because there're no taxidmapping information the way you make blastdb without `-taxid_map`.; Read this [Building a BLAST database with your (local) sequences](https://www.ncbi.nlm.nih.gov/books/NBK569841/). or you could download preformatted nr (https://ftp.ncbi.nlm.nih.gov/blast/db/nr.00.tar.gz ~ https://ftp.ncbi.nlm.nih.gov/blast/db/nr.79.tar.gz the numbers may change by time) and try again. It works for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108
https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108:387,Availability,down,download,387,> #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz. > #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot. It's probably because there're no taxidmapping information the way you make blastdb without `-taxid_map`.; Read this [Building a BLAST database with your (local) sequences](https://www.ncbi.nlm.nih.gov/books/NBK569841/). or you could download preformatted nr (https://ftp.ncbi.nlm.nih.gov/blast/db/nr.00.tar.gz ~ https://ftp.ncbi.nlm.nih.gov/blast/db/nr.79.tar.gz the numbers may change by time) and try again. It works for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108
https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:16,Availability,error,error,16,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170
https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:89,Availability,fault,fault,89,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170
https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:154,Availability,error,error,154,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170
https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:146,Testability,log,log,146,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170
https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:343,Testability,test,test,343,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170
https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714:597,Availability,down,down,597,"`--sort-results` is linclust parameter that is confusingly visible within the `search` workflow, please ignore that. And regarding `--max-accept`, i understand now what you want to achieve, sorry it doesn't quite do what you want. ; What it does it go through the prefiltering list in ungapped alignment order from best score to worst score and align again with Smith-Waterman. Each accepted it is added to the result (and the result list is sorted by E-value). Once it has accepted 5, it stop and doesn't consider the rest of the list anymore. . There could be a hit with a lower E-value further down the list than the E-values produced by the first 5 accepted hits. . We have had a request for a parameter like you propose before. We should definite add this parameter. To get the size of the output under control I would propose to just use a larger value for `--max-accept` (e.g. 20). It becomes increasingly unlikely that you will miss the best possible hits. But yeah, we need a new parameter to cover your use-case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714
https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557635465:436,Availability,error,errors,436,"I have recently migrated the binary server to a different machine since the old one was full. The new server seems to have the issue that the first requests fails and then subsequent requests don't seem to have any issues. I think I have to coordinate with our University IT, I don't see any reason on the server why this should be happening. To fix your CI for now I would recommend to add curl retry flags `curl --retry 5 --retry-all-errors` (or the alternative wget flags). Sorry about this :/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557635465
https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:171,Availability,error,errors,171,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725
https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:299,Availability,down,download,299,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725
https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:246,Performance,perform,perform,246,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725
https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:796,Availability,error,error,796,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129
https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:339,Deployability,release,release,339,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129
https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:922,Security,validat,validate,922,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129
https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:562,Usability,clear,cleared,562,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129
https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989:252,Availability,avail,available,252,"To slightly expand on this, `easy-cluster` just calls `cluster` and a few modules to make the clustering tsv file and the FASTA files. It itself doesn't do anything special, however generating the cluster FASTA files is a bit tricky with the currently available MMseqs2 modules, so the `easy-cluster` workflow does that for you. The clustering procedure should be mostly the same since the Linclust paper (the combined Linclust+MMseqs2 clustering). The `--cluster-reassign` parameter to fix hits with sequence-identity/coverages below the given thresholds that were allowed due to the cascading is not described in the paper and the nucleotide clustering was also not available then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989
https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989:668,Availability,avail,available,668,"To slightly expand on this, `easy-cluster` just calls `cluster` and a few modules to make the clustering tsv file and the FASTA files. It itself doesn't do anything special, however generating the cluster FASTA files is a bit tricky with the currently available MMseqs2 modules, so the `easy-cluster` workflow does that for you. The clustering procedure should be mostly the same since the Linclust paper (the combined Linclust+MMseqs2 clustering). The `--cluster-reassign` parameter to fix hits with sequence-identity/coverages below the given thresholds that were allowed due to the cascading is not described in the paper and the nucleotide clustering was also not available then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989
https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490:50,Deployability,patch,patching,50,"Building on `linux-rocky8-x86_64`. I've just been patching it for Spack, so figured I'd push it across. These changes are as per https://gcc.gnu.org/gcc-13/porting_to.html",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490
https://github.com/soedinglab/MMseqs2/issues/716#issuecomment-1588564368:307,Modifiability,variab,variable,307,This looks about right. MMseqs2 creates one output file per thread and doesn't bother merging them in the end if its not needed. You can use `easy-cluster` instead of `cluster` to generate human readable files instead of the internal MMseqs2 formats. You can also set the `MMSEQS_FORCE_MERGE=1` environment variable to make it merge all databases data splits into a single data files.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716#issuecomment-1588564368
https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092:23,Availability,mask,masking,23,This might either be a masking thing or a compositonal bias correction issue. In the web-server you can add --mask 0 --comp-bias-corr 0 to both the indexing and search parameters json field (delete the .idx files first). Same parameters for the command line Foldseek.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092
https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092:110,Availability,mask,mask,110,This might either be a masking thing or a compositonal bias correction issue. In the web-server you can add --mask 0 --comp-bias-corr 0 to both the indexing and search parameters json field (delete the .idx files first). Same parameters for the command line Foldseek.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092
https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013:272,Integrability,depend,depend,272,"I don't think you need much changing. The defaults are set to optimize sensitivity while keeping false positives low. You can further decrease the E-value threshold, but you can do that also after the search just based on the result file. Sequence identity, coverage etc. depend a lot on your specific research question.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013
https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013:62,Performance,optimiz,optimize,62,"I don't think you need much changing. The defaults are set to optimize sensitivity while keeping false positives low. You can further decrease the E-value threshold, but you can do that also after the search just based on the result file. Sequence identity, coverage etc. depend a lot on your specific research question.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013
https://github.com/soedinglab/MMseqs2/issues/726#issuecomment-1856024215:39,Usability,progress bar,progress bar,39,@LittletreeZou Unfortunately without a progress bar I wasn't sure how much longer it needed to finish. I killed it after it ran for ~30 hours.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726#issuecomment-1856024215
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1647988602:76,Availability,down,download,76,"@mlcoleman ; I have the same problem after executing the shell commands in `download.sh` manually.; For the `gtdb.lookup` file, did you just fix the third column to not start at 1 again after 65535? How did you create and use the `gtdb.taxid.mapping` file (do you mean adding the tax-ids to `gtdb_mapping` which has only 1 column now?):; I would make a protein-id vs genome table and then (fasta headers from `protein_faa_reps`) and merge with the proteins IDs in the new `gtdb.lookup` and the tax-ids in `tmp/taxonomy/mapping_genomes`; edit: I renumbered the genome ids in `gtdb.lookup` to go from 1 to 85205 and then replaced the `gtdb_mapping` file with one that links each protein-id (column1) to the tax-id of the corresponding genome (column2), tax-ids are from `taxonomy/mapping_genomes`. I hope that is what it is supposed to be",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1647988602
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:673,Availability,down,downstream,673,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:711,Availability,Down,Download,711,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:1109,Availability,error,error,1109,"seqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.1_1 19668; 256163109 CAKTHQ010000058.1_10 19668; 256163110 CAKTHQ010000061.1_12 19668; 256163111 CAKTHQ010",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:872,Deployability,release,releases,872,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7528,Deployability,pipeline,pipeline,7528,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:6957,Performance,Perform,Perform,6957,"512.1_7; RS_GCF_000970205.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7114,Security,validat,validate,7114,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7182,Security,validat,validate,7182,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1693307274:271,Availability,down,downloads,271,"I fixed the taxonomy issue, we were using an unsigned short for the source file names. This changes was introduced a while ago and I had forgotten that we use this mechanism in GTDB and that this number can become large. Taxonomy should work now and thanks to @apcamargo downloads should also work (#742). . If you have an existing gtdb.lookup file, the following `awk` script should fix it in theory:. ```; awk 'BEGIN { threshold = 65535 } $3 == threshold && increment == 0 { increment = 1 } $3 == 0 && increment == 1 { increment = 0; overflow++; } { print $1""\t""$2""\t""$3 + (overflow * (threshold + 1)); }' gtdb.lookup > gtdb_fixed.lookup; mv gtdb_fixed.lookup gtdb.lookup; ```. However, I might have gotten it also wrong. I'd recommend to redownload with the latest MMseqs2 with the source fix included.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1693307274
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:290,Deployability,update,updated,290,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:74,Testability,test,tested,74,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383
https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:324,Testability,test,test,324,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383
https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1634249517:55,Testability,log,logic,55,"Milot mentioned already ALP. You can find the relevant logic for the E-value computation in `src/alignment/EvalueComputation.h`. E.g. our precomputed values for BLOSUM62 are here. ; The first two values are lambda and k.; ```. {""blosum62.out"", 11, 1, true, {0.27359865037097330642, 0.044620920658722244834,; 1.5938724404943873658, -19.959867650284412122,; 1.5938724404943873658, -19.959867650284412122,; 30.455610143099914211, -622.28684628915891608,; 30.455610143099914211, -622.28684628915891608,; 29.602444874818868215, -601.81087985041381216}},; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1634249517
https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817:255,Modifiability,extend,extend,255,"Thank you for quick response! ALP was indeed the missing piece in my puzzle. I am looking at `src/alignment/EvalueComputation.h` and I am a little confused about the default params for nucleotide alignment. From these lines I can see default gap open and extend penalties are 7 and 1:; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L56-L62. But the CLI help for `search` command shows 5 and 2:; ``` ; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; ```; Is it a bug or are those two unrelated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817
https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817:525,Modifiability,extend,extend,525,"Thank you for quick response! ALP was indeed the missing piece in my puzzle. I am looking at `src/alignment/EvalueComputation.h` and I am a little confused about the default params for nucleotide alignment. From these lines I can see default gap open and extend penalties are 7 and 1:; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L56-L62. But the CLI help for `search` command shows 5 and 2:; ``` ; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; ```; Is it a bug or are those two unrelated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817
https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433:53,Deployability,configurat,configuration,53,I would love to know what is the substitution matrix configuration for nucleotides too. Which one is correct?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433
https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433:53,Modifiability,config,configuration,53,I would love to know what is the substitution matrix configuration for nucleotides too. Which one is correct?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433
https://github.com/soedinglab/MMseqs2/issues/736#issuecomment-1674358317:361,Modifiability,extend,extend,361,"You can try to use the parameters we used in our [SpacePHARER manuscript](https://academic.oup.com/bioinformatics/article/37/19/3364/6207963) for finding CRISPR spacers with MMseqs2 (see the supplement). These should correspond to the following parameters:; ```; -k 6 --spaced-kmer-mode 1 --spaced-kmer-pattern 11011101 --sub-mat VTML40.out --gap-open 16 --gap-extend 2; ```. As the matches are of similar length, these parameters should most likely work much better for your use-case. Though, I am not sure it will actually solve the weird number of req-seqs. This might be a separate issue. I think we might have some special-cased code for max-seq 1.0. But, I will have to take a closer look for that. Edit: Note that these parameters were used in SpacePHARER to search, not to cluster. However, I do expect that they should also work better for clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/736#issuecomment-1674358317
https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339:65,Availability,down,download,65,"Tested the mmseqs master branch after the PR was merged, and the download works now! Thanks @apcamargo Note that issue #729 persists, so taxonomy will not work properly with the GTDB database. However, I will go ahead and close this specific issue for now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339
https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339:0,Testability,Test,Tested,0,"Tested the mmseqs master branch after the PR was merged, and the download works now! Thanks @apcamargo Note that issue #729 persists, so taxonomy will not work properly with the GTDB database. However, I will go ahead and close this specific issue for now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339
https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1696662290:6,Deployability,update,update,6,"Quick update: #729 now also seems to be resolved, so the GTDB database should work properly in the latest mmseqs master branch (from commit 1d62fa0)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1696662290
https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:186,Availability,down,downloadFile,186,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476
https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:312,Availability,down,downloadFile,312,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476
https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:244,Deployability,release,releases,244,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476
https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:370,Deployability,release,releases,370,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476
https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028:208,Availability,down,download,208,"bioconda has currently no support for ARM. Though there are some open pull requests in bioconda that will enable support for ARM on Linux at some point. . If you want to use MMseqs2 on an ARM machine, please download the ARM64 binaries from the latest GitHub release or from [mmseqs.com/latest](https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028
https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028:259,Deployability,release,release,259,"bioconda has currently no support for ARM. Though there are some open pull requests in bioconda that will enable support for ARM on Linux at some point. . If you want to use MMseqs2 on an ARM machine, please download the ARM64 binaries from the latest GitHub release or from [mmseqs.com/latest](https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028
https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706726437:391,Availability,error,error,391,"First: both the sensitivity parameter and the iteration parameter do not do anything for nucleotide MMseqs2 searches. sensitivity is the parameter for adjusting the length of the similar k-mer lists, which are not generated for nucleotides (all substitutions have the same score, so you can't generate similar k-mers). Profile searches are also not implemented for nucleotides. However, the error is still very surprising and should not happen. Could you share the sequences with us?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706726437
https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853:69,Availability,down,download,69,"Thank you for your reply; my target sequences are some CDS sequences download from NCBI, and query sequences are some sequences fragment of 300bp; here are some partial sequences of the target and query file.; [https://gist.github.com/hwy7/cd5486d2a61c3b6bfe990a3ada669318](url); Please let me know if you need any more information or if there are specific analyses you would like to perform with this data.; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853
https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853:384,Performance,perform,perform,384,"Thank you for your reply; my target sequences are some CDS sequences download from NCBI, and query sequences are some sequences fragment of 300bp; here are some partial sequences of the target and query file.; [https://gist.github.com/hwy7/cd5486d2a61c3b6bfe990a3ada669318](url); Please let me know if you need any more information or if there are specific analyses you would like to perform with this data.; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1514,Availability,error,error,1514,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:0,Deployability,UPDATE,UPDATE,0,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1223,Integrability,message,message,1223,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1355,Performance,optimiz,optimize,1355,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1417,Safety,Avoid,Avoid,1417,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1732178119:98,Energy Efficiency,efficient,efficiently,98,"I missed this issue. I would not recommend to create an index for a very large DB, for it to work efficiently you'd need multiple TB of RAM. I would recommend to merge all sets of queries into one set and repeat the search with this one set against the DB. You can still untangle from which set each query came later during `convertalis` with the `qset` or `qsetid` columns for `--format-output`. `qsetid` will give you the numeric value of the set (third value in the .lookup file) and file name (second value in the .source file, where the first value there maps to the third value in the .lookup file). So to get the default columns + qset would, you'd use:. `--format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qset`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1732178119
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077:574,Integrability,depend,depends,574,"Thank you for the help, I missed the part about the index being fully loaded in the memory (instead I read in the article that a db used multiple times should be indexed, which sounds broader than the niche use case you describe). . As #519 mentions, what is the difference between `concat` and `merge` ? I guess a sequence present in both `DB` will be search only once and reported with both `qset` with `merge` and twice in `concat` ? That would a huge advantage for my work as I have replicates. Also, is there a way to determine how big the index will be ? I suppose it depends on the `max-seq-len` parameter ?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077:70,Performance,load,loaded,70,"Thank you for the help, I missed the part about the index being fully loaded in the memory (instead I read in the article that a db used multiple times should be indexed, which sounds broader than the niche use case you describe). . As #519 mentions, what is the difference between `concat` and `merge` ? I guess a sequence present in both `DB` will be search only once and reported with both `qset` with `merge` and twice in `concat` ? That would a huge advantage for my work as I have replicates. Also, is there a way to determine how big the index will be ? I suppose it depends on the `max-seq-len` parameter ?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:677,Energy Efficiency,consumption,consumption,677,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:729,Integrability,depend,depends,729,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067
https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:714,Usability,guid,guide,714,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067
https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866:1093,Integrability,depend,depends,1093,"1) I am looking through the code and seeing some bugs in how coverage works within the alignment for taxonomy.; Ignoring if this makes sense or not, its definitely broken code-wise. . It also would not be super well defined which coverage to compute, since we do multiple alignments with the 2bLCA procedure. What is currently implemented (however broken) is that it would try to compute the coverage between the extracted subfragment of the database against the other database hits. https://github.com/soedinglab/MMseqs2/wiki#the-concept-of-lca In the figure here this would be the coverage of the pink hit 1 fragment versus Hit 2, 3 and 4. I am not sure which coverage would make the most sense to compute and in any case would require us to run new benchmarks. 2) You need to pass `--tax-output-mode 2` to also compute and store the alignments. They will be placed at `taxresults.database_aln` in your case. 3) easy-taxonomy and taxonomy behave the same, the only difference is that the former takes FASTA input while the later only takes MMseqs2 databases. The main algorithmic difference depends on the input type though. With nucleotide input it will use the contig taxonomy procedure described in the MMseqs2 taxonomy paper, this includes the fast ORF-prefiltering and the taxonomy majority voting. The ORF-prefiltering can be overaggressive for short-reads, our previous recommendation was to disable the ORF-prefiltering with `--orf-filter 0` if you give it short read input. We are currently developing a better fix in #832 currently that should not require messing with this parameter. For protein input, the ORF-filtering and majority voting does not happen.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866
https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866:752,Testability,benchmark,benchmarks,752,"1) I am looking through the code and seeing some bugs in how coverage works within the alignment for taxonomy.; Ignoring if this makes sense or not, its definitely broken code-wise. . It also would not be super well defined which coverage to compute, since we do multiple alignments with the 2bLCA procedure. What is currently implemented (however broken) is that it would try to compute the coverage between the extracted subfragment of the database against the other database hits. https://github.com/soedinglab/MMseqs2/wiki#the-concept-of-lca In the figure here this would be the coverage of the pink hit 1 fragment versus Hit 2, 3 and 4. I am not sure which coverage would make the most sense to compute and in any case would require us to run new benchmarks. 2) You need to pass `--tax-output-mode 2` to also compute and store the alignments. They will be placed at `taxresults.database_aln` in your case. 3) easy-taxonomy and taxonomy behave the same, the only difference is that the former takes FASTA input while the later only takes MMseqs2 databases. The main algorithmic difference depends on the input type though. With nucleotide input it will use the contig taxonomy procedure described in the MMseqs2 taxonomy paper, this includes the fast ORF-prefiltering and the taxonomy majority voting. The ORF-prefiltering can be overaggressive for short-reads, our previous recommendation was to disable the ORF-prefiltering with `--orf-filter 0` if you give it short read input. We are currently developing a better fix in #832 currently that should not require messing with this parameter. For protein input, the ORF-filtering and majority voting does not happen.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:79,Availability,error,error,79,"zcat the gzipped fq file before execute mmseqs easy-search change nothing, the error remains the same. ```; easy-search B5177-2-N919D_T1_interleaved.fq pfama_20230914/pfam-a-full B5177-2-N919D_T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1206,Availability,Mask,Mask,1206,"T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1223,Availability,Mask,Mask,1223,"T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1417,Availability,Mask,Mask,1417,"d 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4396,Availability,mask,mask,4396,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4405,Availability,mask,mask-lower-case,4405,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4865,Availability,Mask,Masked,4865,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5817,Availability,Error,Error,5817,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5847,Availability,Error,Error,5847,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5872,Availability,Error,Error,5872,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4616,Energy Efficiency,consumption,consumption,4616,"==========================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:381,Integrability,wrap,wrapped,381,"zcat the gzipped fq file before execute mmseqs easy-search change nothing, the error remains the same. ```; easy-search B5177-2-N919D_T1_interleaved.fq pfama_20230914/pfam-a-full B5177-2-N919D_T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5654,Modifiability,extend,extend,5654,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4494,Performance,load,load-mode,4494,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5706,Performance,load,load-mode,5706,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947
https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731163883:204,Performance,optimiz,optimizations,204,"Thanks you! The change makes sense, however, we have actually modified this part. We check here if a sequence is broken across multiple lines or if its a single line sequence. This enables some different optimizations later in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731163883
https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731189843:10,Deployability,patch,patch,10,"Yeah, the patch needs to be changed accordingly. Shouldn't be too hard to do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731189843
https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731335551:83,Testability,test,test,83,"Sorry, I missed this `if` statement completely. I see why it passed the regression test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731335551
https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741117323:391,Performance,perform,performance,391,"I would not recommend to use indexing for a weekly job. Without pre-indexing you can use a smaller machine, i.e. in the 128-256GB RAM range. 500k queries vs UniProt should not be a big issue for such a machine. Pre-indexing usually helps if you want to search with very single queries or very small sets, or if you have little memory and very fast storage. In other cases it might even hurt performance, I am not sure if this issue was ever resolve in Linux, but creating an index on the fly allows to use a Linux kernel mechanism called Transparent Huge Pages (THP), which results in about 10-15% faster run time for larger batch searches. So I would recommend to delete all `.idx` files (rm -f -- DB.idx.*) and proceed without `createindex`. Additionally, for the PDB, I also recommend to first do a 100% seq.id. clustering to not repeat searches for identical queries. Regarding your question: If the machine running `createindex` did not have enough RAM to fully fit the index it will split it into N splits. These are the targetDB.idx.0 ... targetDB.idx.N files you see. You can manually disable this by specifying `--split 1`, then it will create only the `targetDB.idx` file (and some supporting files). In this case you will still need a machine that can fit the whole precomputed index into memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741117323
https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741139009:400,Performance,perform,performance,400,"> I would not recommend to use indexing for a weekly job. Without pre-indexing you can use a smaller machine, i.e. in the 128-256GB RAM range. 500k queries vs UniProt should not be a big issue for such a machine.; > ; > Pre-indexing usually helps if you want to search with very single queries or very small sets, or if you have little memory and very fast storage. In other cases it might even hurt performance, I am not sure if this issue was ever resolve in Linux, but creating an index on the fly allows to use a Linux kernel mechanism called Transparent Huge Pages (THP), which results in about 10-15% faster run time for larger batch searches.; > ; > So I would recommend to delete all `.idx` files (rm -f -- DB.idx.*) and proceed without `createindex`.; > ; > Additionally, for the PDB, I also recommend to first do a 100% seq.id. clustering to not repeat searches for identical queries.; > ; > Regarding your question: If the machine running `createindex` did not have enough RAM to fully fit the index it will split it into N splits. These are the targetDB.idx.0 ... targetDB.idx.N files you see. You can manually disable this by specifying `--split 1`, then it will create only the `targetDB.idx` file (and some supporting files). In this case you will still need a machine that can fit the whole precomputed index into memory. Thank you, that's very helpful! I do remember reading about the THP but now everything makes more sense. . In addition to clustering identical queries, do you also recommend merging the query seqs into one set (like you mentioned in the other post)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741139009
https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741160509:25,Energy Efficiency,efficient,efficient,25,"Yes! MMseqs2 is not very efficient with small sets of queries. `createindex` is the solution for that, however it comes with many other trade-offs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741160509
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480:66,Availability,down,download,66,"The issue is fixed in git, but not part of a release yet. You can download precompiled binaries from https://mmseqs.com/latest that contains the fix or compile MMseqs2 from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480:45,Deployability,release,release,45,"The issue is fixed in git, but not part of a release yet. You can download precompiled binaries from https://mmseqs.com/latest that contains the fix or compile MMseqs2 from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:108,Availability,Down,Downloading,108,"Hi, . I followed this thread and used the latest binary to run the following code, issues with GTDB.lookup. Downloading data from GTDB appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:811,Availability,error,error,811,"Hi, . I followed this thread and used the latest binary to run the following code, issues with GTDB.lookup. Downloading data from GTDB appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1009,Availability,Down,Download,1009,"appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1290,Availability,down,download,1290, output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1334,Availability,Down,Downloading,1334,77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_ge,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1381,Availability,Down,Download,1381,"001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1507,Availability,Down,Download,1507,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1787,Availability,down,download,1787,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:2528,Availability,Error,Error,2528,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:2381,Performance,Load,Loading,2381,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:2428,Performance,Load,Loading,2428,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:2481,Performance,Load,Loading,2481,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806
https://github.com/soedinglab/MMseqs2/issues/760#issuecomment-1794316852:0,Deployability,Release,Release,0,Release 15 includes all the GTDB changes and is up on conda.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/760#issuecomment-1794316852
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874:7,Availability,down,download,7,"Please download the latest git mmseqs as prebuilt binaries from https://mmseqs.com/latest or compile from source. The issue is already fixed there, however it’s not part of a release yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874:175,Deployability,release,release,175,"Please download the latest git mmseqs as prebuilt binaries from https://mmseqs.com/latest or compile from source. The issue is already fixed there, however it’s not part of a release yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799:138,Availability,down,downstream,138,"Thanks, I’ll give that a try! Will the database be compatible with the current release version, or will I have to use the git version for downstream analysis too?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799:79,Deployability,release,release,79,"Thanks, I’ll give that a try! Will the database be compatible with the current release version, or will I have to use the git version for downstream analysis too?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:19,Availability,error,error,19,"Hi, I get the same error with the latest version:. ```; $ ./mmseqs/bin/mmseqs databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0. Create directory tmp; databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0 . MMseqs Version: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 64; Verbosity 3. 10/13 10:50:03 [NOTICE] Downloading 1 item(s); [#156257 75MiB/5.7GiB(1%) CN:5 DL:91MiB ETA:1m3s]; [#156257 184MiB/5.7GiB(3%) CN:5 DL:101MiB ETA:55s]; [#156257 293MiB/5.7GiB(5%) CN:5 DL:104MiB ETA:53s]; [#156257 402MiB/5.7GiB(6%) CN:5 DL:106MiB ETA:51s]; [#156257 512MiB/5.7GiB(8%) CN:5 DL:107MiB ETA:49s]; [#156257 622MiB/5.7GiB(10%) CN:5 DL:107MiB ETA:48s]; [#156257 732MiB/5.7GiB(12%) CN:5 DL:108MiB ETA:47s]; [#156257 838MiB/5.7GiB(14%) CN:5 DL:108MiB ETA:46s]; [#156257 0.9GiB/5.7GiB(16%) CN:5 DL:108MiB ETA:45s]; [#156257 1.0GiB/5.7GiB(18%) CN:5 DL:108MiB ETA:44s]; [#156257 1.1GiB/5.7GiB(19%) CN:5 DL:110MiB ETA:42s]; [#156257 1.2GiB/5.7GiB(21%) CN:5 DL:110MiB ETA:41s]; [#156257 1.3GiB/5.7GiB(23%) CN:5 DL:110MiB ETA:40s]; [#156257 1.4GiB/5.7GiB(25%) CN:5 DL:110MiB ETA:39s]; [#156257 1.5GiB/5.7GiB(27%) CN:5 DL:109MiB ETA:38s]; [#156257 1.6GiB/5.7GiB(29%) CN:5 DL:108MiB ETA:38s]; [#156257 1.7GiB/5.7GiB(30%) CN:5 DL:108MiB ETA:37s]; [#156257 1.8GiB/5.7GiB(32%) CN:5 DL:109MiB ETA:35s]; [#156257 1.9GiB/5.7GiB(34%) CN:5 DL:109MiB ETA:34s]; [#156257 2.0GiB/5.7GiB(36%) CN:5 DL:109MiB ETA:33s]; [#156257 2.1GiB/5.7GiB(38%) CN:5 DL:109MiB ETA:32s]; [#156257 2.3GiB/5.7GiB(40%) CN:5 DL:109MiB ETA:31s]; [#156257 2.4GiB/5.7GiB(42%) CN:5 DL:109MiB ETA:30s]; [#156257 2.5GiB/5.7GiB(44%) CN:5 DL:109MiB ETA:29s]; [#156257 2.6GiB/5.7GiB(45%) CN:5 DL:110MiB ETA:28s]; [#156257 2.7GiB/5.7GiB(47%) CN:5 DL:110MiB ETA:27s]; [#156257 2.8GiB/5.7GiB(49%) CN:5 DL:110MiB ETA:26s]; [#156257 2.9GiB/5.7GiB(51%) CN:5 DL:110MiB ETA:25s]; [#156257 3.0GiB/5.7GiB(53%) CN:5 DL:110MiB E",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:456,Availability,Down,Downloading,456,"Hi, I get the same error with the latest version:. ```; $ ./mmseqs/bin/mmseqs databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0. Create directory tmp; databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0 . MMseqs Version: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 64; Verbosity 3. 10/13 10:50:03 [NOTICE] Downloading 1 item(s); [#156257 75MiB/5.7GiB(1%) CN:5 DL:91MiB ETA:1m3s]; [#156257 184MiB/5.7GiB(3%) CN:5 DL:101MiB ETA:55s]; [#156257 293MiB/5.7GiB(5%) CN:5 DL:104MiB ETA:53s]; [#156257 402MiB/5.7GiB(6%) CN:5 DL:106MiB ETA:51s]; [#156257 512MiB/5.7GiB(8%) CN:5 DL:107MiB ETA:49s]; [#156257 622MiB/5.7GiB(10%) CN:5 DL:107MiB ETA:48s]; [#156257 732MiB/5.7GiB(12%) CN:5 DL:108MiB ETA:47s]; [#156257 838MiB/5.7GiB(14%) CN:5 DL:108MiB ETA:46s]; [#156257 0.9GiB/5.7GiB(16%) CN:5 DL:108MiB ETA:45s]; [#156257 1.0GiB/5.7GiB(18%) CN:5 DL:108MiB ETA:44s]; [#156257 1.1GiB/5.7GiB(19%) CN:5 DL:110MiB ETA:42s]; [#156257 1.2GiB/5.7GiB(21%) CN:5 DL:110MiB ETA:41s]; [#156257 1.3GiB/5.7GiB(23%) CN:5 DL:110MiB ETA:40s]; [#156257 1.4GiB/5.7GiB(25%) CN:5 DL:110MiB ETA:39s]; [#156257 1.5GiB/5.7GiB(27%) CN:5 DL:109MiB ETA:38s]; [#156257 1.6GiB/5.7GiB(29%) CN:5 DL:108MiB ETA:38s]; [#156257 1.7GiB/5.7GiB(30%) CN:5 DL:108MiB ETA:37s]; [#156257 1.8GiB/5.7GiB(32%) CN:5 DL:109MiB ETA:35s]; [#156257 1.9GiB/5.7GiB(34%) CN:5 DL:109MiB ETA:34s]; [#156257 2.0GiB/5.7GiB(36%) CN:5 DL:109MiB ETA:33s]; [#156257 2.1GiB/5.7GiB(38%) CN:5 DL:109MiB ETA:32s]; [#156257 2.3GiB/5.7GiB(40%) CN:5 DL:109MiB ETA:31s]; [#156257 2.4GiB/5.7GiB(42%) CN:5 DL:109MiB ETA:30s]; [#156257 2.5GiB/5.7GiB(44%) CN:5 DL:109MiB ETA:29s]; [#156257 2.6GiB/5.7GiB(45%) CN:5 DL:110MiB ETA:28s]; [#156257 2.7GiB/5.7GiB(47%) CN:5 DL:110MiB ETA:27s]; [#156257 2.8GiB/5.7GiB(49%) CN:5 DL:110MiB ETA:26s]; [#156257 2.9GiB/5.7GiB(51%) CN:5 DL:110MiB ETA:25s]; [#156257 3.0GiB/5.7GiB(53%) CN:5 DL:110MiB E",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3289,Availability,Down,Download,3289, CN:5 DL:110MiB ETA:18s]; [#156257 3.8GiB/5.7GiB(66%) CN:5 DL:110MiB ETA:17s]; [#156257 3.9GiB/5.7GiB(68%) CN:5 DL:110MiB ETA:16s]; [#156257 4.0GiB/5.7GiB(70%) CN:5 DL:110MiB ETA:15s]; [#156257 4.1GiB/5.7GiB(72%) CN:5 DL:111MiB ETA:14s]; [#156257 4.2GiB/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3346,Availability,Down,Download,3346,6257 4.0GiB/5.7GiB(70%) CN:5 DL:110MiB ETA:15s]; [#156257 4.1GiB/5.7GiB(72%) CN:5 DL:111MiB ETA:14s]; [#156257 4.2GiB/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3557,Availability,down,download,3557,/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0G,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3601,Availability,Down,Downloading,3601, CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3690,Availability,Down,Download,3690,56257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3745,Availability,Down,Download,3745,5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3953,Availability,down,download,3953,ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:10,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3997,Availability,Down,Downloading,3997,TA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5451,Availability,Down,Download,5451,CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5509,Availability,Down,Download,5509,c78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5721,Availability,down,download,5721,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5765,Availability,Down,Downloading,5765,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5812,Availability,Down,Download,5812,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5868,Availability,Down,Download,5868,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:6077,Availability,down,download,6077,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:6679,Availability,Error,Error,6679,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1768407343:20,Availability,error,error,20,I also get the same error with the latest version compiled from source. Any advice would be much appreciated!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1768407343
https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1791835361:5,Usability,usab,usability-pitfall,5,That usability-pitfall is on our side. Sorry :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1791835361
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245:31,Deployability,release,release,31,Does this issue also happen in release 14?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355:127,Availability,error,error,127,"@milot-mirdita yes, i installed the latest version (from https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ) and see the same error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355:22,Deployability,install,installed,22,"@milot-mirdita yes, i installed the latest version (from https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ) and see the same error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280:13,Availability,error,error,13,I think this error can happen if there is a space (or possible other whitespace) after the `>` and before the accession.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280:110,Security,access,accession,110,I think this error can happen if there is a space (or possible other whitespace) after the `>` and before the accession.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759870452:30,Availability,error,error,30,@milot-mirdita i've seen that error here: https://github.com/soedinglab/MMseqs2/issues/170; and have checked to make sure there are no spaces after `>`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759870452
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599:92,Availability,error,error,92,"Then I am quite confused :D . Would it be possible to share the FASTA file that causes this error? If not, can you try to ""bisect"" the file and try to convert each half until you identify what entry might be broken.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:64,Availability,error,error,64,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:92,Availability,down,downloaded,92,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:4,Deployability,update,updates,4,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:179,Deployability,release,release,179,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2082277114:56,Availability,error,error,56,Do you happen to know in which of these FASTA files the error occurs? That would help me reproduce the issue.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2082277114
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642:77,Availability,down,downloaded,77,"Thank you! I found the fasta causing the issue, and it turns out that when I downloaded it from NCBI, the download did not complete. When I redownloaded, and ran createdb, I did not get the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642:106,Availability,down,download,106,"Thank you! I found the fasta causing the issue, and it turns out that when I downloaded it from NCBI, the download did not complete. When I redownloaded, and ran createdb, I did not get the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642
https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642:190,Availability,error,error,190,"Thank you! I found the fasta causing the issue, and it turns out that when I downloaded it from NCBI, the download did not complete. When I redownloaded, and ran createdb, I did not get the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642
https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708:5,Availability,error,error,5,Same error. Hope it will be fixed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708
https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882:5,Availability,error,error,5,"Same error on clustering protein sequences with `easy-cluster`, command I used: ; ```bash; mmseqs easy-cluster raw/proteins.faa.gz processed/proteins.id50.c90 tmp \; -c 0.9 --min-seq-id 0.5 --threads 16 --cluster-reassign; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882
https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2042208116:13,Availability,error,error,13,Hello!; Same error with nucleotide sequences.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2042208116
https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:57,Availability,avail,available,57,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124
https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:71,Availability,down,download,71,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124
https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:394,Integrability,depend,depends,394,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124
https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:724,Testability,test,tested,724,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124
https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369:44,Availability,down,downloading,44,Opened one: #773 . Also compiled and tested downloading PDB database and it works fine. @milot-mirdita,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369
https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369:37,Testability,test,tested,37,Opened one: #773 . Also compiled and tested downloading PDB database and it works fine. @milot-mirdita,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369
https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904:94,Deployability,install,installed,94,Is there a way to specify the URL when calling `mmseqs databases`? . The version of `mmseqs2` installed via conda install still doesn't have this correction.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904
https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904:114,Deployability,install,install,114,Is there a way to specify the URL when calling `mmseqs databases`? . The version of `mmseqs2` installed via conda install still doesn't have this correction.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547:24,Deployability,release,release,24,Is this with the latest release? We had a few changes a while ago that are only officially part as of release 15; Maybe the issue is already fixed. I don't see anything immediately wrong. . Could you post the full command line output of both calls?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547:102,Deployability,release,release,102,Is this with the latest release? We had a few changes a while ago that are only officially part as of release 15; Maybe the issue is already fixed. I don't see anything immediately wrong. . Could you post the full command line output of both calls?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:400,Testability,log,log,400,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:467,Testability,log,log,467,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:659,Testability,log,log,659,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:724,Testability,log,log,724,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:148,Usability,simpl,simply,148,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1819653848:22,Testability,log,logically,22,"Hi,. There is nothing logically wrong with your script, however there are a couple of parameters whose default value is different from the value set by the easy-rbh workflow. One of them is the sensitivity/speed tradeoff `-s`, which is set by the easy-rbh to 5.7 (highly sensitive) but defaults to 4 when calling the rbh module directly. When I re-ran your rbh command as follows:; ```mmseqs rbh UP000000425_122586_protein UP000000429_85962_protein alnOffseted.db tmp -s 5.7```; I could get it to produce 590 results, as in the easy-rbh workflow. So what should you do now?; Try to examine the results using different sensitivity values (maybe even lower than 4). If lower sensitivities cover your need (e.g., in cases of close homologs), then you can use this parameter to speed up your code even more. Another thing:; I see that the easy-rbh also differs from two consecutive calls to createdb, followed by a call to rbh because of the `shuffle` parameter. In this specific case, changing this parameter (w/out changing `max-seq`) does not have an effect (i.e., I could get the number of results to change only through `-s`), but maybe @milot-mirdita has some good advice on how to set this parameter in the case of DYI-rbh. Milot, in the easy-rbh, it seems like the parameter setting is having a hard time as it gives the following warnings:. > Shuffle database cannot be combined with --createdb-mode 0; > We recompute with --shuffle 0; > Converting sequences; > Multiline fasta can not be combined with --createdb-mode 0; > We recompute with --createdb-mode 1. Maybe it is worth checking.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1819653848
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849018642:344,Deployability,pipeline,pipeline,344,"Thanks a lot for the response!; about the -s parameter - is it possible to calculate it according to the desired identity_percent cutoff?; Let's say I want to get all results with identity_percent > 40%, is there a way to calculate the required value for ""-s"" parameter?. (The reason I ask this is that I would like to set this parameter in my pipeline in a dynamic way according to a user-defined identity_percent cutoff). Thanks again",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849018642
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:1195,Availability,recover,recovered,1195,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:948,Safety,safe,safe,948,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:1195,Safety,recover,recovered,1195,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:784,Testability,benchmark,benchmarking,784,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333
https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:1050,Testability,benchmark,benchmark,1050,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1815727170:272,Security,access,accession,272,"Currently, everything is tailored to the NCBI taxonomy format (taxdump). For GTDB we transform their taxonomy to a names/nodes.dmp format). If your taxonomy is NCBI based, then you can just use their taxdump. Additionally, you need a mapping file pointing from a database accession to a taxid. For this create a TSV files that contains the same names as you can find in the `.lookup` (usually the first word of the FASTA header) and a second column with the taxid. You can give both of these to `createtaxdb` with the `--tax-mapping-file` and `--ncbi-tax-dump` and it will create the MMseqs2 taxonomy files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1815727170
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348:20,Availability,error,error,20,Will the conversion error out if there are missing taxonomic levels and the taxids are alphanumeric instead of numeric?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604:182,Availability,down,download,182,"Yes, you can point `createtaxdb` to your existing database with `--ncbi-tax-dump` and `--tax-mapping-file` as described above. In fact that's how the `databases` commands work, they download sequences, create a db with `createdb` and then manually none, one or both of the inputs for `createtaxdb` and call it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:92,Availability,error,error,92,"I have a few missing fields in my taxonomy levels. I'm assuming that's what is causing this error: . ```; easy-taxonomy test_euk.fasta MicroEuk100.eukaryota_odb10 test_results/tax tmp/. MMseqs Version: 	14.7e284; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1563,Availability,Mask,Mask,1563,",28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Ad",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1581,Availability,Mask,Mask,1581,",28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Ad",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1613,Availability,Mask,Mask,1613,"ent length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1826,Availability,Mask,Mask,1826,"ositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove tempora",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5190,Availability,mask,mask,5190,"572/query tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5199,Availability,mask,mask-prob,5199,"572/query tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5215,Availability,mask,mask-lower-case,5215,"frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9513,Availability,mask,mask,9513,"/tmp_taxonomy/7007534916548188170/tmp_hsp1; search tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 me",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9522,Availability,mask,mask-prob,9522,"/tmp_taxonomy/7007534916548188170/tmp_hsp1; search tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 me",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9538,Availability,mask,mask-lower-case,9538,"787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:13076,Availability,Error,Error,13076," --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/input_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_merge -v 3. Time for processing: 0h 0m 0s 2ms; lca MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_tax --blacklist '12908:unclassified sequences,28384:other sequences' --tax-lineage 0 --compressed 0 --threads 128 -v 3. MicroEuk100.eukaryota_odb10_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Is there any way around the missing taxonomy levels?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:13093,Availability,Error,Error,13093," --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/input_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_merge -v 3. Time for processing: 0h 0m 0s 2ms; lca MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_tax --blacklist '12908:unclassified sequences,28384:other sequences' --tax-lineage 0 --compressed 0 --threads 128 -v 3. MicroEuk100.eukaryota_odb10_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Is there any way around the missing taxonomy levels?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:13115,Availability,Error,Error,13115," --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/input_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_merge -v 3. Time for processing: 0h 0m 0s 2ms; lca MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_tax --blacklist '12908:unclassified sequences,28384:other sequences' --tax-lineage 0 --compressed 0 --threads 128 -v 3. MicroEuk100.eukaryota_odb10_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Is there any way around the missing taxonomy levels?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5556,Energy Efficiency,consumption,consumption,5556," Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9884,Energy Efficiency,consumption,consumption,9884,"-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:613,Integrability,wrap,wrapped,613,"I have a few missing fields in my taxonomy levels. I'm assuming that's what is causing this error: . ```; easy-taxonomy test_euk.fasta MicroEuk100.eukaryota_odb10 test_results/tax tmp/. MMseqs Version: 	14.7e284; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:6539,Integrability,wrap,wrapped-scoring,6539,"prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; [=================================================================] 100.00% 2.31K 0s 3ms; Time for merging to orfs_aln: 0h 0m 0s 469ms; Time for processing: 0h 0m 1s 239ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter --subdb-mode 1 --id-mode 0 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 35ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa_h tmp//15404483323509150572/taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:10975,Integrability,wrap,wrapped-scoring,10975,"y db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/115501",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:11423,Modifiability,extend,extend,11423,"gth; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5303,Performance,load,load-mode,5303,"frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:6693,Performance,load,load-mode,6693,"prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; [=================================================================] 100.00% 2.31K 0s 3ms; Time for merging to orfs_aln: 0h 0m 0s 469ms; Time for processing: 0h 0m 1s 239ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter --subdb-mode 1 --id-mode 0 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 35ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa_h tmp//15404483323509150572/taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9627,Performance,load,load-mode,9627,"787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:11198,Performance,load,load-mode,11198,"y db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/115501",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834:116,Availability,down,down,116,mapping is empty sounds like something went wrong while creating this tsv files I mentioned. Could you please write down the steps you took to generate the tax mapping?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:1101,Availability,down,down,1101,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:486,Safety,Abort,Abortiporus,486,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:498,Safety,Abort,Abortiporus,498,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:569,Safety,Abort,Abortiporus,569,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:581,Safety,Abort,Abortiporus,581,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249
https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1876141284:151,Availability,error,error,151,@milot-mirdita Is that the correct formatting for the file? I suspect that it has to do with some taxonomic levels missing. Could that be throwing the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1876141284
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419:473,Energy Efficiency,reduce,reduce,473,"That's an interesting application of MMseqs2's clustering. It should be possible to do what you want however it will require much more parameter tweaking. Also did you generate your own substitution matrix?. I think the main point is to increase the k-mer size as you will generate tons of spurious matches with 6/7-mers and a alphabet size of 5. Increasing the k-mer size of `cluster` will be tricky since it will start to use enormous amounts of memory if you don't also reduce the alphabet size, however reducing the alphabet size will generate it's own reduced alphabet that will likely conflict with yours. So `linclust` is probably the way to go, try a k-mer size of 11 and see if that works.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419:557,Energy Efficiency,reduce,reduced,557,"That's an interesting application of MMseqs2's clustering. It should be possible to do what you want however it will require much more parameter tweaking. Also did you generate your own substitution matrix?. I think the main point is to increase the k-mer size as you will generate tons of spurious matches with 6/7-mers and a alphabet size of 5. Increasing the k-mer size of `cluster` will be tricky since it will start to use enormous amounts of memory if you don't also reduce the alphabet size, however reducing the alphabet size will generate it's own reduced alphabet that will likely conflict with yours. So `linclust` is probably the way to go, try a k-mer size of 11 and see if that works.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819072155:160,Usability,intuit,intuitive,160,"Hi @milot-mirdita, thanks for the quick reply!. I am not creating a new substitution matrix. I am using the default parameters. Increasing the k-mer size seems intuitive, I'll try that. I am doing this for multiple alphabet reduction schemes to see the amount of reduction in dataset size. Should I keep the k-mer size of 11 across the alphabets or scale it based on the alphabet size? (e.g. longer k-mers for smaller alphabets).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819072155
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305:311,Energy Efficiency,Reduce,ReducedMatrix,311,"No guarantees but that's why I would first try. Try k-mer sizes from 6 to 15. More things might go wrong though, as you are breaking some pretty fundamental assumptions. You could also try to hack your reduction schemes directly into MMseqs2:; https://github.com/soedinglab/MMseqs2/blob/master/src/prefiltering/ReducedMatrix.cpp. However, reduced alphabets are not being used for alignment, only for prefiltering/kmermatching.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305:339,Energy Efficiency,reduce,reduced,339,"No guarantees but that's why I would first try. Try k-mer sizes from 6 to 15. More things might go wrong though, as you are breaking some pretty fundamental assumptions. You could also try to hack your reduction schemes directly into MMseqs2:; https://github.com/soedinglab/MMseqs2/blob/master/src/prefiltering/ReducedMatrix.cpp. However, reduced alphabets are not being used for alignment, only for prefiltering/kmermatching.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305
https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1827942507:123,Energy Efficiency,reduce,reduced,123,"Changing the alphabet size will cause it to use MMseqs2's built-in alphabet reduction. Since you seem to be trying various reduced alphabets I assume that you don't want to it to interfere with your procedure. I didn't think about this last time, but by default linclust does a reduction to a 13 letter alphabet. You should set the alphabetsize to 21 (20+X) so it does not interfere. One more thing for linclust: You should try to also increase `--kmer-per-seq` to about `80` to generate more k-mers per sequence. This does increase sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1827942507
https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769:19,Availability,error,error,19,Solved. Filesystem error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769
https://github.com/soedinglab/MMseqs2/issues/792#issuecomment-1873728731:85,Integrability,message,message,85,"Thanks a lot for your reply. I did not set this option because according to the help message, I thought the ```--alignment-mode 3``` is set by default:; ```; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [3]; ```; When I run the command as I did (without explicitly setting it), I also get the following output:; ```; MMseqs Version: 6f45232ac8daca14e354ae320a4359056ec524c2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; ```. This is the same when I manually set ```--alignment-mode 3```. Can you maybe help me understand why there are 2 alignment mode parameters in the output that differ (i.e. are there 2 different parameters and I forgot to set one)? I also get the same results and bit scores (such as the example above) when I run the command as I reported above, when I manually set ```--alignment-mode 3``` or when I additionally set ```-a```. I would appreciate any help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/792#issuecomment-1873728731
https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927:16,Security,access,accession,16,"There are a few accession formats (uniprot, gi, ...) that use pipes and we parse out the meaningful part of the accession.; You can override the default output format to `--format-output qheader,theader,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits` (normally `query,target,...`). To add the whole header, this might cause other issue with whitespace though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927
https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927:112,Security,access,accession,112,"There are a few accession formats (uniprot, gi, ...) that use pipes and we parse out the meaningful part of the accession.; You can override the default output format to `--format-output qheader,theader,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits` (normally `query,target,...`). To add the whole header, this might cause other issue with whitespace though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927
https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398:628,Safety,avoid,avoid,628,"No, currently query/target always parses the accession:; ```; { ""uc"", 2, 0}, // Uniclust; { ""cl|"", 3, 1},; { ""sp|"", 3, 1}, // Swiss prot; { ""tr|"", 3, 1}, // trembl; { ""gb|"", 3, 1}, // GenBank; { ""ref|"", 4, 1}, // NCBI Reference Sequence; { ""pdb|"", 4, 1}, // Brookhaven Protein Data Bank; { ""bbs|"", 4, 1}, // GenInfo Backbone Id; { ""lcl|"", 4, 1}, // Local Sequence identifier; { ""pir||"", 5, 1}, // NBRF PIR; { ""prf||"", 5, 1}, // Protein Research Foundation; { ""gnl|"", 4, 2}, // General database identifier; { ""pat|"", 4, 2}, // Patents; { ""gi|"", 3, 3} // NCBI GI; ```. These are the header formats that get parsed, you can try to avoid these prefices. It wouldn't be to hard to add an option to avoid parsing, but we have out hands quite full currently.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398
https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398:693,Safety,avoid,avoid,693,"No, currently query/target always parses the accession:; ```; { ""uc"", 2, 0}, // Uniclust; { ""cl|"", 3, 1},; { ""sp|"", 3, 1}, // Swiss prot; { ""tr|"", 3, 1}, // trembl; { ""gb|"", 3, 1}, // GenBank; { ""ref|"", 4, 1}, // NCBI Reference Sequence; { ""pdb|"", 4, 1}, // Brookhaven Protein Data Bank; { ""bbs|"", 4, 1}, // GenInfo Backbone Id; { ""lcl|"", 4, 1}, // Local Sequence identifier; { ""pir||"", 5, 1}, // NBRF PIR; { ""prf||"", 5, 1}, // Protein Research Foundation; { ""gnl|"", 4, 2}, // General database identifier; { ""pat|"", 4, 2}, // Patents; { ""gi|"", 3, 3} // NCBI GI; ```. These are the header formats that get parsed, you can try to avoid these prefices. It wouldn't be to hard to add an option to avoid parsing, but we have out hands quite full currently.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398
https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398:45,Security,access,accession,45,"No, currently query/target always parses the accession:; ```; { ""uc"", 2, 0}, // Uniclust; { ""cl|"", 3, 1},; { ""sp|"", 3, 1}, // Swiss prot; { ""tr|"", 3, 1}, // trembl; { ""gb|"", 3, 1}, // GenBank; { ""ref|"", 4, 1}, // NCBI Reference Sequence; { ""pdb|"", 4, 1}, // Brookhaven Protein Data Bank; { ""bbs|"", 4, 1}, // GenInfo Backbone Id; { ""lcl|"", 4, 1}, // Local Sequence identifier; { ""pir||"", 5, 1}, // NBRF PIR; { ""prf||"", 5, 1}, // Protein Research Foundation; { ""gnl|"", 4, 2}, // General database identifier; { ""pat|"", 4, 2}, // Patents; { ""gi|"", 3, 3} // NCBI GI; ```. These are the header formats that get parsed, you can try to avoid these prefices. It wouldn't be to hard to add an option to avoid parsing, but we have out hands quite full currently.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398
https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373:67,Availability,down,download,67,"What we do to construct the GTDB in our `databases` workflow is to download the tar files containing the FASTA files. You can do the same, pack everything into one tar file then call `tar2db` and then `createdb` on the DB created from the previous step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373
https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-1903314008:229,Usability,learn,learn,229,"We don't implement any clustering like that, as its usually biologically not very meaningful. You can compute a sparse all-vs-all search and cluster based on scores with whatever clustering algorithm you prefer that, e.g. scikit-learn implements. You might want to increase `--num-seqs` in this case though, to report more than the top-300 alignments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-1903314008
https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199:97,Safety,avoid,avoid,97,"Thanks for your answer, this is an interesting problem for many machine learning applications to avoid homology leakage. Here biology is not so important (for me at least). We want to be as fair as possible in this case.; ; So, if I understand correctly, this will do some prefiltering and then give back sparse similarity values which is indeed something that can be used for this purpose. Is this still the recommended way to do this, from the [user guide](https://mmseqs.com/latest/userguide.pdf)?. ````; fake_pref qdb tdb allvsallpref; mmseqs align qdb tdb allvsallpref allvsallaln; mmseqs convertalis qdb tdb allvsallaln allvsall.m8; ````. Thank you!; Sincerly,; P.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199
https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199:72,Usability,learn,learning,72,"Thanks for your answer, this is an interesting problem for many machine learning applications to avoid homology leakage. Here biology is not so important (for me at least). We want to be as fair as possible in this case.; ; So, if I understand correctly, this will do some prefiltering and then give back sparse similarity values which is indeed something that can be used for this purpose. Is this still the recommended way to do this, from the [user guide](https://mmseqs.com/latest/userguide.pdf)?. ````; fake_pref qdb tdb allvsallpref; mmseqs align qdb tdb allvsallpref allvsallaln; mmseqs convertalis qdb tdb allvsallaln allvsall.m8; ````. Thank you!; Sincerly,; P.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199
https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199:452,Usability,guid,guide,452,"Thanks for your answer, this is an interesting problem for many machine learning applications to avoid homology leakage. Here biology is not so important (for me at least). We want to be as fair as possible in this case.; ; So, if I understand correctly, this will do some prefiltering and then give back sparse similarity values which is indeed something that can be used for this purpose. Is this still the recommended way to do this, from the [user guide](https://mmseqs.com/latest/userguide.pdf)?. ````; fake_pref qdb tdb allvsallpref; mmseqs align qdb tdb allvsallpref allvsallaln; mmseqs convertalis qdb tdb allvsallaln allvsall.m8; ````. Thank you!; Sincerly,; P.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199
https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032:103,Energy Efficiency,consumption,consumption,103,"This is a performance optimization to not spend a lot of time merging files that are only intended for consumption by other mmseqs modules. If you want human readable output please either call `converalis` after `search`. Or alternatively use the `easy-search` workflow, which abstracts away all of this by taking FASTA as input and retuning BLAST-tab like output.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032
https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032:10,Performance,perform,performance,10,"This is a performance optimization to not spend a lot of time merging files that are only intended for consumption by other mmseqs modules. If you want human readable output please either call `converalis` after `search`. Or alternatively use the `easy-search` workflow, which abstracts away all of this by taking FASTA as input and retuning BLAST-tab like output.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032
https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032:22,Performance,optimiz,optimization,22,"This is a performance optimization to not spend a lot of time merging files that are only intended for consumption by other mmseqs modules. If you want human readable output please either call `converalis` after `search`. Or alternatively use the `easy-search` workflow, which abstracts away all of this by taking FASTA as input and retuning BLAST-tab like output.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032
https://github.com/soedinglab/MMseqs2/issues/804#issuecomment-1899530817:294,Security,access,accession,294,"Something is wrong with the input FASTA headers. This is not necessarily a problem for the clustering itself, however the result files might be not very useful if you cant distinguish cluster members. It might be an issue with a space between the leading `>` in the FASTA header and the actual accession. MMseqs2 expects there to not be any whitespace.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804#issuecomment-1899530817
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332:137,Performance,optimiz,optimizations,137,Could you please post the full long until it hands?. generally mmseqs is not very good at small number of queries. We have built various optimizations to deal with that (e.g. for ColabFold) but they come with very different trade-offs. let’s see what the log says first before further recommendations.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332:255,Testability,log,log,255,Could you please post the full long until it hands?. generally mmseqs is not very good at small number of queries. We have built various optimizations to deal with that (e.g. for ColabFold) but they come with very different trade-offs. let’s see what the log says first before further recommendations.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1433,Availability,Mask,Mask,1433,"62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add or",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1451,Availability,Mask,Mask,1451,"62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add or",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1483,Availability,Mask,Mask,1483," threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1702,Availability,Mask,Mask,1702,"ccept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI ru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4141,Availability,mask,mask,4141,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4150,Availability,mask,mask-prob,4150,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4166,Availability,mask,mask-lower-case,4166,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4689,Availability,Mask,Masked,4689,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:66,Energy Efficiency,reduce,reduced,66,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4445,Energy Efficiency,consumption,consumption,4445,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:418,Integrability,wrap,wrapped,418,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4255,Performance,load,load-mode,4255,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:173,Testability,log,log,173,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:69,Availability,avail,available,69,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:102,Availability,down,download,102,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302
https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:301,Energy Efficiency,power,power,301,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302
https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:27,Availability,error,error,27,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051
https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:744,Availability,Error,Error,744,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051
https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:1116,Availability,error,error,1116,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051
https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:563,Safety,Abort,Aborted,563,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051
https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294:65,Deployability,update,updated,65,"I think we have computed the wrong thing at some point and never updated the number. 130GB sounds about right. . The function that computes a more accurate memory estimate can be found in the code:; https://github.com/soedinglab/MMseqs2/blob/d4841a8efad066e9758b6626cc64c5ef5ee53055/src/prefiltering/Prefiltering.cpp#L1069. You will still find the same two parts as listed above. However, the largest chunk of memory that is used now with modern machines is the per thread memory. A dual socket 64-core CPU machine with hyper threading will try to use about 500GB total RAM in per-thread memory. Thus, its usually a good idea to not use hyperthreading with MMseqs2 as it only has minor speed benefits for a large increase of memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294
https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577:459,Deployability,pipeline,pipeline,459,"Hi may ask a similar question, but I am using easy-linclust, i.e. my command line is:; `mmseqs easy-linclust input.fasta clusterResult tmp --min-seq-id 0.95 -c 0.95`; Do I use the same formula to calculate RAM usage? ; My FASTA is 1TB in size, has 2B sequences, average sequence length is 650 base pairs, and the alphabet is 4. ; I tried running this on an instance with 200GB of RAM, and it failed after more than 4 days, I assume that's where a step in the pipeline comes that requires more RAM, but it's expensive for me to keep trying different setups (both money wise and time wise). ; Can I use (or should I use) the --split-memory-limit option here as well..?; These were my instance resources for the run that I described; ![Screenshot 2024-05-09 at 12 21 50](https://github.com/soedinglab/MMseqs2/assets/16819349/0a9ed7a0-5829-46de-bbda-8277025423ed)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577
https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:357,Availability,avail,available,357,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561
https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:1108,Availability,down,download,1108,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561
https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:1368,Availability,avail,available,1368,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561
https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:706,Performance,Load,Loading,706,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561
https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:899,Security,access,accessing,899,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561
https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542:281,Security,access,accession,281,"This is possible but a bit tricky:. Please make one FASTA file containing all sequence entries. Then call `createdb`; ```; mmseqs createdb YOUR_FASTA_FILE.fasta db; ```. Then take a look at the `db.lookup` file it generated.; You will find entries in the format:. ```; numeric_key accession set_id; ...; ```. The first two columns are important, you can ignore the last. You will need to make a new TSV file, of the keys of the two matching accessions. In your example, you should see something like the following in the `db.lookup`.; ```; 0 S10CNODE_1.fasta; 1 S10CNODE_2.fasta; 2 S10CNODE_3.fasta; 3 S10CNODE_4.fasta; 4 S10CNODE_5.fasta; 5 S1CNODE_25.fasta; 6 S2CNODE_8.fasta ; 7 S5CNODE_11.fasta ; 8 S3CNODE_7.fasta; 9 S6CNODE_10.fasta; ```. The new tsv file you need to create should look like this:; ```; 0 5; 1 6; 2 7; 3 8; 4 9; ...; ```. Next sort this file according to the first column:; ```; sort -k1,1n NEW_TSV_FILE.tsv > NEW_TSV_FILE_sort.tsv ; ```. Now you can pass this file to `tsv2db` and compute the alignments and generate a normal MMseqs2 m8 output:; ```; # 6 is a clustering database, which only requires a target key and nothing else; mmseqs tsv2db NEW_TSV_FILE_sort.tsv clu_db --output-dbtype 6; mmseqs align db db clu_db aln_db -a; mmseqs convertalis db db aln_db aln.m8; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542
https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542:441,Security,access,accessions,441,"This is possible but a bit tricky:. Please make one FASTA file containing all sequence entries. Then call `createdb`; ```; mmseqs createdb YOUR_FASTA_FILE.fasta db; ```. Then take a look at the `db.lookup` file it generated.; You will find entries in the format:. ```; numeric_key accession set_id; ...; ```. The first two columns are important, you can ignore the last. You will need to make a new TSV file, of the keys of the two matching accessions. In your example, you should see something like the following in the `db.lookup`.; ```; 0 S10CNODE_1.fasta; 1 S10CNODE_2.fasta; 2 S10CNODE_3.fasta; 3 S10CNODE_4.fasta; 4 S10CNODE_5.fasta; 5 S1CNODE_25.fasta; 6 S2CNODE_8.fasta ; 7 S5CNODE_11.fasta ; 8 S3CNODE_7.fasta; 9 S6CNODE_10.fasta; ```. The new tsv file you need to create should look like this:; ```; 0 5; 1 6; 2 7; 3 8; 4 9; ...; ```. Next sort this file according to the first column:; ```; sort -k1,1n NEW_TSV_FILE.tsv > NEW_TSV_FILE_sort.tsv ; ```. Now you can pass this file to `tsv2db` and compute the alignments and generate a normal MMseqs2 m8 output:; ```; # 6 is a clustering database, which only requires a target key and nothing else; mmseqs tsv2db NEW_TSV_FILE_sort.tsv clu_db --output-dbtype 6; mmseqs align db db clu_db aln_db -a; mmseqs convertalis db db aln_db aln.m8; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542
https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820:39,Deployability,install,installed,39,Seems like something is wrong with the installed compilers within this conda environment. You should be able to install the `compilers` conda meta package which should contain everything to compile mmseqs,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820
https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820:112,Deployability,install,install,112,Seems like something is wrong with the installed compilers within this conda environment. You should be able to install the `compilers` conda meta package which should contain everything to compile mmseqs,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816#issuecomment-1974703820
https://github.com/soedinglab/MMseqs2/issues/820#issuecomment-2007500677:18,Availability,down,downloading,18,"Problem solved by downloading the PDB via Foldseek, as specified here #821",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820#issuecomment-2007500677
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130:8,Availability,down,download,8,You can download the PDB100 through foldseek. That one includes taxonomy information and is compatible with MMseqs2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919:44,Availability,down,downloaded,44,"Based on your previous suggestion, I simply downloaded the PDB using Foldseek via the following command; `foldseek databases PDB pdb tmp `. Then I used mmseqs to filter for the tax I wanted. ; `mmseqs filtertaxseqdb pdb pdb_human --taxon-list 9606`. Were you suggesting something different from this? ; Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919:37,Usability,simpl,simply,37,"Based on your previous suggestion, I simply downloaded the PDB using Foldseek via the following command; `foldseek databases PDB pdb tmp `. Then I used mmseqs to filter for the tax I wanted. ; `mmseqs filtertaxseqdb pdb pdb_human --taxon-list 9606`. Were you suggesting something different from this? ; Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062:21,Availability,down,download,21,"Yes, it doesn't only download a `pdb` (with all its including files), but also a `pdb_seq`. You want to use the later, as that contains all PDB entries, not only the cluster representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113:67,Availability,down,download,67,"ok, in that case, how should I change the commands I used above to download the `pdb_seq`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638:61,Availability,down,download,61,"Sorry for the confusion, I'll repeat from the start:. ```; # download PDB with Foldseek; foldseek databases PDB pdb tmp. #; # The command above will download and create many files (might not be exactly the same as listed here):; # pdb prefix:; # pdb, pdb.index, pdb.dbtype <- MMseqs2 DB; # pdb_h, pdb_h.index, pdb_h.dbtype <- MMseqs2 DB; # pdb_ss, pdb_ss.index, pdb_ss.dbtype <- Foldseek specific part; # pdb_ca, pdb_ca.index, pdb_ca.dbtype <- Foldseek specific part; #; # pdb_seq prefix:; # pdb_seq, pdb_seq.index, pdb_seq.dbtype <- MMseqs2 DB; # pdb_seq_h, pdb_seq_h.index, pdb_seq_h.dbtype <- MMseqs2 DB; # pdb_seq_ss, pdb_seq_ss.index, pdb_seq_ss.dbtype <- Foldseek specific; # pdb_seq_ca, pdb_seq_ca.index, pdb_seq_ca.dbtype <- Foldseek specific. # pdb prefix contains only cluster representatives; # pdb_seq prefix contains all entries, therefore use this one for MMseqs2 searches:; mmseqs easy-search query.fasta pdb_seq res.m8 tmp. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638:149,Availability,down,download,149,"Sorry for the confusion, I'll repeat from the start:. ```; # download PDB with Foldseek; foldseek databases PDB pdb tmp. #; # The command above will download and create many files (might not be exactly the same as listed here):; # pdb prefix:; # pdb, pdb.index, pdb.dbtype <- MMseqs2 DB; # pdb_h, pdb_h.index, pdb_h.dbtype <- MMseqs2 DB; # pdb_ss, pdb_ss.index, pdb_ss.dbtype <- Foldseek specific part; # pdb_ca, pdb_ca.index, pdb_ca.dbtype <- Foldseek specific part; #; # pdb_seq prefix:; # pdb_seq, pdb_seq.index, pdb_seq.dbtype <- MMseqs2 DB; # pdb_seq_h, pdb_seq_h.index, pdb_seq_h.dbtype <- MMseqs2 DB; # pdb_seq_ss, pdb_seq_ss.index, pdb_seq_ss.dbtype <- Foldseek specific; # pdb_seq_ca, pdb_seq_ca.index, pdb_seq_ca.dbtype <- Foldseek specific. # pdb prefix contains only cluster representatives; # pdb_seq prefix contains all entries, therefore use this one for MMseqs2 searches:; mmseqs easy-search query.fasta pdb_seq res.m8 tmp. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638
https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254:673,Availability,mask,mask,673,"The above works great! Thanks a lot. . I have another question: my understanding is that `pdb_seq` would be bigger than `pbd`, and therefore have the same [or more] number of found matching sequences than `pdb`. However, I am seeing a decrease as illustrated by the van diagrams below: ; ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/4e44a811-fd66-4c01-883f-196b8b0c2342); ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/a0dd407f-4f3c-4696-a7fe-7ca86d11b1d7). The search parameters used in both cases are the same, as shown below: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/{db} /tmp/resultDB tmp -a --max-seqs 1 -s 7 --comp-bias-corr 0 --mask 0`. Am I missing anything? . Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:926,Availability,error,error,926,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:1006,Modifiability,variab,variable,1006,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:135,Performance,Cache,CacheFriendlyOperations,135,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:277,Performance,Cache,CacheFriendlyOperations,277,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:398,Security,hash,hashBinElement,398,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:553,Security,hash,hashBinElement,553,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:660,Security,hash,hashBinElement,660,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:1124,Security,hash,hashBinElement,1124,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296:397,Availability,Mask,Masked,397,"Also interesting, a lot of over represented k-mers (same prefix/suffix?). ```; Query database size: 3083342 type: Nucleotide; Estimated memory consumption: 12G; Target database size: 1541671 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 1.54M 2m 38s 193ms; Index table: Masked residues: 141067; Index table: fill; [=================================================================] 100.00% 1.54M 1m 10s 152ms; Index statistics; Entries: 516344842; DB size: 11146 MB; Avg k-mer size: 0.480884; Top 10 k-mers; GGGCTCAGGATTCTG	1282098; CTGCTCTGGGCGCGT	1167098; TGAGCTGGGCATGAG	1134437; AAGTTCCTCACTCGG	1086133; CTGTAAGCTGCTCGT	966085; AGCTACATTGATCGC	943599; CAGCGACACTGCTTG	913837; CCTCGCACGCCTGAG	883990; CCTCTGCACTCGCTG	827574; GAGCTGGAAGCTGGT	791516; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296:143,Energy Efficiency,consumption,consumption,143,"Also interesting, a lot of over represented k-mers (same prefix/suffix?). ```; Query database size: 3083342 type: Nucleotide; Estimated memory consumption: 12G; Target database size: 1541671 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 1.54M 2m 38s 193ms; Index table: Masked residues: 141067; Index table: fill; [=================================================================] 100.00% 1.54M 1m 10s 152ms; Index statistics; Entries: 516344842; DB size: 11146 MB; Avg k-mer size: 0.480884; Top 10 k-mers; GGGCTCAGGATTCTG	1282098; CTGCTCTGGGCGCGT	1167098; TGAGCTGGGCATGAG	1134437; AAGTTCCTCACTCGG	1086133; CTGTAAGCTGCTCGT	966085; AGCTACATTGATCGC	943599; CAGCGACACTGCTTG	913837; CCTCGCACGCCTGAG	883990; CCTCTGCACTCGCTG	827574; GAGCTGGAAGCTGGT	791516; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856:419,Availability,Mask,Masked,419,"> Also interesting, a lot of over represented k-mers (same prefix/suffix?); > ; > ```; > Query database size: 3083342 type: Nucleotide; > Estimated memory consumption: 12G; > Target database size: 1541671 type: Nucleotide; > Index table k-mer threshold: 0 at k-mer size 15; > Index table: counting k-mers; > [=================================================================] 100.00% 1.54M 2m 38s 193ms; > Index table: Masked residues: 141067; > Index table: fill; > [=================================================================] 100.00% 1.54M 1m 10s 152ms; > Index statistics; > Entries: 516344842; > DB size: 11146 MB; > Avg k-mer size: 0.480884; > Top 10 k-mers; > GGGCTCAGGATTCTG	1282098; > CTGCTCTGGGCGCGT	1167098; > TGAGCTGGGCATGAG	1134437; > AAGTTCCTCACTCGG	1086133; > CTGTAAGCTGCTCGT	966085; > AGCTACATTGATCGC	943599; > CAGCGACACTGCTTG	913837; > CCTCGCACGCCTGAG	883990; > CCTCTGCACTCGCTG	827574; > GAGCTGGAAGCTGGT	791516; > ```. @milot-mirdita . That is correct: these millions of sequences are derived from a small set of common ancestor sequences. In short, they are very similar to one another in some portions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856
https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856:155,Energy Efficiency,consumption,consumption,155,"> Also interesting, a lot of over represented k-mers (same prefix/suffix?); > ; > ```; > Query database size: 3083342 type: Nucleotide; > Estimated memory consumption: 12G; > Target database size: 1541671 type: Nucleotide; > Index table k-mer threshold: 0 at k-mer size 15; > Index table: counting k-mers; > [=================================================================] 100.00% 1.54M 2m 38s 193ms; > Index table: Masked residues: 141067; > Index table: fill; > [=================================================================] 100.00% 1.54M 1m 10s 152ms; > Index statistics; > Entries: 516344842; > DB size: 11146 MB; > Avg k-mer size: 0.480884; > Top 10 k-mers; > GGGCTCAGGATTCTG	1282098; > CTGCTCTGGGCGCGT	1167098; > TGAGCTGGGCATGAG	1134437; > AAGTTCCTCACTCGG	1086133; > CTGTAAGCTGCTCGT	966085; > AGCTACATTGATCGC	943599; > CAGCGACACTGCTTG	913837; > CCTCGCACGCCTGAG	883990; > CCTCTGCACTCGCTG	827574; > GAGCTGGAAGCTGGT	791516; > ```. @milot-mirdita . That is correct: these millions of sequences are derived from a small set of common ancestor sequences. In short, they are very similar to one another in some portions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878:19,Deployability,install,installed,19,This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878:70,Deployability,install,install,70,This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:211,Availability,error,error,211,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:21,Deployability,install,installed,21,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:72,Deployability,install,install,72,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687
https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:153,Deployability,install,install,153,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:194,Availability,down,download,194,"Hi,. I have tried following the step described on the [wiki](https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database) to create the mapping for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /ro",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:974,Availability,error,error,974,"Hi,. I have tried following the step described on the [wiki](https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database) to create the mapping for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /ro",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:1063,Availability,error,error,1063,"for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /root/mmseqs2_db/nr_taxonomy; ```. nr.fna is still empty. Not sure if this is a required step in order to create the nr_mapping. I would appreciate any help in getting the tax info",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:1211,Availability,avail,available,1211,"for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /root/mmseqs2_db/nr_taxonomy; ```. nr.fna is still empty. Not sure if this is a required step in order to create the nr_mapping. I would appreciate any help in getting the tax info",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2033435054:260,Availability,down,download,260,"I remember `blastdbcmd` having issues, however, I don't remember what was wrong. We use a different workflow to assign taxids for the NR:; https://github.com/soedinglab/MMseqs2/blob/804bb2af6d1be4086252c46bf15f3c75a5d9e931/data/workflow/databases.sh#L419. The download part for the `accession2taxid` files:; https://github.com/soedinglab/MMseqs2/blob/804bb2af6d1be4086252c46bf15f3c75a5d9e931/data/workflow/databases.sh#L120",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2033435054
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:180,Availability,down,download,180,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:497,Availability,error,errors,497,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:804,Availability,down,downloaded,804,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:698,Security,access,accession,698,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:732,Security,access,accession,732,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:923,Security,access,accession,923,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:959,Security,access,accession,959,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010
https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2230011728:451,Availability,error,error,451,"Hello everyone, I have one question related to the MMseq database.; I used this command: $ mmseqs databases NR NRdb tmpDir to custom NRdb. I left the computer run overnight. In the morning, the terminal has been off. I check the result folder there are several files such as (mmseqDB, mmseqDB.dbtype, etc). I attempt to open the mmseqDB to check only Chinese characters there instead of Sequences. Does anyone faced the same issue? I guess that is an error because I can't run further analysis with that DB. Many thanks!; ![Screenshot from 2024-07-16 13-38-42](https://github.com/user-attachments/assets/d1740899-a7c1-4d24-b2ab-2c40ae375032)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2230011728
https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2021988973:134,Testability,test,test,134,"How did you do the searches? How did you create the `swissprot_human` subset?. I am surprised you are getting results at all for your test 2). The default parameters of MMseqs2 are set in such a way that you should not be able to find anything shorter than 11. The default k-mer size of 6 uses 4 non-informative spaced positions and we require a double consecutive k-mer match, meaning 11 should be the shortest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2021988973
https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191:408,Availability,mask,mask,408,"In my search, I am interested only in exact matches to known human proteins, regardless of the significance (which seems to be conditioned on the length of the sequence). For that, I have changed the significance threshold, k-mer size and spacer. This is the search command I am using: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/swissprot /tmp/resultDB tmp -a --max-seqs 1000 -s 7.5 --comp-bias-corr 0 --mask 0 --split-memory-limit 120G -e 10000 -k 7 --spaced-kmer-mode 0`. To create the human subset of the swissprot, I used the following commands to download and filter the dataset:; `mmseqs databases UniProtKB/Swiss-Prot /root/mmseqs2_db/swissprot tmp`; `mmseqs filtertaxseqdb /root/mmseqs2_db/swissprot /root/mmseqs2_db/swissprot_human --taxon-list 9606`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191
https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191:556,Availability,down,download,556,"In my search, I am interested only in exact matches to known human proteins, regardless of the significance (which seems to be conditioned on the length of the sequence). For that, I have changed the significance threshold, k-mer size and spacer. This is the search command I am using: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/swissprot /tmp/resultDB tmp -a --max-seqs 1000 -s 7.5 --comp-bias-corr 0 --mask 0 --split-memory-limit 120G -e 10000 -k 7 --spaced-kmer-mode 0`. To create the human subset of the swissprot, I used the following commands to download and filter the dataset:; `mmseqs databases UniProtKB/Swiss-Prot /root/mmseqs2_db/swissprot tmp`; `mmseqs filtertaxseqdb /root/mmseqs2_db/swissprot /root/mmseqs2_db/swissprot_human --taxon-list 9606`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191
https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658:105,Availability,mask,masking,105,"We suppress hits like these likely with our false positive suppression mechanisms. You can try disabling masking and compositional bias correction with `--mask 0 --comp-bias-corr 0`. That might help with finding these hits. Additionally, you can also disable E-values as this would not really be a homology search anymore with `-e inf`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658
https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658:155,Availability,mask,mask,155,"We suppress hits like these likely with our false positive suppression mechanisms. You can try disabling masking and compositional bias correction with `--mask 0 --comp-bias-corr 0`. That might help with finding these hits. Additionally, you can also disable E-values as this would not really be a homology search anymore with `-e inf`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658
https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692:111,Availability,error,error,111,"Hi @ahof1704 ,; ```convertalis``` uses very little resources. I doubt this issue is a memory issue.; Actually, error messages in MMSeqs2 are quite uninformative. In my experience, if you get a 'Killed' message in a case where memory is surely involved, it doesn't mean that another 'Killed' means the same.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692
https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692:117,Integrability,message,messages,117,"Hi @ahof1704 ,; ```convertalis``` uses very little resources. I doubt this issue is a memory issue.; Actually, error messages in MMSeqs2 are quite uninformative. In my experience, if you get a 'Killed' message in a case where memory is surely involved, it doesn't mean that another 'Killed' means the same.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692
https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692:202,Integrability,message,message,202,"Hi @ahof1704 ,; ```convertalis``` uses very little resources. I doubt this issue is a memory issue.; Actually, error messages in MMSeqs2 are quite uninformative. In my experience, if you get a 'Killed' message in a case where memory is surely involved, it doesn't mean that another 'Killed' means the same.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320:23,Availability,down,downside,23,"There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter. You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320:85,Availability,down,down,85,"There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter. You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1765,Availability,down,downside,1765,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1827,Availability,down,down,1827,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:338,Testability,test,tested,338,"Does this mean that for a sequence of 2kbp, it would take 400 k-mers, and for a sequence of 20kbp, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917
https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1475,Testability,test,test,1475,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917
https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790:12,Availability,error,error,12,Is there an error message or anything else? MMseqs2 works fine on my Apple Silicon MacBook,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790
https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790:18,Integrability,message,message,18,Is there an error message or anything else? MMseqs2 works fine on my Apple Silicon MacBook,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790
https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:1419,Deployability,install,installation,1419,":183 - Removing output directory Output/ROSA-like as -f or --force was specified.; 2024-04-23 09:26:28.676 | INFO | __main__:main:95 - Starting Pharokka v1.7.1; 2024-04-23 09:26:28.676 | INFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 489, in <module>; main(); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 128, in main; ) = check_dependencies(args.skip_mash); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/input_commands.py"", line 407, in check_dependencies; mmseqs_major_version =",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310
https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:77,Integrability,message,message,77,"Hello !. Thank you for your reply. I just ran PHARROKA and got the following message. Hope it will help !. Nico. /Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py:4: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; __import__('pkg_resources').require('Pharokka==1.7.1'); 2024-04-23 09:26:28.672 | INFO | input_commands:instantiate_dirs:183 - Removing output directory Output/ROSA-like as -f or --force was specified.; 2024-04-23 09:26:28.676 | INFO | __main__:main:95 - Starting Pharokka v1.7.1; 2024-04-23 09:26:28.676 | INFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310
https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:1609,Integrability,depend,dependencies,1609,"NFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 489, in <module>; main(); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 128, in main; ) = check_dependencies(args.skip_mash); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/input_commands.py"", line 407, in check_dependencies; mmseqs_major_version = int(mmseqs_version.split(""."")[0]); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ValueError: invalid literal for int() with base 10: '15-6f452'. > Le 22 avr. 2024 à 19:17, Milot Mirdita ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310
https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929:28,Energy Efficiency,adapt,adapt,28,Thank you very much. I will adapt the command and will explore the differences between cd-hit and mmseqs further. Hans,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929
https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929:28,Modifiability,adapt,adapt,28,Thank you very much. I will adapt the command and will explore the differences between cd-hit and mmseqs further. Hans,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1677,Availability,Mask,Mask,1677,"sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1695,Availability,Mask,Mask,1695,"sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1727,Availability,Mask,Mask,1727,"ngth 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1940,Availability,Mask,Mask,1940,"nal bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4047,Availability,mask,mask,4047,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4056,Availability,mask,mask-prob,4056,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4072,Availability,mask,mask-lower-case,4072,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4348,Energy Efficiency,consumption,consumption,4348,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:725,Integrability,wrap,wrapped,725,"I tried re-running with 250 GB RAM requested and 32 threads specified. It is now telling me it would need 717 G??. ```; Create directory tmp; taxonomy KLEB_PO07_megahitDB /home/sdwork/scratch/metagenomics/uniref_db/uniref90 KLEB_PO07_megahit_result tmp --threads 32. MMseqs Version: 	GITDIR-NOTFOUND; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	32; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4162,Performance,load,load-mode,4162,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:120,Availability,Error,Error,120,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:137,Availability,Error,Error,137,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:159,Availability,Error,Error,159,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:472,Availability,error,error,472,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:204,Testability,log,logfile,204,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496:140,Availability,Error,Error,140,"I managed to solve my own problem and it ended up being something very silly. When using the `easy-taxonomy` workflow and getting to:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. My error output showed that my `DB_mapping` was empty. It was was empty because the `awk` command in the `createindex.sh` that populates it didn't find any matches between the `DB.lookup` and `taxidmapping`. This is because the UniProt IDs in the `DB.lookup` were prepended with `UniRef90_`. I guess if I used the full `databases` workflow that might have been removed, but because I needed to do things manually due to working on a cluster where compute nodes have no internet connection it wasn't. . Things are working great now! Thanks for this software!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496:157,Availability,Error,Error,157,"I managed to solve my own problem and it ended up being something very silly. When using the `easy-taxonomy` workflow and getting to:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. My error output showed that my `DB_mapping` was empty. It was was empty because the `awk` command in the `createindex.sh` that populates it didn't find any matches between the `DB.lookup` and `taxidmapping`. This is because the UniProt IDs in the `DB.lookup` were prepended with `UniRef90_`. I guess if I used the full `databases` workflow that might have been removed, but because I needed to do things manually due to working on a cluster where compute nodes have no internet connection it wasn't. . Things are working great now! Thanks for this software!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496:179,Availability,Error,Error,179,"I managed to solve my own problem and it ended up being something very silly. When using the `easy-taxonomy` workflow and getting to:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. My error output showed that my `DB_mapping` was empty. It was was empty because the `awk` command in the `createindex.sh` that populates it didn't find any matches between the `DB.lookup` and `taxidmapping`. This is because the UniProt IDs in the `DB.lookup` were prepended with `UniRef90_`. I guess if I used the full `databases` workflow that might have been removed, but because I needed to do things manually due to working on a cluster where compute nodes have no internet connection it wasn't. . Things are working great now! Thanks for this software!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496:207,Availability,error,error,207,"I managed to solve my own problem and it ended up being something very silly. When using the `easy-taxonomy` workflow and getting to:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. My error output showed that my `DB_mapping` was empty. It was was empty because the `awk` command in the `createindex.sh` that populates it didn't find any matches between the `DB.lookup` and `taxidmapping`. This is because the UniProt IDs in the `DB.lookup` were prepended with `UniRef90_`. I guess if I used the full `databases` workflow that might have been removed, but because I needed to do things manually due to working on a cluster where compute nodes have no internet connection it wasn't. . Things are working great now! Thanks for this software!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420:143,Availability,down,download,143,"Sorry, didn't get around to look at this. Glad it works now. The ""intended"" way to do this, would have been to you the `databases` workflow to download and create the database. It has its own handling of uniref (and uniprot) based headers, and should be generally slightly better, since it directly uses the information in the header, instead of going through the idmapping. This is the code it executes to make the `_mapping`:; https://github.com/soedinglab/MMseqs2/blob/998c50a01da760713ca2c7580801e94555d23c4d/data/workflow/databases.sh#L476-L483. afterwards `createtaxdb` is called setup the `_taxonomy`, which basically contains the NCBI taxdump.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095:472,Availability,down,downloaded,472,"No worries! Always a good exercise to figure things out myself. I'm sure you're very busy and this was a problem of my own making by not using the intended workflow. I did try to use the `databases` workflow initially but unfortunately the login nodes that have connection to the internet on the cluster I am using don't have the resources to deal with the size of the databases I wanted to use. In the future I'll look to find a better workaround. With `metabuli` I just downloaded the pre-built database. I don't know if the resources for this are available but perhaps it would be worthwhile to do a similar thing here? Either way, thanks again for providing this excellent resource and good luck with CASP16! :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095:550,Availability,avail,available,550,"No worries! Always a good exercise to figure things out myself. I'm sure you're very busy and this was a problem of my own making by not using the intended workflow. I did try to use the `databases` workflow initially but unfortunately the login nodes that have connection to the internet on the cluster I am using don't have the resources to deal with the size of the databases I wanted to use. In the future I'll look to find a better workaround. With `metabuli` I just downloaded the pre-built database. I don't know if the resources for this are available but perhaps it would be worthwhile to do a similar thing here? Either way, thanks again for providing this excellent resource and good luck with CASP16! :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095:240,Testability,log,login,240,"No worries! Always a good exercise to figure things out myself. I'm sure you're very busy and this was a problem of my own making by not using the intended workflow. I did try to use the `databases` workflow initially but unfortunately the login nodes that have connection to the internet on the cluster I am using don't have the resources to deal with the size of the databases I wanted to use. In the future I'll look to find a better workaround. With `metabuli` I just downloaded the pre-built database. I don't know if the resources for this are available but perhaps it would be worthwhile to do a similar thing here? Either way, thanks again for providing this excellent resource and good luck with CASP16! :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095
https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094349946:110,Deployability,release,release,110,"We have also moved to prebuilt dbs for foldseek. I don't think we would be able to keep up with the two month release cycles of the uniref/uniprot though, so probably no prebuilt databases for MMseqs2. Thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094349946
https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089:92,Availability,down,downloaded,92,"Thank you, that is useful to know.; IE I clustered at 70% and at 90% but with both - when I downloaded the representative sequences from each cluster and ran these in a MSA tool you would expect to see maximum roughly 70% and 90% pairwise comparisons right? The PIM is the percentage identity matrix. Instead I got values of up to 99% in both.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089
https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240:223,Safety,detect,detects,223,"The trap is likely the sequence identity estimation (see https://github.com/soedinglab/MMseqs2/wiki#how-does-mmseqs2-compute-the-sequence-identity). Adding `-a` or `--alignment-mode 3` fixes the issue. `easy-search` better detects when exact sequence identity is required, `search` does the sequence identity estimation by default and try to detect it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240
https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240:342,Safety,detect,detect,342,"The trap is likely the sequence identity estimation (see https://github.com/soedinglab/MMseqs2/wiki#how-does-mmseqs2-compute-the-sequence-identity). Adding `-a` or `--alignment-mode 3` fixes the issue. `easy-search` better detects when exact sequence identity is required, `search` does the sequence identity estimation by default and try to detect it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240
https://github.com/soedinglab/MMseqs2/issues/844#issuecomment-2096686643:7,Usability,learn,learned,7,"I just learned that `mmseqs cluster` and `mmseqs clust` were different things, which solved the issue. Apologies for the confusion.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844#issuecomment-2096686643
https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918:21,Availability,down,download,21,Thanks! Do I need to download and recompile mmseqs? or can I just replace with the fixed file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918
https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422:8,Availability,down,download,8,You can download precompiled binaries from: https://mmseqs.com/latest/. you don’t need to compile them yourself,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422
https://github.com/soedinglab/MMseqs2/issues/846#issuecomment-2130089532:167,Safety,predict,prediction,167,trying to remove any hidden characters from the msa may not be solving the problem as it still cannot be used with `reformat.pl` or `addss.pl` (no secondary structure prediction after addss.pl),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/846#issuecomment-2130089532
https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2132325500:290,Security,access,accession,290,"Cns is not the sequence but the profile consensus sequence. The easiest way to match them together should be to use the non db output mode (`profile2pssm --db-output 0`) and match them to the original sequence based on the database key (first column in the db `.lookup` file, second is the accession).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2132325500
https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136635601:331,Integrability,depend,depends,331,"Thank you very much for answering so fast.; Just another doubt I have. ; Does this change the scores calculated for the specific position compared to a Psiblast PSSM? ; I don't know if it is correct but besides counting the frequencies of each amino acid in that position to calculate the score, PSSMs also add a pseudo count that depends on the identity of the aminoacid in that position because it is based on blossum62, so if the position is not the initial one but rather a consensus the pseudocount will differ right?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136635601
https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136654678:73,Testability,log,logic,73,"MMseqs2 does implement its own profile scoring with its own pseudo-count logic. Therefore, it should not be compared with Psi-blast profiles.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136654678
https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2140477022:206,Safety,detect,detection,206,The PSSMCalculator computes the profiles: https://github.com/soedinglab/MMseqs2/blob/25fc2108e0da107de5da157d68e5e7d8274a69ea/src/alignment/PSSMCalculator.cpp#L153. It works well for our purposes (homology detection). I don't know if it will work for your purposes.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2140477022
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:1407,Modifiability,config,config,1407,"/usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```. I mixed up the timestamps, and it's the clu90 one that's been running since the 16th, and the clu70 has been running since the 20th.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:1518,Modifiability,config,config,1518,"/usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```. I mixed up the timestamps, and it's the clu90 one that's been running since the 16th, and the clu70 has been running since the 20th.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:1645,Modifiability,config,config,1645,"/usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```. I mixed up the timestamps, and it's the clu90 one that's been running since the 16th, and the clu70 has been running since the 20th.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:357,Performance,optimiz,optimized,357,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:380,Performance,optimiz,optimized,380,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:610,Performance,optimiz,optimized,610,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:875,Performance,optimiz,optimized,875,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:897,Performance,optimiz,optimized,897,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:940,Performance,optimiz,optimized,940,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:597,Usability,clear,clear,597,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30475,Modifiability,config,config,30475,"<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30585,Modifiability,config,config,30585,"nsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30711,Modifiability,config,config,30711,"ommandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31316,Modifiability,config,config,31316,"``; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31426,Modifiability,config,config,31426,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31552,Modifiability,config,config,31552,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32157,Modifiability,config,config,32157,"sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32267,Modifiability,config,config,32267,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32393,Modifiability,config,config,32393,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32998,Modifiability,config,config,32998,"sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33108,Modifiability,config,config,33108,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33234,Modifiability,config,config,33234,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33906,Modifiability,config,config,33906,"P 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:34016,Modifiability,config,config,34016,".h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:34142,Modifiability,config,config,34142,"9056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35442,Modifiability,config,config,35442,"#6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35552,Modifiability,config,config,35552,"d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35678,Modifiability,config,config,35678,"; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36283,Modifiability,config,config,36283,"sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36393,Modifiability,config,config,36393,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36519,Modifiability,config,config,36519,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37124,Modifiability,config,config,37124,"sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37234,Modifiability,config,config,37234,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37360,Modifiability,config,config,37360,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37965,Modifiability,config,config,37965,"sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38075,Modifiability,config,config,38075,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38201,Modifiability,config,config,38201,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38806,Modifiability,config,config,38806,"sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38916,Modifiability,config,config,38916,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39042,Modifiability,config,config,39042,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39647,Modifiability,config,config,39647,"sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39757,Modifiability,config,config,39757,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39883,Modifiability,config,config,39883,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40488,Modifiability,config,config,40488,"sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40598,Modifiability,config,config,40598,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40724,Modifiability,config,config,40724,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41329,Modifiability,config,config,41329,"sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41439,Modifiability,config,config,41439,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41565,Modifiability,config,config,41565,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42170,Modifiability,config,config,42170,"sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42280,Modifiability,config,config,42280,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42406,Modifiability,config,config,42406,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43011,Modifiability,config,config,43011,"sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43121,Modifiability,config,config,43121,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43247,Modifiability,config,config,43247,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43852,Modifiability,config,config,43852,"sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43962,Modifiability,config,config,43962,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44088,Modifiability,config,config,44088,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44693,Modifiability,config,config,44693,"sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44803,Modifiability,config,config,44803,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44929,Modifiability,config,config,44929,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45534,Modifiability,config,config,45534,"sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45644,Modifiability,config,config,45644,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45770,Modifiability,config,config,45770,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46375,Modifiability,config,config,46375,"sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46485,Modifiability,config,config,46485,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46611,Modifiability,config,config,46611,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47216,Modifiability,config,config,47216,"sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47326,Modifiability,config,config,47326,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47452,Modifiability,config,config,47452,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48057,Modifiability,config,config,48057,"sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48167,Modifiability,config,config,48167,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48293,Modifiability,config,config,48293,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48898,Modifiability,config,config,48898,"sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49008,Modifiability,config,config,49008,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49134,Modifiability,config,config,49134,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49738,Modifiability,config,config,49738,"/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49848,Modifiability,config,config,49848,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49974,Modifiability,config,config,49974,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50578,Modifiability,config,config,50578,"x/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50688,Modifiability,config,config,50688,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50814,Modifiability,config,config,50814,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51418,Modifiability,config,config,51418,"x/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51528,Modifiability,config,config,51528,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51654,Modifiability,config,config,51654,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52258,Modifiability,config,config,52258,"x/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52368,Modifiability,config,config,52368,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52494,Modifiability,config,config,52494,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53098,Modifiability,config,config,53098,"x/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53208,Modifiability,config,config,53208,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53334,Modifiability,config,config,53334,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53938,Modifiability,config,config,53938,"x/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54048,Modifiability,config,config,54048,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54174,Modifiability,config,config,54174,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54778,Modifiability,config,config,54778,"x/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54888,Modifiability,config,config,54888,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55014,Modifiability,config,config,55014,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55618,Modifiability,config,config,55618,"x/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55728,Modifiability,config,config,55728,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55854,Modifiability,config,config,55854,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:56458,Modifiability,config,config,56458,"am.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f706904f583 in GOMP_parallel (fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>, data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:56568,Modifiability,config,config,56568,"am.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f706904f583 in GOMP_parallel (fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>, data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:56694,Modifiability,config,config,56694,"am.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f706904f583 in GOMP_parallel (fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>, data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:384,Performance,optimiz,optimized,384,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:407,Performance,optimiz,optimized,407,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:636,Performance,optimiz,optimized,636,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:902,Performance,optimiz,optimized,902,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1314,Performance,optimiz,optimized,1314," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1337,Performance,optimiz,optimized,1337," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1566,Performance,optimiz,optimized,1566,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1832,Performance,optimiz,optimized,1832,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2244,Performance,optimiz,optimized,2244," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2267,Performance,optimiz,optimized,2267," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2496,Performance,optimiz,optimized,2496,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2762,Performance,optimiz,optimized,2762,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3174,Performance,optimiz,optimized,3174," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::all",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3197,Performance,optimiz,optimized,3197," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::all",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3426,Performance,optimiz,optimized,3426,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3692,Performance,optimiz,optimized,3692,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x000000000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4171,Performance,optimiz,optimized,4171,"d::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4194,Performance,optimiz,optimized,4194,"d::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4423,Performance,optimiz,optimized,4423,"nsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4689,Performance,optimiz,optimized,4689,"00000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5101,Performance,optimiz,optimized,5101," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5124,Performance,optimiz,optimized,5124," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5353,Performance,optimiz,optimized,5353,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5619,Performance,optimiz,optimized,5619,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6031,Performance,optimiz,optimized,6031," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6054,Performance,optimiz,optimized,6054," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6283,Performance,optimiz,optimized,6283,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6549,Performance,optimiz,optimized,6549,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6961,Performance,optimiz,optimized,6961," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6984,Performance,optimiz,optimized,6984," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7213,Performance,optimiz,optimized,7213,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7479,Performance,optimiz,optimized,7479,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7891,Performance,optimiz,optimized,7891," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7914,Performance,optimiz,optimized,7914," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8143,Performance,optimiz,optimized,8143,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8409,Performance,optimiz,optimized,8409,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8821,Performance,optimiz,optimized,8821," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8844,Performance,optimiz,optimized,8844," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9073,Performance,optimiz,optimized,9073,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9339,Performance,optimiz,optimized,9339,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9751,Performance,optimiz,optimized,9751," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9774,Performance,optimiz,optimized,9774," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10003,Performance,optimiz,optimized,10003,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10269,Performance,optimiz,optimized,10269,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10681,Performance,optimiz,optimized,10681," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10704,Performance,optimiz,optimized,10704," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10933,Performance,optimiz,optimized,10933,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSe",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11199,Performance,optimiz,optimized,11199,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11570,Performance,optimiz,optimized,11570,"r> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11896,Performance,optimiz,optimized,11896,"std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12228,Performance,optimiz,optimized,12228,"rg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12640,Performance,optimiz,optimized,12640,"c10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12663,Performance,optimiz,optimized,12663,"c10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12892,Performance,optimiz,optimized,12892,"etSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13158,Performance,optimiz,optimized,13158,"le.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13570,Performance,optimiz,optimized,13570," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13593,Performance,optimiz,optimized,13593," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13822,Performance,optimiz,optimized,13822,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14088,Performance,optimiz,optimized,14088,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14500,Performance,optimiz,optimized,14500," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14523,Performance,optimiz,optimized,14523," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14752,Performance,optimiz,optimized,14752,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15018,Performance,optimiz,optimized,15018,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15430,Performance,optimiz,optimized,15430," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15453,Performance,optimiz,optimized,15453," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15682,Performance,optimiz,optimized,15682,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15948,Performance,optimiz,optimized,15948,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16360,Performance,optimiz,optimized,16360," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16383,Performance,optimiz,optimized,16383," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16612,Performance,optimiz,optimized,16612,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16878,Performance,optimiz,optimized,16878,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17290,Performance,optimiz,optimized,17290," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17313,Performance,optimiz,optimized,17313," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17542,Performance,optimiz,optimized,17542,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17808,Performance,optimiz,optimized,17808,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18220,Performance,optimiz,optimized,18220," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18243,Performance,optimiz,optimized,18243," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18472,Performance,optimiz,optimized,18472,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18738,Performance,optimiz,optimized,18738,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19150,Performance,optimiz,optimized,19150," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19173,Performance,optimiz,optimized,19173," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19402,Performance,optimiz,optimized,19402,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19668,Performance,optimiz,optimized,19668,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20080,Performance,optimiz,optimized,20080," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20103,Performance,optimiz,optimized,20103," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20332,Performance,optimiz,optimized,20332,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20598,Performance,optimiz,optimized,20598,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21010,Performance,optimiz,optimized,21010," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21033,Performance,optimiz,optimized,21033," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21262,Performance,optimiz,optimized,21262,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21528,Performance,optimiz,optimized,21528,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21939,Performance,optimiz,optimized,21939,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21962,Performance,optimiz,optimized,21962,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22191,Performance,optimiz,optimized,22191," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22457,Performance,optimiz,optimized,22457,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22868,Performance,optimiz,optimized,22868,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22891,Performance,optimiz,optimized,22891,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23120,Performance,optimiz,optimized,23120," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23386,Performance,optimiz,optimized,23386,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23797,Performance,optimiz,optimized,23797,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23820,Performance,optimiz,optimized,23820,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24049,Performance,optimiz,optimized,24049," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24315,Performance,optimiz,optimized,24315,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24726,Performance,optimiz,optimized,24726,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24749,Performance,optimiz,optimized,24749,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24978,Performance,optimiz,optimized,24978," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25244,Performance,optimiz,optimized,25244,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25655,Performance,optimiz,optimized,25655,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25678,Performance,optimiz,optimized,25678,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25907,Performance,optimiz,optimized,25907," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26173,Performance,optimiz,optimized,26173,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26584,Performance,optimiz,optimized,26584,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26607,Performance,optimiz,optimized,26607,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26836,Performance,optimiz,optimized,26836," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27102,Performance,optimiz,optimized,27102,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27513,Performance,optimiz,optimized,27513,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27536,Performance,optimiz,optimized,27536,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27765,Performance,optimiz,optimized,27765," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28031,Performance,optimiz,optimized,28031,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28442,Performance,optimiz,optimized,28442,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28465,Performance,optimiz,optimized,28465,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28694,Performance,optimiz,optimized,28694," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28960,Performance,optimiz,optimized,28960,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29371,Performance,optimiz,optimized,29371,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29394,Performance,optimiz,optimized,29394,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29623,Performance,optimiz,optimized,29623," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29888,Performance,optimiz,optimized,29888,"p:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29910,Performance,optimiz,optimized,29910,"p:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29953,Performance,optimiz,optimized,29953,"at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimis",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:623,Usability,clear,clear,623,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1553,Usability,clear,clear,1553,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2483,Usability,clear,clear,2483,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3413,Usability,clear,clear,3413,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4410,Usability,clear,clear,4410,"nsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5340,Usability,clear,clear,5340,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6270,Usability,clear,clear,6270,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7200,Usability,clear,clear,7200,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8130,Usability,clear,clear,8130,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9060,Usability,clear,clear,9060,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9990,Usability,clear,clear,9990,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10920,Usability,clear,clear,10920,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSe",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12879,Usability,clear,clear,12879,"etSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13809,Usability,clear,clear,13809,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14739,Usability,clear,clear,14739,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15669,Usability,clear,clear,15669,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16599,Usability,clear,clear,16599,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17529,Usability,clear,clear,17529,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18459,Usability,clear,clear,18459,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19389,Usability,clear,clear,19389,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20319,Usability,clear,clear,20319,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21249,Usability,clear,clear,21249,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22178,Usability,clear,clear,22178," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23107,Usability,clear,clear,23107," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24036,Usability,clear,clear,24036," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24965,Usability,clear,clear,24965," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25894,Usability,clear,clear,25894," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26823,Usability,clear,clear,26823," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27752,Usability,clear,clear,27752," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28681,Usability,clear,clear,28681," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29610,Usability,clear,clear,29610," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608
https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134889688:252,Usability,simpl,simpler,252,"Seems like all threads finished except one that is stuck computing the largest (or one of the largest) cluster(s). The main time is being spent in computing context specific pseudo counts, which was implemented a couple versions ago. You can force the simpler pseudo count computation with `--pseudo-cnt-mode 0`. This will result in a slight decrease of profile diversity, though be much faster.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134889688
https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009:68,Security,access,accessions,68,Essentially you need:; * three FASTA files with headers with unique accessions and the amino acid sequences.; * one TSV files that goes from accession to numeric taxonomy id; * combined *.dmp files. With all of that you can call:. ```; mmseqs createdb gtdb.fasta virus.fasta euks.fasta seqdb; mmseqs createtaxdb seqdb tmp --tax-mapping-file accession_to_taxid.tsv --ncbi-tax-dump path-to-dmp-files-dir/; ```. `seqdb` will then be a normal taxonomy database. for the tsv files you have to check that the second column (containing the accessions) in the `seqdb.lookup` file that is created after calling `createdb` matches the accessions in the first column in your tsv file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009
https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009:141,Security,access,accession,141,Essentially you need:; * three FASTA files with headers with unique accessions and the amino acid sequences.; * one TSV files that goes from accession to numeric taxonomy id; * combined *.dmp files. With all of that you can call:. ```; mmseqs createdb gtdb.fasta virus.fasta euks.fasta seqdb; mmseqs createtaxdb seqdb tmp --tax-mapping-file accession_to_taxid.tsv --ncbi-tax-dump path-to-dmp-files-dir/; ```. `seqdb` will then be a normal taxonomy database. for the tsv files you have to check that the second column (containing the accessions) in the `seqdb.lookup` file that is created after calling `createdb` matches the accessions in the first column in your tsv file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009
https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009:533,Security,access,accessions,533,Essentially you need:; * three FASTA files with headers with unique accessions and the amino acid sequences.; * one TSV files that goes from accession to numeric taxonomy id; * combined *.dmp files. With all of that you can call:. ```; mmseqs createdb gtdb.fasta virus.fasta euks.fasta seqdb; mmseqs createtaxdb seqdb tmp --tax-mapping-file accession_to_taxid.tsv --ncbi-tax-dump path-to-dmp-files-dir/; ```. `seqdb` will then be a normal taxonomy database. for the tsv files you have to check that the second column (containing the accessions) in the `seqdb.lookup` file that is created after calling `createdb` matches the accessions in the first column in your tsv file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009
https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009:625,Security,access,accessions,625,Essentially you need:; * three FASTA files with headers with unique accessions and the amino acid sequences.; * one TSV files that goes from accession to numeric taxonomy id; * combined *.dmp files. With all of that you can call:. ```; mmseqs createdb gtdb.fasta virus.fasta euks.fasta seqdb; mmseqs createtaxdb seqdb tmp --tax-mapping-file accession_to_taxid.tsv --ncbi-tax-dump path-to-dmp-files-dir/; ```. `seqdb` will then be a normal taxonomy database. for the tsv files you have to check that the second column (containing the accessions) in the `seqdb.lookup` file that is created after calling `createdb` matches the accessions in the first column in your tsv file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009
https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:388,Availability,error,error,388,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781
https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:556,Deployability,pipeline,pipeline,556,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781
https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:545,Testability,test,tested,545,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781
https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147:124,Deployability,update,update,124,I just looked up when the commit you listed (`113e3212c137d026e297c7540e1fcd039f6812b1`) is is from and its ancient. please update to the latest release and everything should work fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147
https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147:145,Deployability,release,release,145,I just looked up when the commit you listed (`113e3212c137d026e297c7540e1fcd039f6812b1`) is is from and its ancient. please update to the latest release and everything should work fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147
https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096:122,Availability,down,download,122,"Thanks a lot @AndrazMarinc and @milot-mirdita . It worked. Also I found another solution, the file ""prot.accession2taxid"" download from NCBI needs modification. Only two columns (accession.version and taxid) are needed to run createtaxdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096
https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096:179,Security,access,accession,179,"Thanks a lot @AndrazMarinc and @milot-mirdita . It worked. Also I found another solution, the file ""prot.accession2taxid"" download from NCBI needs modification. Only two columns (accession.version and taxid) are needed to run createtaxdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096
https://github.com/soedinglab/MMseqs2/issues/858#issuecomment-2210375133:213,Testability,log,log,213,We ran the following command:; ```; mmseqs easy-cluster orig_seqs.fasta 80ANI_cluster_nospace tmp --spaced-kmer-mode 0 --min-seq-id 0.8 --cov-mode 1 -c 0.8; ```. And it looks fine. Could you please post the whole log of the new run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/858#issuecomment-2210375133
https://github.com/soedinglab/MMseqs2/issues/861#issuecomment-2212557728:93,Usability,clear,clear,93,@milot-mirdita Thanks so much for this clarification. I noticed this page before just wasn't clear to me how it impacted my scores. Fixed my issue. I'm interested in linclust's workflow so I'm running through linclust's prefiltering and alignment step! I'd like to see the alignmentDB before the greedy set cover algo.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861#issuecomment-2212557728
https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436:118,Availability,down,down,118,"I am having a hard time creating a minimal reference sequence to reproduce the crash. If I reduce the target database down to only the aligned sequence, it doesn't happen. The command line in question is . ```mmseqs convertali querydb targetdb --format-output query,target,qstart,qend,tstart,tend,raw,cigar,qaln,taln,qlen --search-type 3```. I will continue to try and make a minimal reproducible example. I did notice that adding a `N` to the start of my query sequence solves the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436
https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436:91,Energy Efficiency,reduce,reduce,91,"I am having a hard time creating a minimal reference sequence to reproduce the crash. If I reduce the target database down to only the aligned sequence, it doesn't happen. The command line in question is . ```mmseqs convertali querydb targetdb --format-output query,target,qstart,qend,tstart,tend,raw,cigar,qaln,taln,qlen --search-type 3```. I will continue to try and make a minimal reproducible example. I did notice that adding a `N` to the start of my query sequence solves the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436
https://github.com/soedinglab/MMseqs2/issues/868#issuecomment-2260217457:190,Safety,safe,safe,190,"How does the truncated length make it into the index file though?; In https://github.com/soedinglab/MMseqs2/blob/master/src/prefiltering/PrefilteringIndexReader.cpp#L247, things look 64-bit safe.; Calls https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L403, which eventually calls https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L379 where the length is computed from offsets.; And eventually formatted to text as a 64-bit integer https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L415.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868#issuecomment-2260217457
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285:26,Availability,error,error,26,"I'm also was getting this error earlier...and interestingly only on Linux (seemed to work fine on MacOS for me). Strangely, it now seems to be working again for me since about a 10 minutes ago, despite having the exact same setup as I had when I was getting the error. `MMseqs2 Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285:262,Availability,error,error,262,"I'm also was getting this error earlier...and interestingly only on Linux (seemed to work fine on MacOS for me). Strangely, it now seems to be working again for me since about a 10 minutes ago, despite having the exact same setup as I had when I was getting the error. `MMseqs2 Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285363375:38,Availability,down,download,38,Does this happen with the `databases` download of the uniprot or only if you call `createtaxdb` manually?. `databases` goes through a separate branch to extract taxonomic information from uniprot based databases and should not be affected.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285363375
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321:40,Availability,down,download,40,> Does this happen with the `databases` download of the uniprot or only if you call `createtaxdb` manually?; > ; > `databases` goes through a separate branch to extract taxonomic information from uniprot based databases and should not be affected. Thanks for supporting us! This happens when calling createtaxdb manually. . Would you please elaborate on what `databases download` entails in this context?. To zoom out a bit: is there a feasible mmseqs2 command to generate .a3m files with correct UniRef100 taxonomy identifiers without going through this custom database setup procedure?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321:370,Availability,down,download,370,> Does this happen with the `databases` download of the uniprot or only if you call `createtaxdb` manually?; > ; > `databases` goes through a separate branch to extract taxonomic information from uniprot based databases and should not be affected. Thanks for supporting us! This happens when calling createtaxdb manually. . Would you please elaborate on what `databases download` entails in this context?. To zoom out a bit: is there a feasible mmseqs2 command to generate .a3m files with correct UniRef100 taxonomy identifiers without going through this custom database setup procedure?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242:57,Availability,down,download,57,```; mmseqs databases UniProtKB uniprot tmp; ```. should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:69,Availability,down,download,69,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:722,Availability,error,error,722,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:735,Performance,Load,Loading,735,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:507,Testability,test,test,507,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:524,Testability,test,test,524,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:537,Testability,test,test,537,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:67,Deployability,integrat,integration,67,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:629,Deployability,integrat,integrating,629,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:67,Integrability,integrat,integration,67,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:629,Integrability,integrat,integrating,629,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678:230,Deployability,integrat,integrating,230,"@milot-mirdita ; Some template black magic seems pretty convenient (albeit a little dangerous). I'll try looking into it and check if it breaks anything. > But martin is also right, a 30% increase in RAM is not that much. Then if integrating the new linclust into our old version with dynamic memory allocation gets too ugly, I'll consider giving up on the 6 bytes of memory, or even removing the old version entirely. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678:230,Integrability,integrat,integrating,230,"@milot-mirdita ; Some template black magic seems pretty convenient (albeit a little dangerous). I'll try looking into it and check if it breaks anything. > But martin is also right, a 30% increase in RAM is not that much. Then if integrating the new linclust into our old version with dynamic memory allocation gets too ugly, I'll consider giving up on the 6 bytes of memory, or even removing the old version entirely. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678
https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2314224992:77,Safety,avoid,avoid,77,We do have templates already implemented. I guess it wouldn’t be too hard to avoid the extra 6 byte.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2314224992
https://github.com/soedinglab/MMseqs2/pull/880#issuecomment-2319821146:9,Testability,test,testing,9,finished testing,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880#issuecomment-2319821146
https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2351499214:16,Availability,error,error,16,I have the same error when running a NT search in mmseq2 NT NCBI database. I am running on our internal server with 256 GB memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2351499214
https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2376983474:26,Availability,error,errors,26,"I've encountered segfault errors with mmseqs due to not enough memory (which is a valid reason for segfaults, according to quick web search). Large databases like NT/GTDB might need around 900GB RAM, so I would guess too little RAM is the reason in your cases as well.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2376983474
https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211:19,Availability,Down,Downloaded,19,"What i did was (1) Downloaded gtdb_genomes_reps.tar.gz and then combined all the fa files into one fa file. (2) downloaded ar53_taxonomy.tsv and bac120_taxonomy.tsv, also combined them into one tsv. (3) mmseqs createdb combined.fa gtdb_seqs (4) mmseqs createtaxdb gtdb_seqs tmp --tax-mapping-file combined.tsv --threads 50. There was no error showed in the whole process. However, when I tried to use ""mmseqs taxonomy"" function to seach one contig.fa file, all the contigs were unclassified. Could you please advise where I did wrongly?. Thanks a lot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211
https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211:112,Availability,down,downloaded,112,"What i did was (1) Downloaded gtdb_genomes_reps.tar.gz and then combined all the fa files into one fa file. (2) downloaded ar53_taxonomy.tsv and bac120_taxonomy.tsv, also combined them into one tsv. (3) mmseqs createdb combined.fa gtdb_seqs (4) mmseqs createtaxdb gtdb_seqs tmp --tax-mapping-file combined.tsv --threads 50. There was no error showed in the whole process. However, when I tried to use ""mmseqs taxonomy"" function to seach one contig.fa file, all the contigs were unclassified. Could you please advise where I did wrongly?. Thanks a lot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211
https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211:337,Availability,error,error,337,"What i did was (1) Downloaded gtdb_genomes_reps.tar.gz and then combined all the fa files into one fa file. (2) downloaded ar53_taxonomy.tsv and bac120_taxonomy.tsv, also combined them into one tsv. (3) mmseqs createdb combined.fa gtdb_seqs (4) mmseqs createtaxdb gtdb_seqs tmp --tax-mapping-file combined.tsv --threads 50. There was no error showed in the whole process. However, when I tried to use ""mmseqs taxonomy"" function to seach one contig.fa file, all the contigs were unclassified. Could you please advise where I did wrongly?. Thanks a lot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211
https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:8,Availability,down,download,8,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849
https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:614,Deployability,RELEASE,RELEASE,614,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849
https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:700,Deployability,install,install,700,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849
https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:652,Modifiability,Config,Configure,652,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849
https://github.com/soedinglab/MMseqs2/issues/887#issuecomment-2356934879:1032,Performance,load,load-mode,1032,"Actually Now I have used; For the next step, an index file of the targetDB is computed for a fast read-in. It is recommended; to compute the index if the targetDB is reused for several searches. If only few searches against this; database will be done, this step should be skipped.; mmseqs createindex targetDB tmp; This call will create a targetDB.idx file. It is just possible to have one index per database.; Then generate a directory for temporary files. MMseqs2 can produce a high IO on the file system.; It is recommended to create this temporary folder on a local drive.; Then after I got ; tmp uniprotdb.dbtype uniprotdb_h.dbtype uniprotdb.idx.0 uniprotdb.idx.2 uniprotdb.idx.4 uniprotdb.idx.index uniprotdb.lookup; uniprotdb uniprotdb_h uniprotdb_h.index uniprotdb.idx.1 uniprotdb.idx.3 uniprotdb.idx.dbtype uniprotdb.index uniprotdb.source. so now I am confused which **idx file** needs to be considered ?; ; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887#issuecomment-2356934879
https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174:235,Deployability,integrat,integrating,235,"I would recommend to just use UniProt instead of NR. it’s much better maintained, especially with the versioning. Any annotations against the NR are essentially unreproducible due to the lack of versioning by the NCBI. I don’t plan on integrating the blast databases for the foreseeable future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174
https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174:235,Integrability,integrat,integrating,235,"I would recommend to just use UniProt instead of NR. it’s much better maintained, especially with the versioning. Any annotations against the NR are essentially unreproducible due to the lack of versioning by the NCBI. I don’t plan on integrating the blast databases for the foreseeable future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599:139,Availability,down,down,139,"25 million MSAs is quite considerable. Following is a brain dump of some things to consider. Sorry it’s not super organized. You can scale down sensitivity. `-s 6` might be sufficient and much faster than the default. You can consider searching only against the uniref and omitting the colabfold db. I think a batch size of 50k-100k queries is probably going to work to be sufficient. I have also recently tweaked the setup_databases.sh script to not store the databases in a compressed form, this will increase RAM use but avoid constant decompression. However, I’ve not commited this change yet. Storage space is likely going to be one of the bigger issues, since 25M MSA will be quite large. You might want to extract the mmseqs shell commands from the colabfold_search python script (https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py) so you have an easier time tweaking them. One option might be to run all searches in batches, but not run the final result2msa and unpackdb steps yet, as they are comparatively cheap and the filesize increases a lot from the internal result format to the MSA a3m format. You can also run another mmseqs module here (filterdb --extract-lines) to return only a maximum number hits to be converted to a MSA. Currently, colabfold_search materializes each MSA as an individual file to the file system (through the unpackdb) call. We have been meaning to make colabfold_batch work directly with the internal database format. I assume you don’t actually want to ran 25M structure predictions and instead want to run something else that is faster. You might want to implement something that reads from the MMseqs2 databases directly, this will save a lot of filesystem headache.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599:524,Safety,avoid,avoid,524,"25 million MSAs is quite considerable. Following is a brain dump of some things to consider. Sorry it’s not super organized. You can scale down sensitivity. `-s 6` might be sufficient and much faster than the default. You can consider searching only against the uniref and omitting the colabfold db. I think a batch size of 50k-100k queries is probably going to work to be sufficient. I have also recently tweaked the setup_databases.sh script to not store the databases in a compressed form, this will increase RAM use but avoid constant decompression. However, I’ve not commited this change yet. Storage space is likely going to be one of the bigger issues, since 25M MSA will be quite large. You might want to extract the mmseqs shell commands from the colabfold_search python script (https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py) so you have an easier time tweaking them. One option might be to run all searches in batches, but not run the final result2msa and unpackdb steps yet, as they are comparatively cheap and the filesize increases a lot from the internal result format to the MSA a3m format. You can also run another mmseqs module here (filterdb --extract-lines) to return only a maximum number hits to be converted to a MSA. Currently, colabfold_search materializes each MSA as an individual file to the file system (through the unpackdb) call. We have been meaning to make colabfold_batch work directly with the internal database format. I assume you don’t actually want to ran 25M structure predictions and instead want to run something else that is faster. You might want to implement something that reads from the MMseqs2 databases directly, this will save a lot of filesystem headache.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599:1538,Safety,predict,predictions,1538,"25 million MSAs is quite considerable. Following is a brain dump of some things to consider. Sorry it’s not super organized. You can scale down sensitivity. `-s 6` might be sufficient and much faster than the default. You can consider searching only against the uniref and omitting the colabfold db. I think a batch size of 50k-100k queries is probably going to work to be sufficient. I have also recently tweaked the setup_databases.sh script to not store the databases in a compressed form, this will increase RAM use but avoid constant decompression. However, I’ve not commited this change yet. Storage space is likely going to be one of the bigger issues, since 25M MSA will be quite large. You might want to extract the mmseqs shell commands from the colabfold_search python script (https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py) so you have an easier time tweaking them. One option might be to run all searches in batches, but not run the final result2msa and unpackdb steps yet, as they are comparatively cheap and the filesize increases a lot from the internal result format to the MSA a3m format. You can also run another mmseqs module here (filterdb --extract-lines) to return only a maximum number hits to be converted to a MSA. Currently, colabfold_search materializes each MSA as an individual file to the file system (through the unpackdb) call. We have been meaning to make colabfold_batch work directly with the internal database format. I assume you don’t actually want to ran 25M structure predictions and instead want to run something else that is faster. You might want to implement something that reads from the MMseqs2 databases directly, this will save a lot of filesystem headache.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:504,Performance,load,load-mode,504,"@milot-mirdita Thanks for your response! This is good stuff. I hadn't considered the point about data size, though I do have a number of TB to work with. . Re. batching, is there a built in module to chunk up the query db or should I manually split my fasta and make seperate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:960,Performance,load,load-mode,960,"@milot-mirdita Thanks for your response! This is good stuff. I hadn't considered the point about data size, though I do have a number of TB to work with. . Re. batching, is there a built in module to chunk up the query db or should I manually split my fasta and make seperate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1109,Performance,load,load-mode,1109,"ed the point about data size, though I do have a number of TB to work with. . Re. batching, is there a built in module to chunk up the query db or should I manually split my fasta and make seperate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/Uni",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1337,Performance,load,load-mode,1337,"perate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --th",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1614,Performance,load,load-mode,1614,"r/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1915,Performance,load,load-mode,1915,"abfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2253,Performance,load,load-mode,2253,"accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2435,Performance,load,load-mode,2435,"--max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2687,Performance,load,load-mode,2687,"6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2981,Performance,load,load-mode,2981,"n environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max_accept (for alignment); diff -> (filter) 256. Thanks again. EDIT: Since I am doing an iterative search, would we expect an indexed and in memory target DB to speed up search? I am gathering no based on other conversations given that my use case is large batches and not single queries?. EDIT2: Re. the purpose - correct, I have no need to run structure prediction. The MSAs are going into MSATransfor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:3961,Safety,predict,prediction,3961,"ld_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max_accept (for alignment); diff -> (filter) 256. Thanks again. EDIT: Since I am doing an iterative search, would we expect an indexed and in memory target DB to speed up search? I am gathering no based on other conversations given that my use case is large batches and not single queries?. EDIT2: Re. the purpose - correct, I have no need to run structure prediction. The MSAs are going into MSATransformer, so there is no point for them to be extremely large or contain remote fragments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326
